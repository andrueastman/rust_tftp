{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Erp.BO.LaborSvc",
    "description": "Labor Entry Business Object"
  },
  "host": "HostMachine",
  "basePath": "/EpicorInstance/api/v2/odata",
  "schemes": [ "https" ],
  "consumes": [ "application/json", "text/json" ],
  "produces": [ "application/json", "text/json" ],
  "paths": {
    "/{currentCompany}/Erp.BO.LaborSvc/": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Get service document",
        "description": "Get service document for the service",
        "operationId": "GetServiceDocument",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/$metadata": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Get metadata document",
        "description": "Get service OData metadata in XML format",
        "operationId": "GetMetadata",
        "consumes": [],
        "produces": [ "application/xml" ],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": { "200": { "description": "Returns metadata document" } }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Labors": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve Labor items",
        "description": "Get Labor items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_Labors",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_Labors",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.Labor" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.Labor" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Labors('{Company}',{LaborHedSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve Labor item",
        "description": "Calls GetRows to retrieve Labor item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_Labor",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.Labor" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete Labor item",
        "description": "Call UpdateExt to delete Labor item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_Labor",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update Labor for the service",
        "description": "Calls UpdateExt to update Labor.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_Labor",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.Labor" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Labors('{Company}',{LaborHedSeq})/LaborDtls": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtl items",
        "description": "Get LaborDtl items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_Labor_LaborDtls",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Labors('{Company}',{LaborHedSeq})/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtl item",
        "description": "Calls GetRows to retrieve LaborDtl item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_Labor_LaborDtl",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtl" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtl items",
        "description": "Get LaborDtl items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtls",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborDtls",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtl" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborDtl" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtl item",
        "description": "Calls GetRows to retrieve LaborDtl item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_expand" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtl" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborDtl item",
        "description": "Call UpdateExt to delete LaborDtl item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborDtl",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborDtl for the service",
        "description": "Calls UpdateExt to update LaborDtl.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborDtl",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtl" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborDtlAttches": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlAttch items",
        "description": "Get LaborDtlAttch items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborDtlAttches",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttchSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborDtlAttches('{Company}',{LaborHedSeq},{LaborDtlSeq},{DrawingSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlAttch item",
        "description": "Calls GetRows to retrieve LaborDtlAttch item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborDtlAttch",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DrawingSeq",
            "in": "path",
            "description": "DrawingSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborDtlComments": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlComment items",
        "description": "Get LaborDtlComment items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborDtlComments",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlCommentSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborDtlComments('{Company}',{LaborHedSeq},{LaborDtlSeq},{CommentNum})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlComment item",
        "description": "Calls GetRows to retrieve LaborDtlComment item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborDtlComment",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CommentNum",
            "in": "path",
            "description": "CommentNum",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlComment" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborEquips": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborEquip items",
        "description": "Get LaborEquip items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborEquips",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborEquipSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborEquips('{Company}',{LaborHedSeq},{LaborDtlSeq},'{EquipID}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborEquip item",
        "description": "Calls GetRows to retrieve LaborEquip item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborEquip",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EquipID",
            "in": "path",
            "description": "EquipID",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborEquip" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborParts": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborPart items",
        "description": "Get LaborPart items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborParts",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborPartSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LaborParts('{Company}',{LaborHedSeq},{LaborDtlSeq},'{PartNum}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborPart item",
        "description": "Calls GetRows to retrieve LaborPart item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LaborPart",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborPart" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LbrScrapSerialNumbers": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LbrScrapSerialNumber items",
        "description": "Get LbrScrapSerialNumber items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LbrScrapSerialNumbers",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumberSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtls('{Company}',{LaborHedSeq},{LaborDtlSeq})/LbrScrapSerialNumbers('{Company}',{LaborHedSeq},{LaborDtlSeq},'{SerialNumber}',{AssemblySeq},{OprSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LbrScrapSerialNumber item",
        "description": "Calls GetRows to retrieve LbrScrapSerialNumber item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtl_LbrScrapSerialNumber",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlAttches": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlAttch items",
        "description": "Get LaborDtlAttch items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlAttches",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttchSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborDtlAttches",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlAttches('{Company}',{LaborHedSeq},{LaborDtlSeq},{DrawingSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlAttch item",
        "description": "Calls GetRows to retrieve LaborDtlAttch item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlAttch",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DrawingSeq",
            "in": "path",
            "description": "DrawingSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborDtlAttch item",
        "description": "Call UpdateExt to delete LaborDtlAttch item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborDtlAttch",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DrawingSeq",
            "in": "path",
            "description": "DrawingSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborDtlAttch for the service",
        "description": "Calls UpdateExt to update LaborDtlAttch.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborDtlAttch",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "DrawingSeq",
            "in": "path",
            "description": "DrawingSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlComments": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlComment items",
        "description": "Get LaborDtlComment items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlComments",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlCommentSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborDtlComments",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlComment" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlComment" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlComments('{Company}',{LaborHedSeq},{LaborDtlSeq},{CommentNum})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlComment item",
        "description": "Calls GetRows to retrieve LaborDtlComment item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlComment",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CommentNum",
            "in": "path",
            "description": "CommentNum",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlComment" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborDtlComment item",
        "description": "Call UpdateExt to delete LaborDtlComment item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborDtlComment",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CommentNum",
            "in": "path",
            "description": "CommentNum",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborDtlComment for the service",
        "description": "Calls UpdateExt to update LaborDtlComment.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborDtlComment",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "CommentNum",
            "in": "path",
            "description": "CommentNum",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlComment" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborEquips": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborEquip items",
        "description": "Get LaborEquip items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborEquips",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborEquipSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborEquips",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborEquip" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborEquip" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborEquips('{Company}',{LaborHedSeq},{LaborDtlSeq},'{EquipID}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborEquip item",
        "description": "Calls GetRows to retrieve LaborEquip item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborEquip",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EquipID",
            "in": "path",
            "description": "EquipID",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborEquip" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborEquip item",
        "description": "Call UpdateExt to delete LaborEquip item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborEquip",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EquipID",
            "in": "path",
            "description": "EquipID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborEquip for the service",
        "description": "Calls UpdateExt to update LaborEquip.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborEquip",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "EquipID",
            "in": "path",
            "description": "EquipID",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborEquip" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborParts": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborPart items",
        "description": "Get LaborPart items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborParts",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborPartSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborParts",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborPart" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborPart" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborParts('{Company}',{LaborHedSeq},{LaborDtlSeq},'{PartNum}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborPart item",
        "description": "Calls GetRows to retrieve LaborPart item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborPart",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborPart" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborPart item",
        "description": "Call UpdateExt to delete LaborPart item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborPart",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborPart for the service",
        "description": "Calls UpdateExt to update LaborPart.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborPart",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborPart" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LbrScrapSerialNumbers": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LbrScrapSerialNumber items",
        "description": "Get LbrScrapSerialNumber items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LbrScrapSerialNumbers",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumberSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LbrScrapSerialNumbers",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LbrScrapSerialNumbers('{Company}',{LaborHedSeq},{LaborDtlSeq},'{SerialNumber}',{AssemblySeq},{OprSeq})": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LbrScrapSerialNumber item",
        "description": "Calls GetRows to retrieve LbrScrapSerialNumber item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LbrScrapSerialNumber",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LbrScrapSerialNumber item",
        "description": "Call UpdateExt to delete LbrScrapSerialNumber item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LbrScrapSerialNumber",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LbrScrapSerialNumber for the service",
        "description": "Calls UpdateExt to update LbrScrapSerialNumber.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LbrScrapSerialNumber",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborHedSeq",
            "in": "path",
            "description": "LaborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "LaborDtlSeq",
            "in": "path",
            "description": "LaborDtlSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlGroups": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlGroup items",
        "description": "Get LaborDtlGroup items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlGroups",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlGroupSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_LaborDtlGroups",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlGroup" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlGroup" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlGroups('{Company}','{EmployeeNum}','{ClaimRef}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve LaborDtlGroup item",
        "description": "Calls GetRows to retrieve LaborDtlGroup item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_LaborDtlGroup",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "ClaimRef",
            "in": "path",
            "description": "ClaimRef",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborDtlGroup" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete LaborDtlGroup item",
        "description": "Call UpdateExt to delete LaborDtlGroup item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_LaborDtlGroup",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "ClaimRef",
            "in": "path",
            "description": "ClaimRef",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update LaborDtlGroup for the service",
        "description": "Calls UpdateExt to update LaborDtlGroup.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_LaborDtlGroup",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "ClaimRef",
            "in": "path",
            "description": "ClaimRef",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.LaborDtlGroup" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SelectedSerialNumbers": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve SelectedSerialNumber items",
        "description": "Get SelectedSerialNumber items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_SelectedSerialNumbers",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.SelectedSerialNumberSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_SelectedSerialNumbers",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.SelectedSerialNumber" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.SelectedSerialNumber" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SelectedSerialNumbers('{Company}','{SerialNumber}','{PartNum}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve SelectedSerialNumber item",
        "description": "Calls GetRows to retrieve SelectedSerialNumber item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_SelectedSerialNumber",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.SelectedSerialNumber" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete SelectedSerialNumber item",
        "description": "Call UpdateExt to delete SelectedSerialNumber item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_SelectedSerialNumber",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update SelectedSerialNumber for the service",
        "description": "Calls UpdateExt to update SelectedSerialNumber.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_SelectedSerialNumber",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "SerialNumber",
            "in": "path",
            "description": "SerialNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.SelectedSerialNumber" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SNFormats": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve SNFormat items",
        "description": "Get SNFormat items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_SNFormats",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.SNFormatSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_SNFormats",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.SNFormat" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.SNFormat" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SNFormats('{Company}','{Plant}','{PartNum}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve SNFormat item",
        "description": "Calls GetRows to retrieve SNFormat item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_SNFormat",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "Plant",
            "in": "path",
            "description": "Plant",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.SNFormat" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete SNFormat item",
        "description": "Call UpdateExt to delete SNFormat item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_SNFormat",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "Plant",
            "in": "path",
            "description": "Plant",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update SNFormat for the service",
        "description": "Calls UpdateExt to update SNFormat.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_SNFormat",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "Plant",
            "in": "path",
            "description": "Plant",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartNum",
            "in": "path",
            "description": "PartNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.SNFormat" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/TimeWeeklyViews": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve TimeWeeklyView items",
        "description": "Get TimeWeeklyView items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_TimeWeeklyViews",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.TimeWeeklyViewSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_TimeWeeklyViews",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.TimeWeeklyView" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.TimeWeeklyView" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/TimeWeeklyViews('{Company}','{EmployeeNum}',{WeekBeginDate},{WeekEndDate},'{QuickEntryCode}','{ProjectID}','{PhaseID}','{TimeTypCd}','{JobNum}',{AssemblySeq},{OprSeq},'{RoleCd}','{IndirectCode}','{ExpenseCode}','{ResourceGrpID}','{ResourceID}','{LaborTypePseudo}',{Shift},'{NewRowType}','{TimeStatus}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve TimeWeeklyView item",
        "description": "Calls GetRows to retrieve TimeWeeklyView item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_TimeWeeklyView",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QuickEntryCode",
            "in": "path",
            "description": "QuickEntryCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProjectID",
            "in": "path",
            "description": "ProjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "PhaseID",
            "in": "path",
            "description": "PhaseID",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeTypCd",
            "in": "path",
            "description": "TimeTypCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "JobNum",
            "in": "path",
            "description": "JobNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "RoleCd",
            "in": "path",
            "description": "RoleCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "IndirectCode",
            "in": "path",
            "description": "IndirectCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ExpenseCode",
            "in": "path",
            "description": "ExpenseCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceGrpID",
            "in": "path",
            "description": "ResourceGrpID",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceID",
            "in": "path",
            "description": "ResourceID",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborTypePseudo",
            "in": "path",
            "description": "LaborTypePseudo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Shift",
            "in": "path",
            "description": "Shift",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "NewRowType",
            "in": "path",
            "description": "NewRowType",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeStatus",
            "in": "path",
            "description": "TimeStatus",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.TimeWeeklyView" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete TimeWeeklyView item",
        "description": "Call UpdateExt to delete TimeWeeklyView item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_TimeWeeklyView",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QuickEntryCode",
            "in": "path",
            "description": "QuickEntryCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProjectID",
            "in": "path",
            "description": "ProjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "PhaseID",
            "in": "path",
            "description": "PhaseID",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeTypCd",
            "in": "path",
            "description": "TimeTypCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "JobNum",
            "in": "path",
            "description": "JobNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "RoleCd",
            "in": "path",
            "description": "RoleCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "IndirectCode",
            "in": "path",
            "description": "IndirectCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ExpenseCode",
            "in": "path",
            "description": "ExpenseCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceGrpID",
            "in": "path",
            "description": "ResourceGrpID",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceID",
            "in": "path",
            "description": "ResourceID",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborTypePseudo",
            "in": "path",
            "description": "LaborTypePseudo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Shift",
            "in": "path",
            "description": "Shift",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "NewRowType",
            "in": "path",
            "description": "NewRowType",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeStatus",
            "in": "path",
            "description": "TimeStatus",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update TimeWeeklyView for the service",
        "description": "Calls UpdateExt to update TimeWeeklyView.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_TimeWeeklyView",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "QuickEntryCode",
            "in": "path",
            "description": "QuickEntryCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ProjectID",
            "in": "path",
            "description": "ProjectID",
            "required": true,
            "type": "string"
          },
          {
            "name": "PhaseID",
            "in": "path",
            "description": "PhaseID",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeTypCd",
            "in": "path",
            "description": "TimeTypCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "JobNum",
            "in": "path",
            "description": "JobNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "AssemblySeq",
            "in": "path",
            "description": "AssemblySeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OprSeq",
            "in": "path",
            "description": "OprSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "RoleCd",
            "in": "path",
            "description": "RoleCd",
            "required": true,
            "type": "string"
          },
          {
            "name": "IndirectCode",
            "in": "path",
            "description": "IndirectCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ExpenseCode",
            "in": "path",
            "description": "ExpenseCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceGrpID",
            "in": "path",
            "description": "ResourceGrpID",
            "required": true,
            "type": "string"
          },
          {
            "name": "ResourceID",
            "in": "path",
            "description": "ResourceID",
            "required": true,
            "type": "string"
          },
          {
            "name": "LaborTypePseudo",
            "in": "path",
            "description": "LaborTypePseudo",
            "required": true,
            "type": "string"
          },
          {
            "name": "Shift",
            "in": "path",
            "description": "Shift",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "NewRowType",
            "in": "path",
            "description": "NewRowType",
            "required": true,
            "type": "string"
          },
          {
            "name": "TimeStatus",
            "in": "path",
            "description": "TimeStatus",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.TimeWeeklyView" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/TimeWorkHours": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve TimeWorkHour items",
        "description": "Get TimeWorkHour items from the server using GetRows standard method.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_TimeWorkHours",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.TimeWorkHourSetResponse" }
          }
        }
      },
      "post": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to create new item for the service",
        "description": "Calls UpdateExt to create new item for the service.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Add_UpdateExt_TimeWorkHours",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.TimeWorkHour" }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource is created. Operation is successful.",
            "schema": { "$ref": "#/definitions/Erp.TimeWorkHour" }
          },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/TimeWorkHours('{Company}',{WeekBeginDate},{WeekEndDate},'{EmployeeNum}')": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetRows to retrieve TimeWorkHour item",
        "description": "Calls GetRows to retrieve TimeWorkHour item by specified keys.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetRows_TimeWorkHour",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.TimeWorkHour" }
          }
        }
      },
      "delete": {
        "tags": [ "OData" ],
        "summary": "Call UpdateExt to delete TimeWorkHour item",
        "description": "Call UpdateExt to delete TimeWorkHour item.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "Delete_UpdateExt_TimeWorkHour",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "patch": {
        "tags": [ "OData" ],
        "summary": "Calls UpdateExt to update TimeWorkHour for the service",
        "description": "Calls UpdateExt to update TimeWorkHour.<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "UpdateExt_TimeWorkHour",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "Company",
            "in": "path",
            "description": "Company",
            "required": true,
            "type": "string"
          },
          {
            "name": "WeekBeginDate",
            "in": "path",
            "description": "WeekBeginDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "WeekEndDate",
            "in": "path",
            "description": "WeekEndDate",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EmployeeNum",
            "in": "path",
            "description": "EmployeeNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Erp.TimeWorkHour" }
          }
        ],
        "responses": {
          "204": { "description": "No Content. Operation is successful." },
          "400": { "description": "Unable to deserialize entity. Input data is not in correct format." },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/List": {
      "get": {
        "tags": [ "OData" ],
        "summary": "Calls GetList for the service",
        "description": "Get list of items<div>OData-specific rules:<ul><li>OData $-parameters data are case-sensitive</li><li>String parameters should be specified in single quotes</li></ul></div>",
        "operationId": "GetList",
        "consumes": [],
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          { "$ref": "#/parameters/op_select" },
          { "$ref": "#/parameters/op_filter" },
          { "$ref": "#/parameters/op_orderby" },
          { "$ref": "#/parameters/op_top" },
          { "$ref": "#/parameters/op_skip" },
          { "$ref": "#/parameters/op_count" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Erp.LaborListItemSetResponse" }
          }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/BuildJobOperPrjRoleList": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method BuildJobOperPrjRoleList",
        "description": "This proc will return the whereclause for the role code combo\r\nCustomers",
        "operationId": "BuildJobOperPrjRoleList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/BuildJobOperPrjRoleList_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/BuildJobOperPrjRoleList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeEquipID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeEquipID",
        "description": "This method should call when EquipID is changed",
        "operationId": "ChangeEquipID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeEquipID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeEquipID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeIndirectCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeIndirectCode",
        "description": "This method clears the JobNumber and Quantity fields when the LaborType changes to Indirect\r\nleaves the values as is if changed between Production and Setup",
        "operationId": "ChangeIndirectCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeIndirectCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeIndirectCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeLaborType": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeLaborType",
        "description": "This method clears the JobNumber and Quantity fields when the LaborType changes to Indirect\r\nleaves the values as is if changed between Production and Setup",
        "operationId": "ChangeLaborType",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeLaborType_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeLaborType_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckResourceId": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckResourceId",
        "description": "Main logic from ChangeResourceId to validate the resource id assigned to a Job.\r\nThis method does not depend on a tableset or LaborDtl record.",
        "operationId": "CheckResourceId",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckResourceId_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckResourceId_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeResourceId": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeResourceId",
        "description": "For use with MES (ShopFloor) only.\r\nThis method checks the Resource Group of the proposed Resource, and if it\r\nis different than the current Resource Group, provides a warning question\r\nsuitable for presenting to the user.\r\nThe UI code should place the user's answer to the question in the\r\nttLaborDtl.OkToChangeResourceGrpID.\r\nThis method should be called prior to calling the DefaultResourceID method.",
        "operationId": "ChangeResourceId",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeResourceId_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeResourceId_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckEmployeeActivity": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckEmployeeActivity",
        "description": "This method checks if the current employee is already working on a Job/Asm/Opr/Resource combination\r\nIf he/she is already working on it, the opMessage will be populated with an error message",
        "operationId": "CheckEmployeeActivity",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckEmployeeActivity_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckEmployeeActivity_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckNonConformance": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckNonConformance",
        "description": "Check if there are NonConformance records, if they exists it will ask the user for his approval to delete them",
        "operationId": "CheckNonConformance",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckNonConformance_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckNonConformance_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckFirstArticleWarning": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckFirstArticleWarning",
        "description": "Performs all First Article Validations",
        "operationId": "CheckFirstArticleWarning",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckFirstArticleWarning_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckFirstArticleWarning_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckInspResults": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckInspResults",
        "description": "This method validates if InspResults has been entered when the Inspection Data is allowed for the current OprSeq.",
        "operationId": "CheckInspResults",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckInspResults_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckInspResults_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckResourceGroup": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckResourceGroup",
        "description": "This method checks to see if the new resource is in the current resource group.\r\nThis needs to be run right before the DefaultResourceID.  If the user answers\r\nokay then the group will be changed in the DefaultResourceID method.",
        "operationId": "CheckResourceGroup",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckResourceGroup_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckResourceGroup_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CheckWarnings": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CheckWarnings",
        "description": "This method runs the labor warning routine and returns any warnings the user needs\r\nto be aware of.  This needs to be run right before the update method.  If the user answers\r\nokay to all of the questions, then the update method can be run.  Otherwise the labor record\r\nneeds to be corrected",
        "operationId": "CheckWarnings",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CheckWarnings_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CheckWarnings_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/chkReportQtyShopWarn": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method chkReportQtyShopWarn",
        "operationId": "chkReportQtyShopWarn",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/chkReportQtyShopWarn_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/chkReportQtyShopWarn_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CopyLaborDetail": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CopyLaborDetail",
        "description": "Method to copy the vales from one Labor record to a new Labor record.",
        "operationId": "CopyLaborDetail",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CopyLaborDetail_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CopyLaborDetail_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CopyTimeWeeklyView": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CopyTimeWeeklyView",
        "description": "Method to copy the vales from one Weekly Time record to a new Weekly Time record.",
        "operationId": "CopyTimeWeeklyView",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CopyTimeWeeklyView_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CopyTimeWeeklyView_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultAssemblySeq": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultAssemblySeq",
        "description": "This method sets dataset fields when the AssemblySeq field changes",
        "operationId": "DefaultAssemblySeq",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultAssemblySeq_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultAssemblySeq_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultComplete": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultComplete",
        "description": "This method updates the dataset after complete flag is set",
        "operationId": "DefaultComplete",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultComplete_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultComplete_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultDate": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultDate",
        "description": "This method updates the clock in and clock out dates for the LaborHed and LaborDtl\r\ntables when the payroll date has changed.",
        "operationId": "DefaultDate",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultDate_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultDate_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultDiscrpRsnCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultDiscrpRsnCode",
        "description": "This method defaults fields when the discrepancy reason code field changes.\r\nAlso checks for any warnings the user needs to be aware of",
        "operationId": "DefaultDiscrpRsnCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultDiscrpRsnCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultDiscrpRsnCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultReworkReasonCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultReworkReasonCode",
        "description": "This method defaults fields when the discrepancy reason code field changes.\r\nAlso checks for any warnings the user needs to be aware of",
        "operationId": "DefaultReworkReasonCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultReworkReasonCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultReworkReasonCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultDtlTime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultDtlTime",
        "description": "This method updates the hours when a time field changes",
        "operationId": "DefaultDtlTime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultDtlTime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultDtlTime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultIndirect": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultIndirect",
        "description": "This method defaults the expense code when the indirect code has changed",
        "operationId": "DefaultIndirect",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultIndirect_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultIndirect_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SelectAllForWork": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SelectAllForWork",
        "description": "This method will take the selected rows from the work queue and process them in one server call.\r\nGetNewLaborDtlOnSelectForWork is called for each work queue row, after that SelectForWork will be called filling required information in all the added LaborDtl rows\r\nIf there is any warning that needs user input the method will finish before calling Update and the prompts will be shown to the user, after the UI will call Update to finish.",
        "operationId": "SelectAllForWork",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SelectAllForWork_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SelectAllForWork_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultJobNum": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultJobNum",
        "description": "This method defaults dataset fields when the JobNum field changes",
        "operationId": "DefaultJobNum",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultJobNum_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultJobNum_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultLaborHrs": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultLaborHrs",
        "description": "This method updates the tot hours display field when the labor hours clock in/out\r\ntime changes",
        "operationId": "DefaultLaborHrs",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultLaborHrs_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultLaborHrs_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultLaborQty": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultLaborQty",
        "description": "This method defaults fields when the labor qty fields changes.  Also checks\r\nfor any labor warnings the user needs to be aware of",
        "operationId": "DefaultLaborQty",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultLaborQty_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultLaborQty_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/VerifyScrapQty": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method VerifyScrapQty",
        "description": "This method defaults fields when the scrap qty field changes.  Also checks\r\nfor any labor warnings the user needs to be aware of",
        "operationId": "VerifyScrapQty",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifyScrapQty_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/VerifyScrapQty_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnChangePartQty": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnChangePartQty",
        "description": "This method sets Complete checkbox when part qty field changes in End Activity.",
        "operationId": "OnChangePartQty",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnChangePartQty_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnChangePartQty_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultLaborType": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultLaborType",
        "description": "This method defaults dataset fields when the LaborType field changes.",
        "operationId": "DefaultLaborType",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultLaborType_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultLaborType_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultLunchBreak": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultLunchBreak",
        "description": "This method defaults the Lunch Time fields when the Lunch Break field changes.",
        "operationId": "DefaultLunchBreak",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultLunchBreak_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultLunchBreak_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultNextOprSeq": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultNextOprSeq",
        "description": "This method updates the dataset after next operation seq is set",
        "operationId": "DefaultNextOprSeq",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultNextOprSeq_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultNextOprSeq_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultOpCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultOpCode",
        "description": "This method checks for any warnings user needs to know on change of OpCode",
        "operationId": "DefaultOpCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultOpCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultOpCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultOprSeq": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultOprSeq",
        "description": "This method defaults fields when Operation sequence changes.  Also returns any\r\nwarnings user needs to know.",
        "operationId": "DefaultOprSeq",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultOprSeq_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultOprSeq_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlOnSelectForWork": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlOnSelectForWork",
        "description": "Call GetNewLaborDtl base method then assign selected values and default values for MES/Work Queue/Select for Work.\r\nResourceID is defaulted the same way than for MES- Start Production Activity. ResourceID must be required only if Company Configuration MachinePrompt is true, otherwise is optional.",
        "operationId": "GetNewLaborDtlOnSelectForWork",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlOnSelectForWork_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlOnSelectForWork_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultPhaseID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultPhaseID",
        "description": "This method defaults dataset fields when the PhaseID field changes.",
        "operationId": "DefaultPhaseID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultPhaseID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultPhaseID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultPhaseOprSeq": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultPhaseOprSeq",
        "description": "This method defaults dataset fields when the PhaseOprSeq field changes.",
        "operationId": "DefaultPhaseOprSeq",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultPhaseOprSeq_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultPhaseOprSeq_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultProjectID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultProjectID",
        "description": "This method defaults dataset fields when the ProjectID field changes.",
        "operationId": "DefaultProjectID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultProjectID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultProjectID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultResourceID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultResourceID",
        "description": "This method updates dataset fields when the ResourceID field changes.",
        "operationId": "DefaultResourceID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultResourceID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultResourceID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultRoleCd": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultRoleCd",
        "description": "This method defaults dataset fields when the RoleCd field changes.",
        "operationId": "DefaultRoleCd",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultRoleCd_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultRoleCd_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultScrapReasonCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultScrapReasonCode",
        "description": "This method defaults fields when the scrap reason code fields changes.  Also checks\r\nfor any labor warnings the user needs to be aware of",
        "operationId": "DefaultScrapReasonCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultScrapReasonCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultScrapReasonCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultSetupPctComplete": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultSetupPctComplete",
        "description": "This method validates and reassigns the setup percent complete field.",
        "operationId": "DefaultSetupPctComplete",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultSetupPctComplete_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultSetupPctComplete_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultShift": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultShift",
        "description": "This method updates clock in/out and lunch in/out fields after shift field changes",
        "operationId": "DefaultShift",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultShift_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultShift_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultTime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultTime",
        "description": "This method updates time and pay hours when a time field changes",
        "operationId": "DefaultTime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultTime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultTime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultTimeTypCd": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultTimeTypCd",
        "description": "This method defaults dataset fields when the TimeTypCd field changes.",
        "operationId": "DefaultTimeTypCd",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultTimeTypCd_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultTimeTypCd_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DefaultWCCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DefaultWCCode",
        "description": "This method updates dataset fields when the ResourceGroup field changes.  Also checks\r\nfor any warning the user needs to know",
        "operationId": "DefaultWCCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DefaultWCCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DefaultWCCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DeleteLaborDtl": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DeleteLaborDtl",
        "description": "This method delete records related to HCM PTO.",
        "operationId": "DeleteLaborDtl",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteLaborDtl_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DeleteLaborDtl_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/EndActivity": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method EndActivity",
        "description": "Method to call to end an activity in Shop Floor.  This method will mark\r\nthe EndActivity flag in LaborDtl so when the Update method is run, special\r\nend activity processing can occur.  It will also default values in other\r\nfields that apply to the end activity.  Before this method is called, the\r\nLaborDtl.RowMod value needs to be set to 'U'.",
        "operationId": "EndActivity",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/EndActivity_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EndActivity_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/EndActivityComplete": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method EndActivityComplete",
        "description": "This method checks for any necessary labor warning when the complete flag is checked in MES End Activity",
        "operationId": "EndActivityComplete",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/EndActivityComplete_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EndActivityComplete_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetActiveLaborDtl": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetActiveLaborDtl",
        "description": "Method to retrieve the active Labor Details and header records by employee.",
        "operationId": "GetActiveLaborDtl",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetActiveLaborDtl_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetActiveLaborDtl_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/InitiateDowntime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method InitiateDowntime",
        "description": "Method to Begin Downtime for Kinetic MES",
        "operationId": "InitiateDowntime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/InitiateDowntime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/InitiateDowntime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/EndDowntime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method EndDowntime",
        "description": "Method to End Downtime for Kinetic MES",
        "operationId": "EndDowntime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/EndDowntime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EndDowntime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetDetail": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetDetail",
        "description": "Method to call to retrieve the Labor dataset with just the header\r\nand a specific detail record.",
        "operationId": "GetDetail",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDetail_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetDetail_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/getElapsedTime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method getElapsedTime",
        "description": "This method gets the elapsed time from a start date-startTime until now",
        "operationId": "getElapsedTime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/getElapsedTime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/getElapsedTime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlNoHdr": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlNoHdr",
        "description": "This method is called to add a new labor detail without having a\r\nlabor header record available",
        "operationId": "GetNewLaborDtlNoHdr",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlNoHdr_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlNoHdr_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlWithHdr": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlWithHdr",
        "description": "This method is called to add a new labor detail without having a\r\nlabor header record available",
        "operationId": "GetNewLaborDtlWithHdr",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlWithHdr_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlWithHdr_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborHed1": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborHed1",
        "description": "This method to be used in place of GetNewLaborHed.  This method asks for an\r\nemployee number to default fields based on the employee.",
        "operationId": "GetNewLaborHed1",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborHed1_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborHed1_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLbrScrapSerialNumbers": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLbrScrapSerialNumbers",
        "description": "Gets a new LbrScrapSerialNumbers record for current LaborDtl",
        "operationId": "GetNewLbrScrapSerialNumbers",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLbrScrapSerialNumbers_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLbrScrapSerialNumbers_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewTimeWeeklyView": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewTimeWeeklyView",
        "description": "Gets a new TimeWeeklyView record for the current week",
        "operationId": "GetNewTimeWeeklyView",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewTimeWeeklyView_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewTimeWeeklyView_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetRowsCalendarView": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetRowsCalendarView",
        "operationId": "GetRowsCalendarView",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRowsCalendarView_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetRowsCalendarView_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetRowsWhoIsHere": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetRowsWhoIsHere",
        "operationId": "GetRowsWhoIsHere",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRowsWhoIsHere_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetRowsWhoIsHere_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrieveApproved": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrieveApproved",
        "description": "Method to get the value UserFile.TERetrieveApproved",
        "operationId": "GetTERetrieveApproved",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrieveApproved_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrieveByOption": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrieveByOption",
        "description": "Method to get retrieve by options",
        "operationId": "GetTERetrieveByOption",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrieveByOption_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrieveEntered": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrieveEntered",
        "description": "Method to get the value UserFile.TERetrieveEntered",
        "operationId": "GetTERetrieveEntered",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrieveEntered_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrievePartiallyApproved": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrievePartiallyApproved",
        "description": "Method to get the value UserFile.TERetrievePartiallyApproved",
        "operationId": "GetTERetrievePartiallyApproved",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrievePartiallyApproved_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrieveRejected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrieveRejected",
        "description": "Method to get the value UserFile.TERetrieveRejected",
        "operationId": "GetTERetrieveRejected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrieveRejected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetTERetrieveSubmitted": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetTERetrieveSubmitted",
        "description": "Method to get the value UserFile.TERetrieveSubmitted",
        "operationId": "GetTERetrieveSubmitted",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetTERetrieveSubmitted_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/IsValidAssembly": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method IsValidAssembly",
        "description": "Validate if an assembly is valid for a job. if not returns false,\r\notherwise returns true.",
        "operationId": "IsValidAssembly",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/IsValidAssembly_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IsValidAssembly_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborDtlAfterGetRowsWrapper": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method LaborDtlAfterGetRowsWrapper",
        "description": "Calls LaborDtlAfterGetRows for the passed in LaborDtl row",
        "operationId": "LaborDtlAfterGetRowsWrapper",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/LaborDtlAfterGetRowsWrapper_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LaborDtlAfterGetRowsWrapper_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborRateCalc": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method LaborRateCalc",
        "operationId": "LaborRateCalc",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/LaborRateCalc_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LaborRateCalc_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnChangeClockInDate": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnChangeClockInDate",
        "description": "Call this procedure when LaborDtl.ClockInDate changes",
        "operationId": "OnChangeClockInDate",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnChangeClockInDate_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnChangeClockInDate_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnChangePCID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnChangePCID",
        "description": "This method validates the PCID",
        "operationId": "OnChangePCID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnChangePCID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnChangePCID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnChangeQuickEntryCode": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnChangeQuickEntryCode",
        "description": "This method validates field QuickEntryCode, and if it is valid, uses the\r\nvalues from the QuickEntry record to populate the LaborDtl values.",
        "operationId": "OnChangeQuickEntryCode",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnChangeQuickEntryCode_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnChangeQuickEntryCode_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnChangeResourceGrpID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnChangeResourceGrpID",
        "description": "Call this procedure when TimeWeeklyView.ResourceGrpID changes",
        "operationId": "OnChangeResourceGrpID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnChangeResourceGrpID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnChangeResourceGrpID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OnLoadEndActivity": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OnLoadEndActivity",
        "description": "Call this method when loading end activity on Kinetic-MES.",
        "operationId": "OnLoadEndActivity",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OnLoadEndActivity_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OnLoadEndActivity_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Overrides": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method Overrides",
        "description": "Call this procedure to override the Resource Group and Operation Code in a\r\njob.",
        "operationId": "Overrides",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Overrides_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Overrides_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/OverridesResource": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method OverridesResource",
        "description": "Call this procedure to override the Resource in a LaborDtl record",
        "operationId": "OverridesResource",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/OverridesResource_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OverridesResource_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/RecallFromApproval": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method RecallFromApproval",
        "description": "Method to recall Labor for Approval.",
        "operationId": "RecallFromApproval",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/RecallFromApproval_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RecallFromApproval_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SelectForWork": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SelectForWork",
        "description": "This method is intended to be used when the MES/ShopFloor user selects an\r\noperation from the WorkQueue to work on.  Use this method in place of the\r\nUpdate method in this situation.\r\n            \r\nThis method expects a LaborDataSet containing a single LaborHed with a\r\nRowMod indicating a changed row, and a LaborDtl row with a RowMod indicating\r\na changed row.  This can be obtained with a call to Labor.GetRows() with a\r\nwhereClauseLaborHed of\r\nActiveTrans = YES and EmployeeNum = xxxx\r\nsubstituting the desired employeeNum for the xxxx.\r\nfollowed by a call to LaborDtlGetNew.\r\n            \r\nAfter validating the given Job, Assembly, Operation, ResourceID, ResourceGrpID\r\nand LaborType, and additional validations are applied, the LaborDtl is updated.\r\n            \r\nAn exception is thrown if:\r\n- a changed Laborhed row is not found.\r\n- the given Job, Assembly and Operation is not valid\r\n- the LaborHed.ActiveTrans = no.  This method is for MES (ShopFloor) use only.\r\n- the given LaborType is not \"S\" or \"P\"",
        "operationId": "SelectForWork",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SelectForWork_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SelectForWork_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SelectForWorkCheckWarnings": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SelectForWorkCheckWarnings",
        "description": "This method runs the shop warning routine and returns any warnings the user needs\r\nto be aware of.  This needs to be run right before the SelectForWork method.  If the user answers\r\nokay to all of the questions, then the SelectForWork method can be run.  Otherwise the labor record\r\nneeds to be corrected",
        "operationId": "SelectForWorkCheckWarnings",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SelectForWorkCheckWarnings_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SelectForWorkCheckWarnings_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetClockInAndDisplayTimeMES": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetClockInAndDisplayTimeMES",
        "description": "Sets the Time Stamp in which the Employee Starts his/her activity and\r\nalso populates the field that displays the time correctly.",
        "operationId": "SetClockInAndDisplayTimeMES",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetClockInAndDisplayTimeMES_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetClockInAndDisplayTimeMES_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveApproved": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveApproved",
        "description": "Method to set the value UserFile.TERetrieveApproved",
        "operationId": "SetTERetrieveApproved",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveApproved_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveApproved_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveByDay": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveByDay",
        "description": "Method to set the value for retrieve by day",
        "operationId": "SetTERetrieveByDay",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveByDay_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveByDay_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveByMonth": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveByMonth",
        "description": "Method to set the value for retrieve by month",
        "operationId": "SetTERetrieveByMonth",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveByMonth_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveByMonth_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveByWeek": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveByWeek",
        "description": "Method to set the value for retrieve by week",
        "operationId": "SetTERetrieveByWeek",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveByWeek_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveByWeek_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveEntered": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveEntered",
        "description": "Method to set the value UserFile.TERetrieveEntered",
        "operationId": "SetTERetrieveEntered",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveEntered_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveEntered_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrievePartiallyApproved": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrievePartiallyApproved",
        "description": "Method to set the value UserFile.TERetrievePartiallyApproved",
        "operationId": "SetTERetrievePartiallyApproved",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrievePartiallyApproved_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrievePartiallyApproved_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveRejected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveRejected",
        "description": "Method to set the value UserFile.TERetrieveRejected",
        "operationId": "SetTERetrieveRejected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveRejected_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveRejected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SetTERetrieveSubmitted": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SetTERetrieveSubmitted",
        "description": "Method to set the value UserFile.TERetrieveSubmitted",
        "operationId": "SetTERetrieveSubmitted",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SetTERetrieveSubmitted_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SetTERetrieveSubmitted_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/StartActivity": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method StartActivity",
        "description": "Method to call to start an activity in Shop Floor.",
        "operationId": "StartActivity",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/StartActivity_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/StartActivity_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SubmitForApproval": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SubmitForApproval",
        "description": "Method to submit Labor for Approval.",
        "operationId": "SubmitForApproval",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SubmitForApproval_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubmitForApproval_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateIndirectCodeIsDowntime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateIndirectCodeIsDowntime",
        "description": "This method validates the IndirectCode is marked as Downtime",
        "operationId": "ValidateIndirectCodeIsDowntime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateIndirectCodeIsDowntime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateIndirectCodeIsDowntime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/validateNonConfProcessed": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method validateNonConfProcessed",
        "description": "This method validates the Non Conformance value and validates if it has already been processed",
        "operationId": "validateNonConfProcessed",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/validateNonConfProcessed_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/validateNonConfProcessed_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateProjectClosed": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateProjectClosed",
        "description": "this method validates if the Project linked to the Job in Labor Detail is closed.",
        "operationId": "ValidateProjectClosed",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateProjectClosed_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateProjectClosed_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateSerialAfterSelect": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateSerialAfterSelect",
        "description": "Validates after calling SN selection screen",
        "operationId": "ValidateSerialAfterSelect",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateSerialAfterSelect_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateSerialAfterSelect_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateSerialScanInterface": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateSerialScanInterface",
        "description": "Validates if serial number is valid after selecting SN on scan interface kinetic MES",
        "operationId": "ValidateSerialScanInterface",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateSerialScanInterface_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateSerialScanInterface_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateSerialBeforeSelect": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateSerialBeforeSelect",
        "description": "Call before allowing the select of serial numbers",
        "operationId": "ValidateSerialBeforeSelect",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateSerialBeforeSelect_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateSerialBeforeSelect_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/VerifySerialMatch": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method VerifySerialMatch",
        "description": "Verifies if the user should enter child serial numbers for the serial numbers\r\nbeing received depending on the setting of the Serial Number Matching before save.",
        "operationId": "VerifySerialMatch",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/VerifySerialMatch_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/VerifySerialMatch_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetClockTime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetClockTime",
        "description": "This method is called to update the values of the Display columns\r\nDspClockInTime and DspClockOutTime",
        "operationId": "GetClockTime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetClockTime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetClockTime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetCodeDescList": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetCodeDescList",
        "operationId": "GetCodeDescList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetCodeDescList_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetCodeDescList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetDspClockTime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetDspClockTime",
        "description": "This method is called to update the values of the Display columns\r\nDspClockInTime and DspClockOutTime",
        "operationId": "GetDspClockTime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDspClockTime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetDspClockTime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ReportPartQtyAllowed": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ReportPartQtyAllowed",
        "description": "Returns TRUE if Part Quantity Reporting is allowed for a given operation.",
        "operationId": "ReportPartQtyAllowed",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ReportPartQtyAllowed_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ReportPartQtyAllowed_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ExternalMESDowntime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ExternalMESDowntime",
        "description": "Methods updates Downtime codes",
        "operationId": "ExternalMESDowntime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ExternalMESDowntime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ExternalMESDowntime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ExternalMESEndDowntime": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ExternalMESEndDowntime",
        "description": "Methods updates Downtime codes",
        "operationId": "ExternalMESEndDowntime",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ExternalMESEndDowntime_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ExternalMESEndDowntime_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/HCMGetLaborRecords": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method HCMGetLaborRecords",
        "description": "Description: Public method which retrieves the labor information HCM third party requires.",
        "operationId": "HCMGetLaborRecords",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/HCMGetLaborRecords_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/HCMGetLaborRecords_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/HCMSetLaborStatus": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method HCMSetLaborStatus",
        "operationId": "HCMSetLaborStatus",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/HCMSetLaborStatus_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/HCMSetLaborStatus_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ValidateChargeRateForTimeType": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ValidateChargeRateForTimeType",
        "description": "Validates if there is no valid Charge Rate according to selected Time Type.\r\nThis validation can also be found on BO/LaborApproval.",
        "operationId": "ValidateChargeRateForTimeType",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ValidateChargeRateForTimeType_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ValidateChargeRateForTimeType_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ReviewIsDocumentLock": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ReviewIsDocumentLock",
        "description": "Review if the document is Lock when user tries to recall the record from UI",
        "operationId": "ReviewIsDocumentLock",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ReviewIsDocumentLock_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ReviewIsDocumentLock_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/IsHCMEnabledAtCompany": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method IsHCMEnabledAtCompany",
        "description": "Returns true if HCM is enable at company level.",
        "operationId": "IsHCMEnabledAtCompany",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/IsHCMEnabledAtCompany_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeTimeWeeklyViewWeekBeginDate": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeTimeWeeklyViewWeekBeginDate",
        "description": "Called when Time Weekly View Week Begin Date is changing",
        "operationId": "ChangeTimeWeeklyViewWeekBeginDate",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeTimeWeeklyViewWeekBeginDate_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeTimeWeeklyViewWeekBeginDate_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeLaborDtlOprSeq": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeLaborDtlOprSeq",
        "description": "This method defaults LaborDtl fields when Operation sequence changes.  Also returns any\r\nwarnings user needs to know.",
        "operationId": "ChangeLaborDtlOprSeq",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeLaborDtlOprSeq_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeLaborDtlOprSeq_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeLaborDtlScrapQty": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeLaborDtlScrapQty",
        "description": "This method defaults fields when the scrap qty field changes.",
        "operationId": "ChangeLaborDtlScrapQty",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeLaborDtlScrapQty_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeLaborDtlScrapQty_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/AfterChangeLaborDtlDiscrepQty": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method AfterChangeLaborDtlDiscrepQty",
        "description": "Called after LaborDtl.DiscrepQty has been changed.",
        "operationId": "AfterChangeLaborDtlDiscrepQty",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/AfterChangeLaborDtlDiscrepQty_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/AfterChangeLaborDtlDiscrepQty_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeLaborDtlTimeField": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeLaborDtlTimeField",
        "description": "Called when labor clock in or clock out time is changing",
        "operationId": "ChangeLaborDtlTimeField",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeLaborDtlTimeField_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeLaborDtlTimeField_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/ChangeLaborDtlDspTimeField": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method ChangeLaborDtlDspTimeField",
        "description": "Called when labor display clock in or clock out time is changing",
        "operationId": "ChangeLaborDtlDspTimeField",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/ChangeLaborDtlDspTimeField_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ChangeLaborDtlDspTimeField_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetJobProductionCompanySettings": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetJobProductionCompanySettings",
        "description": "Returns company job production settings for Advance Labor Rate, Clock Format",
        "operationId": "GetJobProductionCompanySettings",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetJobProductionCompanySettings_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/SubmitForApprovalBySelected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method SubmitForApprovalBySelected",
        "description": "Method to submit Labor for Approval using RowSelected flag.",
        "operationId": "SubmitForApprovalBySelected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/SubmitForApprovalBySelected_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/SubmitForApprovalBySelected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/RecallFromApprovalBySelected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method RecallFromApprovalBySelected",
        "description": "Method to recall Labor for Approval using RowSelected flag.",
        "operationId": "RecallFromApprovalBySelected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/RecallFromApprovalBySelected_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/RecallFromApprovalBySelected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CopyLaborDtlBySelected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CopyLaborDtlBySelected",
        "description": "Method to copy Labor detail record(s) using RowSelected flag.",
        "operationId": "CopyLaborDtlBySelected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CopyLaborDtlBySelected_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CopyLaborDtlBySelected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CopyTimeWeeklyViewBySelected": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CopyTimeWeeklyViewBySelected",
        "description": "Method to copy TimeWeeklyView record(s) using RowSelected flag.",
        "operationId": "CopyTimeWeeklyViewBySelected",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CopyTimeWeeklyViewBySelected_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CopyTimeWeeklyViewBySelected_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetRowsTimeEntry": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetRowsTimeEntry",
        "description": "Get rows for Time Entry.  This method will consider user time retrieval options for retrieving approved, entered, partially approved, rejected, and submitted records.",
        "operationId": "GetRowsTimeEntry",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRowsTimeEntry_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetRowsTimeEntry_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetLaborTypeList": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetLaborTypeList",
        "description": "Returns valid labor types based on the employee",
        "operationId": "GetLaborTypeList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetLaborTypeList_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetLaborTypeList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/CreateLbrScrapSerialNumbersFromList": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method CreateLbrScrapSerialNumbersFromList",
        "description": "Create LbrScrapSerialNumbers dataset records from a list of selected serial numbers",
        "operationId": "CreateLbrScrapSerialNumbersFromList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/CreateLbrScrapSerialNumbersFromList_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/CreateLbrScrapSerialNumbersFromList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/LaborHedPayrollDateChanging": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method LaborHedPayrollDateChanging",
        "description": "Called when LaborHed Payroll Date is changing",
        "operationId": "LaborHedPayrollDateChanging",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/LaborHedPayrollDateChanging_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/LaborHedPayrollDateChanging_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetDefaultsAddLaborDtlFromCalendar": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetDefaultsAddLaborDtlFromCalendar",
        "operationId": "GetDefaultsAddLaborDtlFromCalendar",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetDefaultsAddLaborDtlFromCalendar_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetDefaultsAddLaborDtlFromCalendar_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborHed": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborHed",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborHed",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborHed_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborHed_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtl": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtl",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborDtl",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtl_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtl_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlAttch": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlAttch",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborDtlAttch",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlAttch_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlAttch_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlComment": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlComment",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborDtlComment",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlComment_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlComment_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborEquip": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborEquip",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborEquip",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborEquip_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborEquip_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborPart": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborPart",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborPart",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborPart_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborPart_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetNewLaborDtlGroup": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetNewLaborDtlGroup",
        "description": "Inserts a new row in the DataSet with defaults populated.",
        "operationId": "GetNewLaborDtlGroup",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetNewLaborDtlGroup_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetNewLaborDtlGroup_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/DeleteByID": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method DeleteByID",
        "description": "Deletes a row given its ID.",
        "operationId": "DeleteByID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteByID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/DeleteByID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetByID": {
      "get": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetByID",
        "description": "Returns a DataSet given the primary key.",
        "operationId": "Get_GetByID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "laborHedSeq",
            "in": "query",
            "description": "laborHedSeq",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetByID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetByID",
        "description": "Returns a DataSet given the primary key.",
        "operationId": "GetByID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetByID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetByID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        },
        "deprecated": true
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetList": {
      "get": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetList",
        "description": "Returns a list of rows that satisfy the where clause.",
        "operationId": "Get_GetList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "whereClause",
            "in": "query",
            "description": "whereClause",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "absolutePage",
            "in": "query",
            "description": "absolutePage",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetList",
        "description": "Returns a list of rows that satisfy the where clause.",
        "operationId": "GetList",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetList_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetList_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        },
        "deprecated": true
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetRows": {
      "get": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetRows",
        "description": "Returns a dataset containing all rows that satisfy the where clauses.",
        "operationId": "Get_GetRows",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "whereClauseLaborHed",
            "in": "query",
            "description": "whereClauseLaborHed",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborDtl",
            "in": "query",
            "description": "whereClauseLaborDtl",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborDtlAttch",
            "in": "query",
            "description": "whereClauseLaborDtlAttch",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborDtlComment",
            "in": "query",
            "description": "whereClauseLaborDtlComment",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborEquip",
            "in": "query",
            "description": "whereClauseLaborEquip",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborPart",
            "in": "query",
            "description": "whereClauseLaborPart",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLbrScrapSerialNumbers",
            "in": "query",
            "description": "whereClauseLbrScrapSerialNumbers",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseLaborDtlGroup",
            "in": "query",
            "description": "whereClauseLaborDtlGroup",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseSelectedSerialNumbers",
            "in": "query",
            "description": "whereClauseSelectedSerialNumbers",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseSNFormat",
            "in": "query",
            "description": "whereClauseSNFormat",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseTimeWeeklyView",
            "in": "query",
            "description": "whereClauseTimeWeeklyView",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "whereClauseTimeWorkHours",
            "in": "query",
            "description": "whereClauseTimeWorkHours",
            "required": true,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "absolutePage",
            "in": "query",
            "description": "absolutePage",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetRows_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetRows",
        "description": "Returns a dataset containing all rows that satisfy the where clauses.",
        "operationId": "GetRows",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetRows_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetRows_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        },
        "deprecated": true
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetBySysRowID": {
      "get": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetBySysRowID",
        "operationId": "Get_GetBySysRowID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": true,
            "type": "string",
            "format": "uuid",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetBySysRowID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetBySysRowID",
        "operationId": "GetBySysRowID",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetBySysRowID_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetBySysRowID_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        },
        "deprecated": true
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/GetBySysRowIDs": {
      "get": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetBySysRowIDs",
        "operationId": "Get_GetBySysRowIDs",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "ids",
            "in": "query",
            "description": "ids",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetBySysRowIDs_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      },
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method GetBySysRowIDs",
        "operationId": "GetBySysRowIDs",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/GetBySysRowIDs_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/GetBySysRowIDs_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        },
        "deprecated": true
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/Update": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method Update",
        "description": "Commits the DataSet changes to the data store.",
        "operationId": "Update",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/Update_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/Update_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    },
    "/{currentCompany}/Erp.BO.LaborSvc/UpdateExt": {
      "post": {
        "tags": [ "Custom methods" ],
        "summary": "Invoke method UpdateExt",
        "description": "Apply input data to service by calling GetByID/GetNew/Update methods.",
        "operationId": "UpdateExt",
        "parameters": [
          { "$ref": "#/parameters/currentCompany" },
          { "$ref": "#/parameters/X-API-Key" },
          {
            "name": "input",
            "in": "body",
            "description": "input params",
            "required": true,
            "schema": { "$ref": "#/definitions/UpdateExt_input" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/UpdateExt_output" }
          },
          "500": { "description": "Internal server error. Server is unable to process the request." }
        }
      }
    }
  },
  "definitions": {
    "Erp.Labor": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": "The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence \"LaborHedSeq\".",
          "type": "integer"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": " The Payroll date is the \"Logical Day\" that labor occurred. In most cases this is the same as the \"Physical Day\".  But when work is done before and after midnight then \"Labor Collection\" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.\r\nIt will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl.",
          "type": "string"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.",
          "type": "string"
        },
        "ClockInTime": {
          "format": "double",
          "description": "The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockin\" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockInTime": {
          "format": "double",
          "description": "Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.",
          "type": "number"
        },
        "ActualClockinDate": {
          "format": "date-time",
          "description": "The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  \"ClockInDate\".  This field is provided mainly for audit purposes.",
          "type": "string"
        },
        "LunchStatus": {
          "description": " An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the \"Lunch\" button is pressed.\r\n\r\nThe possible values are \"N\" - No lunch, \"O\" - Out to Lunch, \"R\" - Returned from lunch.",
          "type": "string"
        },
        "ActLunchOutTime": {
          "format": "double",
          "description": " Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.",
          "type": "number"
        },
        "LunchOutTime": {
          "format": "double",
          "description": " Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.\r\n\r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ActLunchInTime": {
          "format": "double",
          "description": " Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time.",
          "type": "number"
        },
        "LunchInTime": {
          "format": "double",
          "description": " Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.\r\nThe adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. \r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": "The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockOut\" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockOutTime": {
          "format": "double",
          "description": "Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.",
          "type": "number"
        },
        "PayHours": {
          "format": "double",
          "description": " Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.\r\nThe Logic for calculating hours from clockin, clockout is:\r\nIf ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. \r\nIf LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )\r\nelse Lunch Hours = ( LunchIn - LunchOut ).\r\nPayHours = GRoss Hours - Lunch Hours. \r\nRemember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions.",
          "type": "number"
        },
        "FeedPayroll": {
          "description": "Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.",
          "type": "boolean"
        },
        "TransferredToPayroll": {
          "description": "Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.",
          "type": "boolean"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "TranSet": {
          "description": "An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.",
          "type": "string"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open.",
          "type": "boolean"
        },
        "ChkLink": {
          "description": " Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.\r\nUsed to relate the labor to the payroll check detail.",
          "type": "string"
        },
        "BatchTotalHrsDisp": {
          "description": "BatchTotalHrsDisp",
          "type": "string"
        },
        "BatchHrsRemainDisp": {
          "description": "BatchHrsRemainDisp",
          "type": "string"
        },
        "BatchHrsRemainPctDisp": {
          "description": "BatchHrsRemainPctDisp",
          "type": "string"
        },
        "BatchSplitHrsMethod": {
          "description": "BatchSplitHrsMethod",
          "type": "string"
        },
        "BatchAssignTo": {
          "description": "BatchAssignTo",
          "type": "boolean"
        },
        "BatchComplete": {
          "description": "BatchComplete",
          "type": "boolean"
        },
        "BatchStartHrs": {
          "format": "date-time",
          "description": "BatchStartHrs",
          "type": "string"
        },
        "BatchEndHrs": {
          "format": "date-time",
          "description": "BatchEndHrs",
          "type": "string"
        },
        "BatchTotalHrs": {
          "format": "double",
          "description": "BatchTotalHrs",
          "type": "number"
        },
        "BatchHrsRemain": {
          "format": "double",
          "description": "BatchHrsRemain",
          "type": "number"
        },
        "BatchHrsRemainPct": {
          "format": "double",
          "description": "BatchHrsRemainPct",
          "type": "number"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Imported": {
          "description": "Imported",
          "type": "boolean"
        },
        "ImportDate": {
          "format": "date-time",
          "description": "ImportDate",
          "type": "string"
        },
        "BatchMode": {
          "description": "BatchMode",
          "type": "boolean"
        },
        "HCMPayHoursCalcType": {
          "description": "Indicates which type of Pay time calculation will be used when HCM Integration is on.",
          "type": "string"
        },
        "EmpBasicShift": {
          "format": "int32",
          "description": "Normal work shift from EmpBasic",
          "type": "integer"
        },
        "EmpBasicSupervisorID": {
          "description": "The ID of the supervisor for the employee",
          "type": "string"
        },
        "GetNewNoHdr": { "type": "boolean" },
        "HCMTotPayHours": {
          "format": "double",
          "description": "HCM Integration, Display the Total of Pay Hours of the Labor Details.",
          "type": "number"
        },
        "ImagePath": {
          "description": "Full Path of Employee PhotoFile",
          "type": "string"
        },
        "LunchBreak": {
          "description": "Indicates if a lunch break is part of the shift",
          "type": "boolean"
        },
        "MES": { "type": "boolean" },
        "PayrollValuesForHCM": {
          "description": "Temporal field that stores patch field value: HDR, DTL, NON",
          "type": "string"
        },
        "TimeDisableDelete": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TotBurHrs": {
          "format": "double",
          "type": "number"
        },
        "TotLbrHrs": {
          "format": "double",
          "type": "number"
        },
        "WipPosted": { "type": "boolean" },
        "DspPayHours": {
          "format": "double",
          "description": "For display purposes",
          "type": "number"
        },
        "FullyPosted": {
          "description": "Indicates if all labor has been posted",
          "type": "boolean"
        },
        "PartiallyPosted": {
          "description": "Indicates if some labor has been posted",
          "type": "boolean"
        },
        "HCMExistsWithStatus": { "type": "boolean" },
        "PayrollDateNav": {
          "format": "date-time",
          "description": "Payroll date for record navigation",
          "type": "string"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeNumFirstName": { "type": "string" },
        "EmployeeNumName": { "type": "string" },
        "EmployeeNumLastName": { "type": "string" },
        "HCMStatusStatus": { "type": "string" },
        "PRSystHCMEnabled": { "type": "boolean" },
        "ShiftDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        },
        "LaborDtls": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtl" }
        }
      }
    },
    "Erp.LaborSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Labor" }
        }
      }
    },
    "Erp.LaborDtl": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": " The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are\r\nconcurrently active for an employee in order to distribute the labor hours.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "LaborType": {
          "description": " Indicates the type of labor transaction. It can be \"I\" = Indirect, \"P\" - Production, \"S\" - Setup.\r\nThis value controls what fields are displayed/prompted for. \r\n\"I\" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.\r\n\"S\" Setup does not use IndirectCode.\r\n\"P\" Production does not use IndirectCode or SetupPctCmp,",
          "type": "string"
        },
        "LaborTypePseudo": {
          "description": " Correlates to LaborType.  Indicates the type of labor transaction, however \"Production\" LaborType can be broken out into \"Project\", \"Production\" or \"Service\".  Valid Values are \"I\" = Indirect, \"P\" - Production, \"S\" - Setup, \"J\" - Project, or \"V\" - Service.\r\nThis value controls what fields are displayed/prompted for. \r\n\"I\" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.\r\n\"S\" Setup does not use IndirectCode.\r\n\"P\" Production does not use IndirectCode or SetupPctCmp,",
          "type": "string"
        },
        "ReWork": {
          "description": "Logical flag that indicates if this is a Rework labor transaction. This MUST be NO for Indirect labor (LaborDtl.LaborType = I)",
          "type": "boolean"
        },
        "ReworkReasonCode": {
          "description": " The reason code that is used to link this transaction to a Reason master record, which indicates why this rework is occurring on this operation  and allows the system the ability to recap rework by a code for analysis purposes.\r\nThis should only exist  when LaborDtl.Rework = Yes.",
          "type": "string"
        },
        "JobNum": {
          "description": "Job number to which this labor transaction applies. For Setup &amp; Production labor this is a mandatory entry.  The program will use the JobNum/LotNum to validate that a record exists in Jhead and that Jhead.JobClosed is false.",
          "type": "string"
        },
        "AssemblySeq": {
          "format": "int32",
          "description": "The Assembly Sequence of the Job that the labor transaction applies to. This can be blank or must be valid in the JobAsmbl file.",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "description": " The sequence of the operation record within the specific Job/Assembly to which this labor transaction applies.\r\nFor setup &amp; production entries this must be valid and must not be a subcontract operation (JobOper.SubContract = NO).",
          "type": "integer"
        },
        "JCDept": {
          "description": "The Department in which the work was done. Default is from WrkCenter.JCDEpt. This code is DIRECTLY ENTERED.",
          "type": "string"
        },
        "ResourceGrpID": {
          "description": " The Resource Group in which the labor was performed.  This code IS DIRECTLY entered in labor entry, instead of the finding it based on the description.  This is mandatory and must be valid in the Resource Group table.\r\nFor production labor (LaborType = \"S\" or \"P\") the default is from the JobOper.PrimaryProdDtl JobOpDtl.ResourceGrpID.\r\nFor indirect labor (LaborType = I) there is no default.",
          "type": "string"
        },
        "OpCode": {
          "description": "The operation Code for this labor transaction. Default from JobOper.OpCode. This field IS DIRECTLY ENTERED. This is a mandatory field for direct labor transactions.",
          "type": "string"
        },
        "LaborHrs": {
          "format": "double",
          "description": "Labor hours are used in calculating labor cost for a job. It is stored as hours-hundredths. It is calculated whenever the start/stop time is changed. It can then be overridden.",
          "type": "number"
        },
        "BurdenHrs": {
          "format": "double",
          "description": "Job Cost Burden hours. Calculated whenever the start/stop times are changed. Can then be overridden.  This is zero for indirect labor.",
          "type": "number"
        },
        "LaborQty": {
          "format": "double",
          "description": "The Total production quantity reported.",
          "type": "number"
        },
        "ScrapQty": {
          "format": "double",
          "description": "The reported scrap quantity.",
          "type": "number"
        },
        "ScrapReasonCode": {
          "description": " The reason code that is used to link this transaction to a Reason master record, which indicates why this scrap occurred and allows the system the ability to recap scrap by a code for analysis purposes.\r\nThis should only exist  when ScrapQty Ne 0.00.",
          "type": "string"
        },
        "SetupPctComplete": {
          "format": "int32",
          "description": "Indicates what percent of the setup is considered complete as of this labor transaction.  If LaborDtl.SetupPctCmp is &gt; JobOper.SetupPctCmp then let JobOper.SetupPctCmp = LaborDtl.SetupPctCmp.",
          "type": "integer"
        },
        "Complete": {
          "description": "Indicates if this transaction \"completes\" either the setup or production for this operation.",
          "type": "boolean"
        },
        "IndirectCode": {
          "description": "A code that links to the Indirect master record that describes the type of indirect labor for this transaction. This field IS DIRECTLY ENTERED, not via a description/selection list method.   This is only valid when LaborType = \"I\" and must then be valid.",
          "type": "string"
        },
        "LaborNote": {
          "description": "A short note that the user can make about the labor transaction.",
          "type": "string"
        },
        "ExpenseCode": {
          "description": "The expense code for this labor transaction. An expense code is a abbreviated method of indirectly assigning a G/L account for the labor expense. DEFAULTS: for direct labor;  use the JobHead.ExpenseCode if its non-blank,  else use the Employee.ExpenseCode.                                                                   For Indirect Labor use the Indirect.ExpenseCode if not blank, else use the employee.ExpenseCode.",
          "type": "string"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "AppliedToSchedule": {
          "description": "an internal flag which indicates if this labor transaction has updated the job schedule. This will be updated via a Schedule refresh process.",
          "type": "boolean"
        },
        "ClockInMInute": {
          "format": "int32",
          "description": "Contains both the clock in date and time represented as the # of minutes from a base date. The date/time is stored in this format to allow an easier method for comparing time ranges. This will be utilized in labor collection logic when determining the # of jobs or # of employees to split labor and burden hours. This field is Not directly maintainable. It is just another representation of the ClockInDate and ClockInTime fields.",
          "type": "integer"
        },
        "ClockOutMinute": {
          "format": "int32",
          "description": "Contains both the clock out date and time. See \"ClockinMinute\" for further explanation of clock in/out. When Labor Collection first creates this record it sets ClockOutMinute = ClockInMinute + 1440. Then later during the clockout process it gets updated to represent the clockout time.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date that corresponds to the clock in time field. Labor entry uses the LaborHed.ClockInDate as a default for the first LaborDtl record of the LaborHed and then will use the date from the Last LaborDtl record. Labor Collection creates this field based on an adjusted system date.  See LaborHed.ClockInDate field description on adjusting the date.",
          "type": "string"
        },
        "ClockinTime": {
          "format": "double",
          "description": " The adjusted ClockIn time for job costing. Labor Collection updates this with the adjusted time. (see LaborHed.ClockIn for explanation of adjusted time). Labor entry uses LaborHed.Clockin as a default for the first LaborDtl record of a LaborHed. Then use the ClockOut of the last LaborDtl record for this LaborHed. Do not allow the ClockIn Time to be &lt; the LaborHed.ClockIn time.  Stored as hours.hundreths. The clockin/clockout are used to calculate the LaborHours, BurdenHours.\r\nThis field is Not directly maintainable. Instead the user enters the clockin time through a program defined fill-in widget which is formatted to conform to either Hours:Minutes or Hours.Hundreths based on the setting in JCSyst.TimeFormat. \r\nThe programs will handle the logic to convert \"to\" and \"from\" the fill-in widget.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": " The adjusted Clock Out time for job costing.  Labor entry uses  the LaborHed.ClockOut as a default on the first LaborDtl transaction of a LaborHed record. Do not allow the ClockOut to go past the LaborHed.ClockOut.  See \"Clockin\" for further explanation of clock in/out.\r\n\r\nLabor Entry updates this field at the time of clocking out of a job with the adjusted time. (see LaborHed.ClockOut for description of adjusted time)",
          "type": "number"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborDtl record is currently active. When the employee clocks out of the operation it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice to same operation, displaying which operations are currently active.....",
          "type": "boolean"
        },
        "OverRidePayRate": {
          "format": "double",
          "description": "User-defined rate.   The Manufacturing System provides entry/maintenance to this field in labor entry.  It is not referenced in any other part of the Manufacturing System.  Solely intended for use by programs the users may wish to develop.",
          "type": "number"
        },
        "LaborRate": {
          "format": "double",
          "description": "Labor rate used for this transaction. This is not maintainable or viewable from labor entry. It is captured from the EmpBasic.LaborRate at time of entry.",
          "type": "number"
        },
        "BurdenRate": {
          "format": "double",
          "description": "The burden rate for this transaction at the time the transaction was created. Capture the appropriate rate from the WrkCenter.ProdBurRate or WrkCenter.SetupBurRate. Note that these rates can be either a \"flat\" rate or a \"percent' of labor rate.  This is not user maintainable or viewable by Labor Entry.  Always Zero for indirect labor transactions.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ResourceID": {
          "description": "The ID of the Resource that was used to do the work. This field will be used to run reports using LaborDtl records to show how much work has been done on a specific Resource. This ID is directly entered in labor entry and Labor collection. It is only prompted for if the JcSyst.MachinePrompt = Yes/",
          "type": "string"
        },
        "OpComplete": {
          "description": "When displayed in Labor entry this field represents the current status of JobOper.OpComplete. It is used to directly toggle the operation from open to closed. The LaborDtl write trigger uses this to set JobOper.OpComplete.",
          "type": "boolean"
        },
        "EarnedHrs": {
          "format": "double",
          "description": "The amount of hours that it should have taken (based on standard) to produce the reported LaborQty. For Setup labor the Earned hours is the lessor of (Est.Setup - ActSetUp) or LaborDtl.BurdenHrs. Rework labor always has zero Earned hrs. Earned hours for production labor is calculated as (JobOper.EstProdHours / JobOper.RunQty) * LaborDtl.LaborQty",
          "type": "number"
        },
        "AddedOper": {
          "description": "This indicates if this labor transaction was against an \"added operation\" at the time it was created/updated. This field is a copy of the JobOPer.AddedOper. It is for internal use only. Used in the logic concerned with updating the ShopPerf summary file. This field prevents the summary from being corrupted if the user changes the JobOPer.AddedOper field after labor activity has occurred.",
          "type": "boolean"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": "Not directly user maintainable. Duplicated from LaborHed.PayrollDate. Is used as one of the selection criteria of the labor edit report. See LaborHed.PayrollDate for further info.",
          "type": "string"
        },
        "PostedToGL": {
          "description": " Indicates if this labor/burden cost was posted to G/L WIP accounts.  Transactions are posted in summary form.\r\nNote: All GL related fields (Fiscalyear,FiscalPeriod,Account,etc.) are established during the Caputure WIP/COS process (JCP80-GN.W)",
          "type": "boolean"
        },
        "FiscalYear": {
          "format": "int32",
          "description": " Fiscal year that entry was posted to in G/L.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "FiscalPeriod": {
          "format": "int32",
          "description": " Fiscal period that entry was posted to.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "JournalNum": {
          "format": "int32",
          "description": " Journal # that entry was posted to.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "GLTrans": {
          "description": "Internal flag to indicates if this is the type of transaction that would affect GL.  It is used to prevent certain transactions from posting to G/L.  Currently details created from Job Split do not affect GL and set this to NO.",
          "type": "boolean"
        },
        "JournalCode": {
          "description": "Journal Code of the related GLJrnDtl.",
          "type": "string"
        },
        "InspectionPending": {
          "description": "Indicates if the labordtl record inspection has completed.",
          "type": "boolean"
        },
        "CallNum": {
          "format": "int32",
          "description": "The service call that this service record belongs to.",
          "type": "integer"
        },
        "CallLine": {
          "format": "int32",
          "description": "The line number of the service call this labor detail is for.",
          "type": "integer"
        },
        "ServNum": {
          "format": "int32",
          "description": "the service that is being performed on this line.",
          "type": "integer"
        },
        "ServCode": {
          "description": "A unique code that identifies the Service",
          "type": "string"
        },
        "ResReasonCode": {
          "description": "Problem reason code from the reason master table. type Service call.",
          "type": "string"
        },
        "WipPosted": {
          "description": "Indicates that record was processed by the Capture Wip/Cos program (JCP80-GN.W).  WipPosted records cannot be maintained through labor entry.",
          "type": "boolean"
        },
        "DiscrepQty": {
          "format": "double",
          "description": "The Non-conformance (scrap) quantity reported in this field would go into Q/A for inspection.",
          "type": "number"
        },
        "DiscrpRsnCode": {
          "description": " The reason code that is used to link the transaction to the reason master record, which indicates why the Non-Conformance (discrepant) occurred and allows the system the ability to recap Non-Conformance (scrap) by a code for analysis purposes.\r\n\r\nThis should only exist  when DiscrepQty Ne 0.00.",
          "type": "string"
        },
        "ParentLaborDtlSeq": {
          "format": "int32",
          "description": "If this record was created through Back Flushing, then this field contains the LaborDtlSeq of the LaborDtl record which caused this record to be created.  The LaborDtl record wich caused the Back Flushing process to start and create other LaborDtl recods is the Parent and the LaborDtl records created by the Back Flushing process are the Children.",
          "type": "integer"
        },
        "LaborEntryMethod": {
          "description": "Indicates the Method for Labor Entry.  Can be \"T\" - Time and Quantity, \"Q\" - Quantity Only (Time is estimated) or \"B\" - Backflush.  If \"B\" then the LaborNote will be \"Backflushed\".",
          "type": "string"
        },
        "FiscalYearSuffix": {
          "description": "Fiscal year suffix.",
          "type": "string"
        },
        "FiscalCalendarID": {
          "description": "The fiscal calendar year/suffix/period were derived from.",
          "type": "string"
        },
        "BFLaborReq": {
          "description": "It indicates that the laborDtl record is pending labor for Backflush operations. It is cleared by Backflush Labor Server Process after processing the pending labor",
          "type": "boolean"
        },
        "ABTUID": {
          "description": "Reference to the ABT, it is GUID,used in PostingEngine",
          "type": "string"
        },
        "ProjectID": {
          "description": "Descriptive code assigned by the user to uniquely identify the Jobs, Orders, POs, and Tasks in a Project.  Cannot be blank.",
          "type": "string"
        },
        "PhaseID": {
          "description": "Project Phase ID",
          "type": "string"
        },
        "RoleCd": {
          "description": "Project Role Code",
          "type": "string"
        },
        "TimeTypCd": {
          "description": "Time Type Code",
          "type": "string"
        },
        "PBInvNum": {
          "format": "int32",
          "description": "The Project Billing Invoice Number where these charges were processed.",
          "type": "integer"
        },
        "PMUID": {
          "format": "int32",
          "description": "The payment method of the time.",
          "type": "integer"
        },
        "TaskSetID": {
          "description": "Link to Task set",
          "type": "string"
        },
        "ApprovedDate": {
          "format": "date-time",
          "description": "The date the time received final approval.",
          "type": "string"
        },
        "ClaimRef": {
          "description": "Brief description of the time.  Can be used to group time entries together, for example, all time entries incurred on the same trip can be assigned the same reference.",
          "type": "string"
        },
        "QuickEntryCode": {
          "description": "Quick entry code.  Reference to the QuickEntry table.  Can be used to default information into the time record.",
          "type": "string"
        },
        "TimeStatus": {
          "description": " The status of the time.  Values are:\r\nBlank\r\nE - Entered\r\nS - Submitted\r\nP - Partially Approved\r\nA - Approved\r\nR - Rejected",
          "type": "string"
        },
        "CreatedBy": {
          "description": "Userid of the user who created the record.",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "The date the record was created.",
          "type": "string"
        },
        "CreateTime": {
          "format": "int32",
          "description": "The time the record was created (in seconds since midnight)",
          "type": "integer"
        },
        "ChangedBy": {
          "description": "Userid of the user who made the last change to this record.",
          "type": "string"
        },
        "ChangeDate": {
          "format": "date-time",
          "description": "The date the record was last changed.",
          "type": "string"
        },
        "ChangeTime": {
          "format": "int32",
          "description": "The time the record was last changed (in seconds since midnight)",
          "type": "integer"
        },
        "ActiveTaskID": {
          "description": "The Currently active Stage changing task",
          "type": "string"
        },
        "LastTaskID": {
          "description": "The Last Complete Milestone task",
          "type": "string"
        },
        "CreatedViaTEWeekView": {
          "description": "For development use only.  This field indicates that this LaborDtl record was generated via the Weekly View tab of Time and Expense Entry, which is a way for the user to enter bulk data for hours within a week for the same task.",
          "type": "boolean"
        },
        "CurrentWFStageID": {
          "description": "The identifier of the workflow stage.",
          "type": "string"
        },
        "WFGroupID": {
          "description": "The identifier of the workflow group",
          "type": "string"
        },
        "WFComplete": {
          "description": "This indicates if the workflow for this group is complete.",
          "type": "boolean"
        },
        "ApprovalRequired": {
          "description": "Indicates if approval is required for this transaction.",
          "type": "boolean"
        },
        "SubmittedBy": {
          "description": "The User ID of the submitter.",
          "type": "string"
        },
        "PBRateFrom": {
          "description": "Project Billing calculation in COSandWIP: where Rate is got from (EMPL=Employee, ROLE=Role, PROJ = Project)",
          "type": "string"
        },
        "PBCurrencyCode": {
          "description": "Project Billing calculation in COSandWIP: Currency code is got from Project",
          "type": "string"
        },
        "PBHours": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Hours used for charge",
          "type": "number"
        },
        "PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup",
          "type": "number"
        },
        "PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours)",
          "type": "number"
        },
        "DocPBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Project currency",
          "type": "number"
        },
        "Rpt1PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "Rpt2PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "Rpt3PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "DocPBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Project currency",
          "type": "number"
        },
        "Rpt1PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Rpt2PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Rpt3PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ActID": {
          "format": "int32",
          "description": "Links to PActDtl.ActID",
          "type": "integer"
        },
        "DtailID": {
          "format": "int32",
          "description": "System assigned unique id number for the detail. Links to PActDtl.DetailID",
          "type": "integer"
        },
        "ProjProcessed": {
          "description": "Logical field to indicate if this record has been read by project analysis process.",
          "type": "boolean"
        },
        "AsOfDate": {
          "format": "date-time",
          "description": "Used By Project Analysis Process.",
          "type": "string"
        },
        "AsOfSeq": {
          "format": "int32",
          "description": "Used By Project Analysis Process.",
          "type": "integer"
        },
        "JDFInputFiles": {
          "description": "JDFInputFiles",
          "type": "string"
        },
        "JDFNumberOfPages": {
          "description": "JDFNumberOfPages",
          "type": "string"
        },
        "BatchWasSaved": {
          "description": "BatchWasSaved",
          "type": "string"
        },
        "AssignToBatch": {
          "description": "AssignToBatch",
          "type": "boolean"
        },
        "BatchComplete": {
          "description": "BatchComplete",
          "type": "boolean"
        },
        "BatchRequestMove": {
          "description": "BatchRequestMove",
          "type": "boolean"
        },
        "BatchPrint": {
          "description": "BatchPrint",
          "type": "boolean"
        },
        "BatchLaborHrs": {
          "format": "double",
          "description": "BatchLaborHrs",
          "type": "number"
        },
        "BatchPctOfTotHrs": {
          "format": "double",
          "description": "BatchPctOfTotHrs",
          "type": "number"
        },
        "BatchQty": {
          "format": "double",
          "description": "BatchQty",
          "type": "number"
        },
        "BatchTotalExpectedHrs": {
          "format": "double",
          "description": "BatchTotalExpectedHrs",
          "type": "number"
        },
        "JDFOpCompleted": {
          "description": "JDFOpCompleted",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Downtime": {
          "description": "Downtime",
          "type": "boolean"
        },
        "RefJobNum": {
          "description": "RefJobNum",
          "type": "string"
        },
        "RefAssemblySeq": {
          "format": "int32",
          "description": "RefAssemblySeq",
          "type": "integer"
        },
        "RefOprSeq": {
          "format": "int32",
          "description": "RefOprSeq",
          "type": "integer"
        },
        "Imported": {
          "description": "Imported",
          "type": "boolean"
        },
        "ImportDate": {
          "format": "date-time",
          "description": "ImportDate",
          "type": "string"
        },
        "TimeAutoSubmit": {
          "description": " If the Time Detail is submited when record is saved, defaulted from Plant Configuration Control;\r\nEnable for new records only",
          "type": "boolean"
        },
        "BatchMode": {
          "description": "BatchMode",
          "type": "boolean"
        },
        "BillServiceRate": {
          "format": "double",
          "description": "BillServiceRate",
          "type": "number"
        },
        "HCMPayHours": {
          "format": "double",
          "description": "Pay Hours used for HCM",
          "type": "number"
        },
        "EpicorFSA": {
          "description": "True if transaction is related to Epicor FSA",
          "type": "boolean"
        },
        "DiscrepAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the reported Non-comformance quantity",
          "type": "integer"
        },
        "LaborAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the Labor Qty",
          "type": "integer"
        },
        "ScrapAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the reported Scrap Quantity",
          "type": "integer"
        },
        "AllowDirLbr": {
          "description": "Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.",
          "type": "boolean"
        },
        "ApprovalPhaseDesc": {
          "description": "Used by Time and Expense approval only, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalPhaseID": {
          "description": "Used by Time and Expense approval only, populated with the JobHead.PhaseID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalProjectDesc": {
          "description": "Used by Time and Expense approval only, populated with the Project.Description for ApprovalProjectID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalProjectID": {
          "description": "Used by Time and Expense approval only, populated with the JobHead.ProjectID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovedBy": { "type": "string" },
        "ApprvrHasOpenTask": {
          "description": "Used in approval entry.  Indicates if the approver has an open task or not.",
          "type": "boolean"
        },
        "BaseCurrCodeDesc": {
          "description": "Company Base currency code description for display in LaborDtl grid.",
          "type": "string"
        },
        "BurdenCost": {
          "format": "double",
          "description": "calculated field: BurdenHrs * BurdenRate",
          "type": "number"
        },
        "CallCode": {
          "description": "Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "CapabilityDescription": { "type": "string" },
        "CapabilityID": { "type": "string" },
        "ChargeRate": {
          "format": "double",
          "description": "Charge rate calculated for Time and Expense approval",
          "type": "number"
        },
        "ChargeRateSRC": {
          "description": "Transalated text that indicates where the Charge Rate was derived from: Project, Employee, Role, Labor Rate",
          "type": "string"
        },
        "ChgRateCurrDesc": {
          "description": "The currency code description for the laborDtl charge rate - displayed in labor approval labordtl grid",
          "type": "string"
        },
        "CompleteFlag": { "type": "boolean" },
        "ContractCode": {
          "description": "Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "ContractNum": {
          "format": "int32",
          "description": "Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.",
          "type": "integer"
        },
        "DiscrepUOM": {
          "description": "Unit of Measure used for DiscrepQty",
          "type": "string"
        },
        "DisLaborType": {
          "description": "Field that indicates if field DisLaborTypeshould be disabled.",
          "type": "boolean"
        },
        "DisplayJob": { "type": "string" },
        "DisPrjRoleCd": {
          "description": "Field that indicates if field PrjRoleCd should be disabled.",
          "type": "boolean"
        },
        "DisTimeTypCd": {
          "description": "Field that indicates if field TimeTypCd should be disabled.",
          "type": "boolean"
        },
        "DowntimeTotal": {
          "format": "double",
          "type": "number"
        },
        "DspChangeTime": { "type": "string" },
        "DspCreateTime": { "type": "string" },
        "DspTotHours": { "type": "string" },
        "DtClockIn": {
          "format": "date-time",
          "type": "string"
        },
        "DtClockOut": {
          "format": "date-time",
          "type": "string"
        },
        "EfficiencyPercentage": {
          "format": "double",
          "description": "Shows the efficiency of the hours calculated by dividing the Earned Hours by the Burden Hours when the latter are greater than zero.",
          "type": "number"
        },
        "EmployeeName": {
          "description": "Labor Detail Employee Name",
          "type": "string"
        },
        "EnableComplete": { "type": "boolean" },
        "EnableCopy": {
          "description": "Indicates if the copy button is enabled",
          "type": "boolean"
        },
        "EnableDiscrepQty": { "type": "boolean" },
        "EnableInspection": { "type": "boolean" },
        "EnableLaborQty": { "type": "boolean" },
        "EnableNextOprSeq": { "type": "boolean" },
        "EnablePrintTagsList": { "type": "boolean" },
        "EnableRecall": {
          "description": "Indicates if the recall button is enabled",
          "type": "boolean"
        },
        "EnableRecallAprv": {
          "description": "Indicates if recall is available for an approver",
          "type": "boolean"
        },
        "EnableRequestMove": { "type": "boolean" },
        "EnableResourceGrpID": { "type": "boolean" },
        "EnableScrapQty": { "type": "boolean" },
        "EnableSN": {
          "description": "Enable the SN Button?",
          "type": "boolean"
        },
        "EnableSubmit": {
          "description": "Indicates if the submit button is enabled",
          "type": "boolean"
        },
        "EndActivity": { "type": "boolean" },
        "EnteredOnCurPlant": {
          "description": "To know if the LaborDtl was created on the current plant",
          "type": "boolean"
        },
        "FSAAction": {
          "description": "Has the Transaction Type field set in FSA and is stored on FSAExtData db table.",
          "type": "string"
        },
        "FSACallCode": {
          "description": "Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAContractCode": {
          "description": "Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAContractNum": {
          "format": "int32",
          "description": "Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAEmpID": {
          "description": "Employee created in ERP and processed on FSA as Service Technician, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAEquipmentInstallID": {
          "format": "int32",
          "description": "Resource ID for Equipment in FSAOffice ( this can be found in the Equipment information/Administrative tab in the Resource ID). Stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAEquipmentPartNum": {
          "description": "Part created as equipment in ERP and Installed through FSA process, stored in FSAExtData.",
          "type": "string"
        },
        "FSAServiceOrderNum": {
          "format": "int32",
          "description": "Service Order number generated on FSA, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAServiceOrderResourceNum": {
          "format": "int32",
          "description": "Service Order Resource generated on FSA, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAWarrantyCode": {
          "description": "Warranty created in ERP and processed on FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSComplete": { "type": "boolean" },
        "GLTranAmt": {
          "format": "double",
          "description": "GL Journal Source Transaction Amount",
          "type": "number"
        },
        "GLTranDate": {
          "format": "date-time",
          "description": "GL Journal Source Transaction Date",
          "type": "string"
        },
        "HasAccessToRow": {
          "description": "Indicates if the user has access to the row",
          "type": "boolean"
        },
        "HasComments": {
          "description": "Indicates if the labor detail has comments",
          "type": "boolean"
        },
        "HH": {
          "description": "To tell the bo that this transaction was being modified from HH.",
          "type": "boolean"
        },
        "IntExternalKey": {
          "description": "Unique identifier of related integration record.",
          "type": "string"
        },
        "ISFixHourAndQtyOnly": {
          "description": "Indicates if the job operation is marked as fixed hours and quantity only.",
          "type": "boolean"
        },
        "JCSystReworkReasons": { "type": "boolean" },
        "JCSystScrapReasons": { "type": "boolean" },
        "JobOperComplete": { "type": "boolean" },
        "JobType": { "type": "string" },
        "JobTypeCode": {
          "description": "JobHead.Jobtype. Needed a different name since LaborDtl.JobType was used as a transalated value of JobHead.JobType",
          "type": "string"
        },
        "LaborCost": {
          "format": "double",
          "description": "calculated field: LaborHrs * LaborRate",
          "type": "number"
        },
        "LaborUOM": {
          "description": "Unit of Measure used for LaborQty",
          "type": "string"
        },
        "LbrDay": {
          "description": "Text for the day of the week that corresponds to the LaborDtl.ClockInDate",
          "type": "string"
        },
        "LbrMonth": {
          "description": "Text for the calendar month name that corresponds to the LaborDtl.ClockInDate",
          "type": "string"
        },
        "LbrWeek": {
          "description": "Text to show the week date range (Sunday-Saturday) that corresponds to the LaborDtl.ClockInDate such as \"5/2/2009 - 5/9/2009\"",
          "type": "string"
        },
        "MES": { "type": "boolean" },
        "MultipleEmployeesText": { "type": "string" },
        "NewDifDateFlag": {
          "format": "int32",
          "type": "integer"
        },
        "NewPrjRoleCd": {
          "description": "field to designate a new Project Role Code ? used by Labor Transaction Project Role Code Maint",
          "type": "string"
        },
        "NewRoleCdDesc": {
          "description": "Holds the description for NewPrjRoleCd",
          "type": "string"
        },
        "NextAssemblySeq": {
          "format": "int32",
          "type": "integer"
        },
        "NextOperDesc": { "type": "string" },
        "NextOprSeq": {
          "format": "int32",
          "type": "integer"
        },
        "NextResourceDesc": { "type": "string" },
        "NonConfProcessed": {
          "description": "To evaluate if the NonComformance has been already processed in inspection and no changes can be applied on LaborDtl then.",
          "type": "boolean"
        },
        "NotSubmitted": { "type": "boolean" },
        "OkToChangeResourceGrpID": {
          "description": "Holds user's answer to question: \"Resource belongs to a different ResourceGroup.  ResourceGroup will be changed.  Do you wish to continue?\"",
          "type": "boolean"
        },
        "PartDescription": { "type": "string" },
        "PartNum": { "type": "string" },
        "PBAllowModify": { "type": "boolean" },
        "PendingApprovalBy": { "type": "string" },
        "PhaseJobNum": {
          "description": "External field for the Job associated with the WBS Phase ID. The JobNum defaulted into this field will also be defaulted into LaborDtl.JobNum",
          "type": "string"
        },
        "PhaseOprSeq": {
          "format": "int32",
          "description": "External field for the Operation associated with the WBS Phase ID. The operation entered in this field will be defaulted into  LaborDtl.OprSeq",
          "type": "integer"
        },
        "PrintNCTag": { "type": "boolean" },
        "PrjUsedTran": { "type": "string" },
        "ProdDesc": { "type": "string" },
        "ProjPhaseID": { "type": "string" },
        "RequestMove": { "type": "boolean" },
        "ResourceDesc": { "type": "string" },
        "RoleCdDisplayAll": { "type": "boolean" },
        "ScrapUOM": {
          "description": "Unit of Measure used for ScrapQty.",
          "type": "string"
        },
        "SentFromMES": {
          "description": "Flag field to identify if the row is being sent from MES",
          "type": "boolean"
        },
        "StartActivity": { "type": "boolean" },
        "TimeDisableDelete": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TreeNodeImageName": { "type": "string" },
        "UnapprovedFirstArt": { "type": "boolean" },
        "WarrantyCode": {
          "description": "Warranty linked to part and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "WeekDisplayText": { "type": "string" },
        "PCID": {
          "description": "Package Control Identification Number",
          "type": "string"
        },
        "EnablePCID": {
          "description": "EnablePCID",
          "type": "boolean"
        },
        "OutputBin": {
          "description": "The output bin from the resource",
          "type": "string"
        },
        "OutputWarehouse": {
          "description": "The output warehouse from the resource",
          "type": "string"
        },
        "EnableLot": {
          "description": "Internal flag used for the row rules to control whether the Lot columns should be enabled.",
          "type": "boolean"
        },
        "LotNum": {
          "description": "Lot number that is to be added to the PCID",
          "type": "string"
        },
        "PrintPCIDContents": {
          "description": "Flag to indicate that whether to print a PCID contents label for the entered PCID after the processing the reported quantity,",
          "type": "boolean"
        },
        "HasAttachments": {
          "description": "Indicates if the labor detail has attachments",
          "type": "boolean"
        },
        "AttrClassID": { "type": "string" },
        "DiscrepAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for DiscrepQty",
          "type": "string"
        },
        "DiscrepAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for DiscrepQty",
          "type": "string"
        },
        "ScrapAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for ScrapQty",
          "type": "string"
        },
        "ScrapAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for ScrapQty",
          "type": "string"
        },
        "LaborAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for LaborQty",
          "type": "string"
        },
        "LaborAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for LaborQty",
          "type": "string"
        },
        "DisableRecallAndDelete": {
          "description": "Indicates if recall and delete should be disabled",
          "type": "boolean"
        },
        "RoleCdList": {
          "description": "List of available role codes",
          "type": "string"
        },
        "RowSelected": {
          "description": "Indicates if the row is selected for submit, recall, or copy",
          "type": "boolean"
        },
        "AppointmentStart": {
          "format": "date-time",
          "description": "Start date/time for calendar appoinment",
          "type": "string"
        },
        "AppointmentEnd": {
          "format": "date-time",
          "description": "End date/time for calendar appoinment",
          "type": "string"
        },
        "AppointmentTitle": {
          "description": "Title to display for the calendar appointment",
          "type": "string"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "DiscrpRsnDescription": { "type": "string" },
        "EmpBasicLastName": { "type": "string" },
        "EmpBasicFirstName": { "type": "string" },
        "EmpBasicName": { "type": "string" },
        "ExpenseCodeDescription": { "type": "string" },
        "HCMIntregationHCMEnabled": { "type": "boolean" },
        "HCMStatusStatus": { "type": "string" },
        "IndirectDescription": { "type": "string" },
        "JCDeptDescription": { "type": "string" },
        "JobAsmblPartNum": { "type": "string" },
        "JobAsmblDescription": { "type": "string" },
        "MachineDescription": { "type": "string" },
        "OpCodeOpDesc": { "type": "string" },
        "OpDescOpDesc": { "type": "string" },
        "PayMethodType": {
          "format": "int32",
          "type": "integer"
        },
        "PayMethodSummarizePerCustomer": { "type": "boolean" },
        "PayMethodName": { "type": "string" },
        "PhaseIDDescription": { "type": "string" },
        "ProjectDescription": { "type": "string" },
        "ResourceGrpDescription": { "type": "string" },
        "ResReasonDescription": { "type": "string" },
        "ReWorkReasonDescription": { "type": "string" },
        "RoleCdRoleDescription": { "type": "string" },
        "ScrapReasonDescription": { "type": "string" },
        "ShiftDescription": { "type": "string" },
        "TimeTypCdDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        },
        "LaborDtlComments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtlComment" }
        },
        "LaborEquips": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborEquip" }
        },
        "LaborParts": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborPart" }
        },
        "LbrScrapSerialNumbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
        },
        "LaborDtlAttches": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
        }
      }
    },
    "Erp.LaborDtlSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtl" }
        }
      }
    },
    "Erp.LaborDtlAttch": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "LaborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "type": "integer"
        },
        "DrawingSeq": {
          "format": "int32",
          "type": "integer"
        },
        "XFileRefNum": {
          "format": "int32",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ForeignSysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DrawDesc": { "type": "string" },
        "FileName": { "type": "string" },
        "PDMDocID": { "type": "string" },
        "DocTypeID": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborDtlAttchSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtlAttch" }
        }
      }
    },
    "Erp.LaborDtlComment": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "The unique identifier of the Labor Header the comment relates to.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "CommentNum": {
          "format": "int32",
          "description": "Internal identifier of the comment record.  Used in conjunction with EmpTimeNum to make the record unique.",
          "type": "integer"
        },
        "CommentType": {
          "description": " The comment type of this record.  Values are:\r\n\"SUB\" Submit\r\n\"APP\" Approve\r\n\"REJ\" Reject",
          "type": "string"
        },
        "CommentText": {
          "description": "The comment text.",
          "type": "string"
        },
        "CreatedBy": {
          "description": "Userid of the user who created the record.",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "The date the record was created.",
          "type": "string"
        },
        "CreateTime": {
          "format": "int32",
          "description": "The time the record was created (in seconds since midnight)",
          "type": "integer"
        },
        "ChangedBy": {
          "description": "Userid of the user who made the last change to this record.",
          "type": "string"
        },
        "ChangeDate": {
          "format": "date-time",
          "description": "The date the record was last changed.",
          "type": "string"
        },
        "ChangeTime": {
          "format": "int32",
          "description": "The time the record was last changed (in seconds since midnight)",
          "type": "integer"
        },
        "TaskSeqNum": {
          "format": "int32",
          "description": "The identifier of the Task record the comment is related to.  Can be zero, which indicates the comment is not related to a specific task.",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DspChangeTime": { "type": "string" },
        "DspCreateTime": { "type": "string" },
        "TreeNodeImageName": { "type": "string" },
        "IntExternalKey": {
          "description": "Unique identifier of related integration record.",
          "type": "string"
        },
        "TimeEntryCommentTypeList": {
          "description": "List of valid comment types for Time Entry",
          "type": "string"
        },
        "CommentTypeDesc": { "type": "string" },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborDtlCommentSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtlComment" }
        }
      }
    },
    "Erp.LaborEquip": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "EquipID": {
          "description": "Descriptive code assigned by the user to uniquely identify the Equipment. Cannot be blank.",
          "type": "string"
        },
        "Hours": {
          "format": "double",
          "description": "Hours that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = \"Hrs\"",
          "type": "number"
        },
        "Qty": {
          "format": "double",
          "description": "Quantity that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = \"Qty\"",
          "type": "number"
        },
        "CurrentMeter": {
          "format": "int32",
          "description": "Current Meter reading which will update the Equip.CurrentMeter. Relevant only when the related Equip.LaborOpt = \"Mtr\"",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "EquipLaborMeterOpt": { "type": "string" },
        "EquipDescription": { "type": "string" },
        "EquipMeterUOM": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborEquipSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborEquip" }
        }
      }
    },
    "Erp.LaborPart": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "PartNum": {
          "description": "Part number of the manufactured item that the quantity is for. Must be defined on the Job in the JobPart table.",
          "type": "string"
        },
        "PartQty": {
          "format": "double",
          "description": "The number of individual parts completed on this labor transaction. Updates the JobPart.QtyCompleted.",
          "type": "number"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "MESProcessing": {
          "description": "UI Sets this to true when processing from MES Labor Entry.  The BL uses this to determine if PartWip/MtlQueue logic should be performed.",
          "type": "boolean"
        },
        "RequestMove": { "type": "boolean" },
        "PartUOM": {
          "description": "Unit of Measure for the Part defined on the Operation",
          "type": "string"
        },
        "PartDescription": { "type": "string" },
        "RevisionNum": { "type": "string" },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborPartSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborPart" }
        }
      }
    },
    "Erp.LbrScrapSerialNumber": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "LaborHedSeq of the related LaborDtl",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "LaborDtlSeq of the related LaborDtl",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "PartNum": {
          "description": "Part Number",
          "type": "string"
        },
        "JobNum": {
          "description": "Job Number",
          "type": "string"
        },
        "AssemblySeq": {
          "format": "int32",
          "description": "AssemblySeq this scrap serial number is for",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "description": "OprSeq this scrap serial number is for",
          "type": "integer"
        },
        "EnableStatus": {
          "description": "Indicates whether the Status field can be updated.",
          "type": "boolean"
        },
        "SNStatus": {
          "description": "New status for the serial number. This field will require Code/Desc definition: REJECTED`Scrap INSPECTION`Nonconformance WIP`WIP",
          "type": "string"
        },
        "SNStatusDesc": {
          "description": "The SNStatus description ? set same as SerialNo.SNStatusTrans",
          "type": "string"
        },
        "Selected": {
          "description": "Serial Number Selected for process",
          "type": "boolean"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LbrScrapSerialNumberSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LbrScrapSerialNumber" }
        }
      }
    },
    "Erp.LaborDtlGroup": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": " The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are\r\n\r\nconcurrently active for an employee in order to distribute the labor hours.",
          "type": "string"
        },
        "ClaimRef": {
          "description": "Brief description of the expense.  Can be used to expenses together, for example, all expenses incurred on the same trip can be assigned the same reference.",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborDtlGroupSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborDtlGroup" }
        }
      }
    },
    "Erp.SelectedSerialNumber": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "SerialNumber": {
          "description": "SerialNumber",
          "type": "string"
        },
        "Scrapped": {
          "description": "Scrapped flag",
          "type": "boolean"
        },
        "ScrappedReasonCode": {
          "description": "Scrapped reason code",
          "type": "string"
        },
        "Voided": {
          "description": "Voided flag",
          "type": "boolean"
        },
        "Reference": {
          "description": "Reference field",
          "type": "string"
        },
        "ReasonCodeType": {
          "description": "Reason code type = s",
          "type": "string"
        },
        "ReasonCodeDesc": {
          "description": "Reason code description",
          "type": "string"
        },
        "PartNum": {
          "description": "PartNumber",
          "type": "string"
        },
        "SNPrefix": {
          "description": "Serial number prefix",
          "type": "string"
        },
        "SNBaseNumber": {
          "description": "Base number used to create the serial number",
          "type": "string"
        },
        "SourceRowID": {
          "format": "uuid",
          "description": "RowID of the source record for this serial number",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TransType": {
          "description": "TransType of the record that created this serial number",
          "type": "string"
        },
        "PassedInspection": {
          "description": "True if this serial numbered part passed inspection",
          "type": "boolean"
        },
        "Deselected": {
          "description": "Used to flag previously selected serial numbers as deselected",
          "type": "boolean"
        },
        "KitWhseList": { "type": "string" },
        "RawSerialNum": {
          "description": "This will be the raw serial number as it was scanned or entered into the system. This would only differ from the SerialNumber field if a validate type mask was being used where characters were stripped (using ~ in the mask).",
          "type": "string"
        },
        "KBLbrAction": {
          "format": "int32",
          "description": "Action type field used for Kanban receipts to indicate if the new serial number status is Inventory, Scrapped or NonConf.  This requires Code/desc:  1 ` inventory 2 ` Scrapped 3 ` Nonconformance",
          "type": "integer"
        },
        "KBLbrActionDesc": {
          "description": "Description field for KBLbrAction ? holds the translated description for the KBLbrAction code for UI display and combo box.",
          "type": "string"
        },
        "PreventDeselect": {
          "description": "If true, then users can not deselect this serial number.  This is used by applications that allow maintenance to the Selected Serial Numbers after update.",
          "type": "boolean"
        },
        "XRefPartNum": {
          "description": "Used only by SN Assignment",
          "type": "string"
        },
        "XRefPartType": {
          "description": "Used only by SN Assignment: C = Customer Part / I = Internal Part XRef",
          "type": "string"
        },
        "PreDeselected": { "type": "boolean" },
        "poLinkValues": {
          "description": "temporary field used to link the packout lines to ship detail lines",
          "type": "string"
        },
        "SNMask": {
          "description": "The mask the was used to generate the serial number",
          "type": "string"
        },
        "NotSavedToDB": {
          "description": "Flag to indicate that the SelectedSerialNumbers entry has not yet been saved to the DB for the related transaction. Used to keep track of which deselected serial numbers need to be passed to the transaction update logic.",
          "type": "boolean"
        },
        "RowSelected": { "type": "boolean" },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.SelectedSerialNumberSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.SelectedSerialNumber" }
        }
      }
    },
    "Erp.SNFormat": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "Plant": {
          "description": "Site Identifier. This field cannot be blank.",
          "type": "string"
        },
        "PartNum": {
          "description": "The PartNum field identifies the Part and is used in the primary key.",
          "type": "string"
        },
        "NumberOfDigits": {
          "format": "int32",
          "description": "Number of digits in the serial number",
          "type": "integer"
        },
        "SNMask": {
          "description": "If the SNBaseDataType is Mask this is the Serial Mask ID assigned for format validation/generation.",
          "type": "string"
        },
        "SNBaseDataType": {
          "description": " Current setting for Data type of the Base Serial Number field to be used as new serial numbers are generated. Valid values; Character, Integer, Mask\r\nCode/desc required:\r\nCHARACTER`Alphanumeric\r\nINTEGER`NumericOnly\r\nMASK`Serial Mask\r\nThis field should be flagged as Include = true in Object Designer.",
          "type": "string"
        },
        "SNFormat1": { "type": "string" },
        "LeadingZeroes": {
          "description": "Whether or not to have leading zeroes",
          "type": "boolean"
        },
        "SNPrefix": {
          "description": " Current setting for the prefix that will be attached to all new Serial Numbers as they are generated for Character and Integer format types.\r\nThis field should be flagged as Include = true in Object Designer.",
          "type": "string"
        },
        "SNMaskSuffix": {
          "description": "A standard suffix that will be attached to all serial numbers generated for the PartSite currently used only by SNBaseStructure Mask types",
          "type": "string"
        },
        "SNMaskPrefix": {
          "description": "The prefix that was used to construct the serial number currently used only by SNBaseStructure Mask types",
          "type": "string"
        },
        "SNLastUsedSeq": {
          "description": "This is the last used serial sequence. It is used only for the Mask Generate type to determine the next logical serial number to generate for this part/Site. It can be altered by the user and several PartSites can have the same counter values defined, but",
          "type": "string"
        },
        "HasSerialNumbers": { "type": "boolean" },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "PartPricePerCode": { "type": "string" },
        "PartTrackLots": { "type": "boolean" },
        "PartTrackSerialNum": { "type": "boolean" },
        "PartTrackDimension": { "type": "boolean" },
        "PartSalesUM": { "type": "string" },
        "PartIUM": { "type": "string" },
        "PartSellingFactor": {
          "format": "double",
          "type": "number"
        },
        "PartPartDescription": { "type": "string" },
        "SerialMaskMaskType": {
          "format": "int32",
          "type": "integer"
        },
        "SerialMaskMask": { "type": "string" },
        "SerialMaskExample": { "type": "string" },
        "SerialMaskDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        },
        "UD_SysRevID": {
          "format": "binary",
          "type": "string"
        },
        "Date01": {
          "format": "date-time",
          "type": "string"
        },
        "Date02": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Erp.SNFormatSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.SNFormat" }
        }
      }
    },
    "Erp.TimeWeeklyView": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "EmployeeNum": { "type": "string" },
        "WeekBeginDate": {
          "format": "date-time",
          "type": "string"
        },
        "WeekEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "QuickEntryCode": { "type": "string" },
        "WeekDisplayText": { "type": "string" },
        "LaborType": { "type": "string" },
        "ProjectID": { "type": "string" },
        "PhaseID": { "type": "string" },
        "TimeTypCd": { "type": "string" },
        "JobNum": { "type": "string" },
        "AssemblySeq": {
          "format": "int32",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "type": "integer"
        },
        "RoleCd": { "type": "string" },
        "IndirectCode": { "type": "string" },
        "HoursSun": {
          "format": "double",
          "type": "number"
        },
        "HoursMon": {
          "format": "double",
          "type": "number"
        },
        "HoursTue": {
          "format": "double",
          "type": "number"
        },
        "HoursWed": {
          "format": "double",
          "type": "number"
        },
        "HoursThu": {
          "format": "double",
          "type": "number"
        },
        "HoursFri": {
          "format": "double",
          "type": "number"
        },
        "HoursSat": {
          "format": "double",
          "type": "number"
        },
        "TimeTypCdDescription": { "type": "string" },
        "RoleCdDescription": { "type": "string" },
        "IndirectCodeDescription": { "type": "string" },
        "PhaseIDDescription": { "type": "string" },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "ExpenseCode": { "type": "string" },
        "Complete": { "type": "boolean" },
        "ResourceGrpID": { "type": "string" },
        "ResourceID": { "type": "string" },
        "OpCode": { "type": "string" },
        "OpComplete": { "type": "boolean" },
        "LaborEntryMethod": { "type": "string" },
        "LaborRate": {
          "format": "double",
          "type": "number"
        },
        "ResourceGrpIDDescription": { "type": "string" },
        "JCDept": { "type": "string" },
        "TimeDisableUpdate": { "type": "boolean" },
        "ResourceIDDescription": { "type": "string" },
        "ExpenseCodeDescription": { "type": "string" },
        "LaborTypePseudo": { "type": "string" },
        "Shift": {
          "format": "int32",
          "type": "integer"
        },
        "ShiftDescription": { "type": "string" },
        "MessageText": { "type": "string" },
        "NewRowType": {
          "description": "Valid values are \"A\" for an Add of a new TimeWeeklyView row and \"C\" for a Copy of an existing TimeWeeklyView row.",
          "type": "string"
        },
        "DisPrjRoleCd": { "type": "boolean" },
        "DisTimeTypCd": { "type": "boolean" },
        "DisLaborType": { "type": "boolean" },
        "EnableSubmit": {
          "description": "Indicates if submit is available",
          "type": "boolean"
        },
        "EnableCopy": {
          "description": "Indicates if the copy function is available",
          "type": "boolean"
        },
        "EnableRecall": {
          "description": "Indicates if recall is available",
          "type": "boolean"
        },
        "AllowDirLbr": {
          "description": "Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.",
          "type": "boolean"
        },
        "TimeStatus": { "type": "string" },
        "ProjDesc": { "type": "string" },
        "WBSPhaseDesc": {
          "description": "WBS Phase Project Description",
          "type": "string"
        },
        "OperDesc": {
          "description": "Operation Description",
          "type": "string"
        },
        "ASMdesc": {
          "description": "Job Assembly description",
          "type": "string"
        },
        "TimeAutoSubmit": {
          "description": " If the Time is submited when record is saved, defaulted from Plant Configuration Control;\r\nEnable for new records only",
          "type": "boolean"
        },
        "DeleteRow": { "type": "boolean" },
        "HCMTotWeeklyPayHours": {
          "format": "double",
          "description": "HCM Integration Total Weekly Pay Hours",
          "type": "number"
        },
        "RoleCdList": {
          "description": "List of avaialble role codes",
          "type": "string"
        },
        "RowSelected": {
          "description": "Indicates if the row is selected for submit, recall, or copy.",
          "type": "boolean"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.TimeWeeklyViewSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.TimeWeeklyView" }
        }
      }
    },
    "Erp.TimeWorkHour": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "CalendarID": { "type": "string" },
        "WeekBeginDate": {
          "format": "date-time",
          "type": "string"
        },
        "WeekEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "SunDisplayDate": { "type": "string" },
        "MonDisplayDate": { "type": "string" },
        "TueDisplayDate": { "type": "string" },
        "WedDisplayDate": { "type": "string" },
        "ThuDisplayDate": { "type": "string" },
        "FriDisplayDate": { "type": "string" },
        "SatDisplayDate": { "type": "string" },
        "WeekDisplayText": { "type": "string" },
        "SunWorkHours": {
          "format": "double",
          "type": "number"
        },
        "MonWorkHours": {
          "format": "double",
          "type": "number"
        },
        "TueWorkHours": {
          "format": "double",
          "type": "number"
        },
        "WedWorkHours": {
          "format": "double",
          "type": "number"
        },
        "ThuWorkHours": {
          "format": "double",
          "type": "number"
        },
        "FriWorkHours": {
          "format": "double",
          "type": "number"
        },
        "SatWorkHours": {
          "format": "double",
          "type": "number"
        },
        "SunBookedHours": {
          "format": "double",
          "type": "number"
        },
        "MonBookedHours": {
          "format": "double",
          "type": "number"
        },
        "WedBookedHours": {
          "format": "double",
          "type": "number"
        },
        "ThuBookedHours": {
          "format": "double",
          "type": "number"
        },
        "FriBookedHours": {
          "format": "double",
          "type": "number"
        },
        "SunDiffHours": {
          "format": "double",
          "type": "number"
        },
        "MonDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SatBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TueBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TueDiffHours": {
          "format": "double",
          "type": "number"
        },
        "WedDiffHours": {
          "format": "double",
          "type": "number"
        },
        "ThuDiffHours": {
          "format": "double",
          "type": "number"
        },
        "FriDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SatDiffHours": {
          "format": "double",
          "type": "number"
        },
        "EmployeeNum": { "type": "string" },
        "CalendarDescription": { "type": "string" },
        "TotalWorkHours": {
          "format": "double",
          "type": "number"
        },
        "TotalBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TotalDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.TimeWorkHourSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.TimeWorkHour" }
        }
      }
    },
    "Erp.LaborListItem": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": "The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence \"LaborHedSeq\".",
          "type": "integer"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": " The Payroll date is the \"Logical Day\" that labor occurred. In most cases this is the same as the \"Physical Day\".  But when work is done before and after midnight then \"Labor Collection\" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.\r\nIt will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl.",
          "type": "string"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.",
          "type": "string"
        },
        "ClockInTime": {
          "format": "double",
          "description": "The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockin\" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockInTime": {
          "format": "double",
          "description": "Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.",
          "type": "number"
        },
        "ActualClockinDate": {
          "format": "date-time",
          "description": "The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  \"ClockInDate\".  This field is provided mainly for audit purposes.",
          "type": "string"
        },
        "LunchStatus": {
          "description": " An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the \"Lunch\" button is pressed.\r\n\r\nThe possible values are \"N\" - No lunch, \"O\" - Out to Lunch, \"R\" - Returned from lunch.",
          "type": "string"
        },
        "ActLunchOutTime": {
          "format": "double",
          "description": " Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.",
          "type": "number"
        },
        "LunchOutTime": {
          "format": "double",
          "description": " Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.\r\n\r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ActLunchInTime": {
          "format": "double",
          "description": " Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time.",
          "type": "number"
        },
        "LunchInTime": {
          "format": "double",
          "description": " Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.\r\nThe adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. \r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": "The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockOut\" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockOutTime": {
          "format": "double",
          "description": "Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.",
          "type": "number"
        },
        "PayHours": {
          "format": "double",
          "description": " Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.\r\nThe Logic for calculating hours from clockin, clockout is:\r\nIf ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. \r\nIf LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )\r\nelse Lunch Hours = ( LunchIn - LunchOut ).\r\nPayHours = GRoss Hours - Lunch Hours. \r\nRemember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions.",
          "type": "number"
        },
        "FeedPayroll": {
          "description": "Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.",
          "type": "boolean"
        },
        "TransferredToPayroll": {
          "description": "Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.",
          "type": "boolean"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "TranSet": {
          "description": "An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.",
          "type": "string"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open.",
          "type": "boolean"
        },
        "ChkLink": {
          "description": " Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.\r\nUsed to relate the labor to the payroll check detail.",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TotLbrHrs": {
          "format": "double",
          "type": "number"
        },
        "TotBurHrs": {
          "format": "double",
          "type": "number"
        },
        "WipPosted": { "type": "boolean" },
        "ImagePath": {
          "description": "Full Path of Employee PhotoFile",
          "type": "string"
        },
        "LunchBreak": {
          "description": "Indicates if a lunch break is part of the shift",
          "type": "boolean"
        },
        "EmpBasicShift": {
          "format": "int32",
          "description": "Normal work shift from EmpBasic",
          "type": "integer"
        },
        "EmpBasicSupervisorID": {
          "description": "The ID of the supervisor for the employee",
          "type": "string"
        },
        "DspPayHours": {
          "format": "double",
          "description": "For display purposes",
          "type": "number"
        },
        "GetNewNoHdr": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TimeDisableDelete": { "type": "boolean" },
        "MES": { "type": "boolean" },
        "EmployeeNumLastName": {
          "description": "Last name of employee",
          "type": "string"
        },
        "EmployeeNumName": {
          "description": "This is the employee's full name. This is not directly maintainable. It is a concatenation of the FirstName + MiddleInitial + LastName fields. It exists so that it can be used in browses or where ever the complete name in a first, middle, last fashion is required.",
          "type": "string"
        },
        "EmployeeNumFirstName": {
          "description": "First name of employee.",
          "type": "string"
        },
        "ShiftDescription": {
          "description": "A concatenation of Start + End time.",
          "type": "string"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.LaborListItemSetResponse": {
      "type": "object",
      "properties": {
        "@odata.context": { "type": "string" },
        "value": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.LaborListItem" }
        }
      }
    },
    "BuildJobOperPrjRoleList_input": {
      "required": [ "ipJobNum", "ipAssemblySeq", "ipOprSeq", "ipEmpID" ],
      "properties": {
        "ipJobNum": {
          "description": "JobNum",
          "type": "string"
        },
        "ipAssemblySeq": {
          "format": "int32",
          "description": "AssemblySeq",
          "type": "integer"
        },
        "ipOprSeq": {
          "format": "int32",
          "description": "OprSeq",
          "type": "integer"
        },
        "ipEmpID": {
          "description": "EmpID",
          "type": "string"
        }
      }
    },
    "BuildJobOperPrjRoleList_output": {
      "type": "object",
      "properties": {
        "returnObj": { "type": "string" },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "whereClause": {
              "description": "Where Clause to use for role code combo",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "Erp.Tablesets.LaborTableset": {
      "type": "object",
      "properties": {
        "LaborHed": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborHedRow" },
          "readOnly": false
        },
        "LaborDtl": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlRow" },
          "readOnly": false
        },
        "LaborDtlAttch": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlAttchRow" },
          "readOnly": false
        },
        "LaborDtlComment": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlCommentRow" },
          "readOnly": false
        },
        "LaborEquip": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborEquipRow" },
          "readOnly": false
        },
        "LaborPart": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborPartRow" },
          "readOnly": false
        },
        "LbrScrapSerialNumbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LbrScrapSerialNumbersRow" },
          "readOnly": false
        },
        "LaborDtlGroup": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlGroupRow" },
          "readOnly": false
        },
        "SelectedSerialNumbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.SelectedSerialNumbersRow" },
          "readOnly": false
        },
        "SNFormat": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.SNFormatRow" },
          "readOnly": false
        },
        "TimeWeeklyView": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.TimeWeeklyViewRow" },
          "readOnly": false
        },
        "TimeWorkHours": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.TimeWorkHoursRow" },
          "readOnly": false
        },
        "ExtensionTables": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableData" },
          "readOnly": false
        }
      }
    },
    "Erp.Tablesets.LaborHedRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": "The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence \"LaborHedSeq\".",
          "type": "integer"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": " The Payroll date is the \"Logical Day\" that labor occurred. In most cases this is the same as the \"Physical Day\".  But when work is done before and after midnight then \"Labor Collection\" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.\r\nIt will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl.",
          "type": "string"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.",
          "type": "string"
        },
        "ClockInTime": {
          "format": "double",
          "description": "The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockin\" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockInTime": {
          "format": "double",
          "description": "Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.",
          "type": "number"
        },
        "ActualClockinDate": {
          "format": "date-time",
          "description": "The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  \"ClockInDate\".  This field is provided mainly for audit purposes.",
          "type": "string"
        },
        "LunchStatus": {
          "description": " An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the \"Lunch\" button is pressed.\r\n\r\nThe possible values are \"N\" - No lunch, \"O\" - Out to Lunch, \"R\" - Returned from lunch.",
          "type": "string"
        },
        "ActLunchOutTime": {
          "format": "double",
          "description": " Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.",
          "type": "number"
        },
        "LunchOutTime": {
          "format": "double",
          "description": " Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.\r\n\r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ActLunchInTime": {
          "format": "double",
          "description": " Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time.",
          "type": "number"
        },
        "LunchInTime": {
          "format": "double",
          "description": " Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.\r\nThe adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. \r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": "The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockOut\" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockOutTime": {
          "format": "double",
          "description": "Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.",
          "type": "number"
        },
        "PayHours": {
          "format": "double",
          "description": " Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.\r\nThe Logic for calculating hours from clockin, clockout is:\r\nIf ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. \r\nIf LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )\r\nelse Lunch Hours = ( LunchIn - LunchOut ).\r\nPayHours = GRoss Hours - Lunch Hours. \r\nRemember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions.",
          "type": "number"
        },
        "FeedPayroll": {
          "description": "Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.",
          "type": "boolean"
        },
        "TransferredToPayroll": {
          "description": "Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.",
          "type": "boolean"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "TranSet": {
          "description": "An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.",
          "type": "string"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open.",
          "type": "boolean"
        },
        "ChkLink": {
          "description": " Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.\r\nUsed to relate the labor to the payroll check detail.",
          "type": "string"
        },
        "BatchTotalHrsDisp": {
          "description": "BatchTotalHrsDisp",
          "type": "string"
        },
        "BatchHrsRemainDisp": {
          "description": "BatchHrsRemainDisp",
          "type": "string"
        },
        "BatchHrsRemainPctDisp": {
          "description": "BatchHrsRemainPctDisp",
          "type": "string"
        },
        "BatchSplitHrsMethod": {
          "description": "BatchSplitHrsMethod",
          "type": "string"
        },
        "BatchAssignTo": {
          "description": "BatchAssignTo",
          "type": "boolean"
        },
        "BatchComplete": {
          "description": "BatchComplete",
          "type": "boolean"
        },
        "BatchStartHrs": {
          "format": "date-time",
          "description": "BatchStartHrs",
          "type": "string"
        },
        "BatchEndHrs": {
          "format": "date-time",
          "description": "BatchEndHrs",
          "type": "string"
        },
        "BatchTotalHrs": {
          "format": "double",
          "description": "BatchTotalHrs",
          "type": "number"
        },
        "BatchHrsRemain": {
          "format": "double",
          "description": "BatchHrsRemain",
          "type": "number"
        },
        "BatchHrsRemainPct": {
          "format": "double",
          "description": "BatchHrsRemainPct",
          "type": "number"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Imported": {
          "description": "Imported",
          "type": "boolean"
        },
        "ImportDate": {
          "format": "date-time",
          "description": "ImportDate",
          "type": "string"
        },
        "BatchMode": {
          "description": "BatchMode",
          "type": "boolean"
        },
        "HCMPayHoursCalcType": {
          "description": "Indicates which type of Pay time calculation will be used when HCM Integration is on.",
          "type": "string"
        },
        "EmpBasicShift": {
          "format": "int32",
          "description": "Normal work shift from EmpBasic",
          "type": "integer"
        },
        "EmpBasicSupervisorID": {
          "description": "The ID of the supervisor for the employee",
          "type": "string"
        },
        "GetNewNoHdr": { "type": "boolean" },
        "HCMTotPayHours": {
          "format": "double",
          "description": "HCM Integration, Display the Total of Pay Hours of the Labor Details.",
          "type": "number"
        },
        "ImagePath": {
          "description": "Full Path of Employee PhotoFile",
          "type": "string"
        },
        "LunchBreak": {
          "description": "Indicates if a lunch break is part of the shift",
          "type": "boolean"
        },
        "MES": { "type": "boolean" },
        "PayrollValuesForHCM": {
          "description": "Temporal field that stores patch field value: HDR, DTL, NON",
          "type": "string"
        },
        "TimeDisableDelete": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TotBurHrs": {
          "format": "double",
          "type": "number"
        },
        "TotLbrHrs": {
          "format": "double",
          "type": "number"
        },
        "WipPosted": { "type": "boolean" },
        "DspPayHours": {
          "format": "double",
          "description": "For display purposes",
          "type": "number"
        },
        "FullyPosted": {
          "description": "Indicates if all labor has been posted",
          "type": "boolean"
        },
        "PartiallyPosted": {
          "description": "Indicates if some labor has been posted",
          "type": "boolean"
        },
        "HCMExistsWithStatus": { "type": "boolean" },
        "PayrollDateNav": {
          "format": "date-time",
          "description": "Payroll date for record navigation",
          "type": "string"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "EmployeeNumFirstName": { "type": "string" },
        "EmployeeNumName": { "type": "string" },
        "EmployeeNumLastName": { "type": "string" },
        "HCMStatusStatus": { "type": "string" },
        "PRSystHCMEnabled": { "type": "boolean" },
        "ShiftDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborDtlRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": " The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are\r\nconcurrently active for an employee in order to distribute the labor hours.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "LaborType": {
          "description": " Indicates the type of labor transaction. It can be \"I\" = Indirect, \"P\" - Production, \"S\" - Setup.\r\nThis value controls what fields are displayed/prompted for. \r\n\"I\" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.\r\n\"S\" Setup does not use IndirectCode.\r\n\"P\" Production does not use IndirectCode or SetupPctCmp,",
          "type": "string"
        },
        "LaborTypePseudo": {
          "description": " Correlates to LaborType.  Indicates the type of labor transaction, however \"Production\" LaborType can be broken out into \"Project\", \"Production\" or \"Service\".  Valid Values are \"I\" = Indirect, \"P\" - Production, \"S\" - Setup, \"J\" - Project, or \"V\" - Service.\r\nThis value controls what fields are displayed/prompted for. \r\n\"I\" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.\r\n\"S\" Setup does not use IndirectCode.\r\n\"P\" Production does not use IndirectCode or SetupPctCmp,",
          "type": "string"
        },
        "ReWork": {
          "description": "Logical flag that indicates if this is a Rework labor transaction. This MUST be NO for Indirect labor (LaborDtl.LaborType = I)",
          "type": "boolean"
        },
        "ReworkReasonCode": {
          "description": " The reason code that is used to link this transaction to a Reason master record, which indicates why this rework is occurring on this operation  and allows the system the ability to recap rework by a code for analysis purposes.\r\nThis should only exist  when LaborDtl.Rework = Yes.",
          "type": "string"
        },
        "JobNum": {
          "description": "Job number to which this labor transaction applies. For Setup &amp; Production labor this is a mandatory entry.  The program will use the JobNum/LotNum to validate that a record exists in Jhead and that Jhead.JobClosed is false.",
          "type": "string"
        },
        "AssemblySeq": {
          "format": "int32",
          "description": "The Assembly Sequence of the Job that the labor transaction applies to. This can be blank or must be valid in the JobAsmbl file.",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "description": " The sequence of the operation record within the specific Job/Assembly to which this labor transaction applies.\r\nFor setup &amp; production entries this must be valid and must not be a subcontract operation (JobOper.SubContract = NO).",
          "type": "integer"
        },
        "JCDept": {
          "description": "The Department in which the work was done. Default is from WrkCenter.JCDEpt. This code is DIRECTLY ENTERED.",
          "type": "string"
        },
        "ResourceGrpID": {
          "description": " The Resource Group in which the labor was performed.  This code IS DIRECTLY entered in labor entry, instead of the finding it based on the description.  This is mandatory and must be valid in the Resource Group table.\r\nFor production labor (LaborType = \"S\" or \"P\") the default is from the JobOper.PrimaryProdDtl JobOpDtl.ResourceGrpID.\r\nFor indirect labor (LaborType = I) there is no default.",
          "type": "string"
        },
        "OpCode": {
          "description": "The operation Code for this labor transaction. Default from JobOper.OpCode. This field IS DIRECTLY ENTERED. This is a mandatory field for direct labor transactions.",
          "type": "string"
        },
        "LaborHrs": {
          "format": "double",
          "description": "Labor hours are used in calculating labor cost for a job. It is stored as hours-hundredths. It is calculated whenever the start/stop time is changed. It can then be overridden.",
          "type": "number"
        },
        "BurdenHrs": {
          "format": "double",
          "description": "Job Cost Burden hours. Calculated whenever the start/stop times are changed. Can then be overridden.  This is zero for indirect labor.",
          "type": "number"
        },
        "LaborQty": {
          "format": "double",
          "description": "The Total production quantity reported.",
          "type": "number"
        },
        "ScrapQty": {
          "format": "double",
          "description": "The reported scrap quantity.",
          "type": "number"
        },
        "ScrapReasonCode": {
          "description": " The reason code that is used to link this transaction to a Reason master record, which indicates why this scrap occurred and allows the system the ability to recap scrap by a code for analysis purposes.\r\nThis should only exist  when ScrapQty Ne 0.00.",
          "type": "string"
        },
        "SetupPctComplete": {
          "format": "int32",
          "description": "Indicates what percent of the setup is considered complete as of this labor transaction.  If LaborDtl.SetupPctCmp is &gt; JobOper.SetupPctCmp then let JobOper.SetupPctCmp = LaborDtl.SetupPctCmp.",
          "type": "integer"
        },
        "Complete": {
          "description": "Indicates if this transaction \"completes\" either the setup or production for this operation.",
          "type": "boolean"
        },
        "IndirectCode": {
          "description": "A code that links to the Indirect master record that describes the type of indirect labor for this transaction. This field IS DIRECTLY ENTERED, not via a description/selection list method.   This is only valid when LaborType = \"I\" and must then be valid.",
          "type": "string"
        },
        "LaborNote": {
          "description": "A short note that the user can make about the labor transaction.",
          "type": "string"
        },
        "ExpenseCode": {
          "description": "The expense code for this labor transaction. An expense code is a abbreviated method of indirectly assigning a G/L account for the labor expense. DEFAULTS: for direct labor;  use the JobHead.ExpenseCode if its non-blank,  else use the Employee.ExpenseCode.                                                                   For Indirect Labor use the Indirect.ExpenseCode if not blank, else use the employee.ExpenseCode.",
          "type": "string"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "AppliedToSchedule": {
          "description": "an internal flag which indicates if this labor transaction has updated the job schedule. This will be updated via a Schedule refresh process.",
          "type": "boolean"
        },
        "ClockInMInute": {
          "format": "int32",
          "description": "Contains both the clock in date and time represented as the # of minutes from a base date. The date/time is stored in this format to allow an easier method for comparing time ranges. This will be utilized in labor collection logic when determining the # of jobs or # of employees to split labor and burden hours. This field is Not directly maintainable. It is just another representation of the ClockInDate and ClockInTime fields.",
          "type": "integer"
        },
        "ClockOutMinute": {
          "format": "int32",
          "description": "Contains both the clock out date and time. See \"ClockinMinute\" for further explanation of clock in/out. When Labor Collection first creates this record it sets ClockOutMinute = ClockInMinute + 1440. Then later during the clockout process it gets updated to represent the clockout time.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date that corresponds to the clock in time field. Labor entry uses the LaborHed.ClockInDate as a default for the first LaborDtl record of the LaborHed and then will use the date from the Last LaborDtl record. Labor Collection creates this field based on an adjusted system date.  See LaborHed.ClockInDate field description on adjusting the date.",
          "type": "string"
        },
        "ClockinTime": {
          "format": "double",
          "description": " The adjusted ClockIn time for job costing. Labor Collection updates this with the adjusted time. (see LaborHed.ClockIn for explanation of adjusted time). Labor entry uses LaborHed.Clockin as a default for the first LaborDtl record of a LaborHed. Then use the ClockOut of the last LaborDtl record for this LaborHed. Do not allow the ClockIn Time to be &lt; the LaborHed.ClockIn time.  Stored as hours.hundreths. The clockin/clockout are used to calculate the LaborHours, BurdenHours.\r\nThis field is Not directly maintainable. Instead the user enters the clockin time through a program defined fill-in widget which is formatted to conform to either Hours:Minutes or Hours.Hundreths based on the setting in JCSyst.TimeFormat. \r\nThe programs will handle the logic to convert \"to\" and \"from\" the fill-in widget.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": " The adjusted Clock Out time for job costing.  Labor entry uses  the LaborHed.ClockOut as a default on the first LaborDtl transaction of a LaborHed record. Do not allow the ClockOut to go past the LaborHed.ClockOut.  See \"Clockin\" for further explanation of clock in/out.\r\n\r\nLabor Entry updates this field at the time of clocking out of a job with the adjusted time. (see LaborHed.ClockOut for description of adjusted time)",
          "type": "number"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborDtl record is currently active. When the employee clocks out of the operation it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice to same operation, displaying which operations are currently active.....",
          "type": "boolean"
        },
        "OverRidePayRate": {
          "format": "double",
          "description": "User-defined rate.   The Manufacturing System provides entry/maintenance to this field in labor entry.  It is not referenced in any other part of the Manufacturing System.  Solely intended for use by programs the users may wish to develop.",
          "type": "number"
        },
        "LaborRate": {
          "format": "double",
          "description": "Labor rate used for this transaction. This is not maintainable or viewable from labor entry. It is captured from the EmpBasic.LaborRate at time of entry.",
          "type": "number"
        },
        "BurdenRate": {
          "format": "double",
          "description": "The burden rate for this transaction at the time the transaction was created. Capture the appropriate rate from the WrkCenter.ProdBurRate or WrkCenter.SetupBurRate. Note that these rates can be either a \"flat\" rate or a \"percent' of labor rate.  This is not user maintainable or viewable by Labor Entry.  Always Zero for indirect labor transactions.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ResourceID": {
          "description": "The ID of the Resource that was used to do the work. This field will be used to run reports using LaborDtl records to show how much work has been done on a specific Resource. This ID is directly entered in labor entry and Labor collection. It is only prompted for if the JcSyst.MachinePrompt = Yes/",
          "type": "string"
        },
        "OpComplete": {
          "description": "When displayed in Labor entry this field represents the current status of JobOper.OpComplete. It is used to directly toggle the operation from open to closed. The LaborDtl write trigger uses this to set JobOper.OpComplete.",
          "type": "boolean"
        },
        "EarnedHrs": {
          "format": "double",
          "description": "The amount of hours that it should have taken (based on standard) to produce the reported LaborQty. For Setup labor the Earned hours is the lessor of (Est.Setup - ActSetUp) or LaborDtl.BurdenHrs. Rework labor always has zero Earned hrs. Earned hours for production labor is calculated as (JobOper.EstProdHours / JobOper.RunQty) * LaborDtl.LaborQty",
          "type": "number"
        },
        "AddedOper": {
          "description": "This indicates if this labor transaction was against an \"added operation\" at the time it was created/updated. This field is a copy of the JobOPer.AddedOper. It is for internal use only. Used in the logic concerned with updating the ShopPerf summary file. This field prevents the summary from being corrupted if the user changes the JobOPer.AddedOper field after labor activity has occurred.",
          "type": "boolean"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": "Not directly user maintainable. Duplicated from LaborHed.PayrollDate. Is used as one of the selection criteria of the labor edit report. See LaborHed.PayrollDate for further info.",
          "type": "string"
        },
        "PostedToGL": {
          "description": " Indicates if this labor/burden cost was posted to G/L WIP accounts.  Transactions are posted in summary form.\r\nNote: All GL related fields (Fiscalyear,FiscalPeriod,Account,etc.) are established during the Caputure WIP/COS process (JCP80-GN.W)",
          "type": "boolean"
        },
        "FiscalYear": {
          "format": "int32",
          "description": " Fiscal year that entry was posted to in G/L.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "FiscalPeriod": {
          "format": "int32",
          "description": " Fiscal period that entry was posted to.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "JournalNum": {
          "format": "int32",
          "description": " Journal # that entry was posted to.\r\nNote: applicable only when posted to G/L.",
          "type": "integer"
        },
        "GLTrans": {
          "description": "Internal flag to indicates if this is the type of transaction that would affect GL.  It is used to prevent certain transactions from posting to G/L.  Currently details created from Job Split do not affect GL and set this to NO.",
          "type": "boolean"
        },
        "JournalCode": {
          "description": "Journal Code of the related GLJrnDtl.",
          "type": "string"
        },
        "InspectionPending": {
          "description": "Indicates if the labordtl record inspection has completed.",
          "type": "boolean"
        },
        "CallNum": {
          "format": "int32",
          "description": "The service call that this service record belongs to.",
          "type": "integer"
        },
        "CallLine": {
          "format": "int32",
          "description": "The line number of the service call this labor detail is for.",
          "type": "integer"
        },
        "ServNum": {
          "format": "int32",
          "description": "the service that is being performed on this line.",
          "type": "integer"
        },
        "ServCode": {
          "description": "A unique code that identifies the Service",
          "type": "string"
        },
        "ResReasonCode": {
          "description": "Problem reason code from the reason master table. type Service call.",
          "type": "string"
        },
        "WipPosted": {
          "description": "Indicates that record was processed by the Capture Wip/Cos program (JCP80-GN.W).  WipPosted records cannot be maintained through labor entry.",
          "type": "boolean"
        },
        "DiscrepQty": {
          "format": "double",
          "description": "The Non-conformance (scrap) quantity reported in this field would go into Q/A for inspection.",
          "type": "number"
        },
        "DiscrpRsnCode": {
          "description": " The reason code that is used to link the transaction to the reason master record, which indicates why the Non-Conformance (discrepant) occurred and allows the system the ability to recap Non-Conformance (scrap) by a code for analysis purposes.\r\n\r\nThis should only exist  when DiscrepQty Ne 0.00.",
          "type": "string"
        },
        "ParentLaborDtlSeq": {
          "format": "int32",
          "description": "If this record was created through Back Flushing, then this field contains the LaborDtlSeq of the LaborDtl record which caused this record to be created.  The LaborDtl record wich caused the Back Flushing process to start and create other LaborDtl recods is the Parent and the LaborDtl records created by the Back Flushing process are the Children.",
          "type": "integer"
        },
        "LaborEntryMethod": {
          "description": "Indicates the Method for Labor Entry.  Can be \"T\" - Time and Quantity, \"Q\" - Quantity Only (Time is estimated) or \"B\" - Backflush.  If \"B\" then the LaborNote will be \"Backflushed\".",
          "type": "string"
        },
        "FiscalYearSuffix": {
          "description": "Fiscal year suffix.",
          "type": "string"
        },
        "FiscalCalendarID": {
          "description": "The fiscal calendar year/suffix/period were derived from.",
          "type": "string"
        },
        "BFLaborReq": {
          "description": "It indicates that the laborDtl record is pending labor for Backflush operations. It is cleared by Backflush Labor Server Process after processing the pending labor",
          "type": "boolean"
        },
        "ABTUID": {
          "description": "Reference to the ABT, it is GUID,used in PostingEngine",
          "type": "string"
        },
        "ProjectID": {
          "description": "Descriptive code assigned by the user to uniquely identify the Jobs, Orders, POs, and Tasks in a Project.  Cannot be blank.",
          "type": "string"
        },
        "PhaseID": {
          "description": "Project Phase ID",
          "type": "string"
        },
        "RoleCd": {
          "description": "Project Role Code",
          "type": "string"
        },
        "TimeTypCd": {
          "description": "Time Type Code",
          "type": "string"
        },
        "PBInvNum": {
          "format": "int32",
          "description": "The Project Billing Invoice Number where these charges were processed.",
          "type": "integer"
        },
        "PMUID": {
          "format": "int32",
          "description": "The payment method of the time.",
          "type": "integer"
        },
        "TaskSetID": {
          "description": "Link to Task set",
          "type": "string"
        },
        "ApprovedDate": {
          "format": "date-time",
          "description": "The date the time received final approval.",
          "type": "string"
        },
        "ClaimRef": {
          "description": "Brief description of the time.  Can be used to group time entries together, for example, all time entries incurred on the same trip can be assigned the same reference.",
          "type": "string"
        },
        "QuickEntryCode": {
          "description": "Quick entry code.  Reference to the QuickEntry table.  Can be used to default information into the time record.",
          "type": "string"
        },
        "TimeStatus": {
          "description": " The status of the time.  Values are:\r\nBlank\r\nE - Entered\r\nS - Submitted\r\nP - Partially Approved\r\nA - Approved\r\nR - Rejected",
          "type": "string"
        },
        "CreatedBy": {
          "description": "Userid of the user who created the record.",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "The date the record was created.",
          "type": "string"
        },
        "CreateTime": {
          "format": "int32",
          "description": "The time the record was created (in seconds since midnight)",
          "type": "integer"
        },
        "ChangedBy": {
          "description": "Userid of the user who made the last change to this record.",
          "type": "string"
        },
        "ChangeDate": {
          "format": "date-time",
          "description": "The date the record was last changed.",
          "type": "string"
        },
        "ChangeTime": {
          "format": "int32",
          "description": "The time the record was last changed (in seconds since midnight)",
          "type": "integer"
        },
        "ActiveTaskID": {
          "description": "The Currently active Stage changing task",
          "type": "string"
        },
        "LastTaskID": {
          "description": "The Last Complete Milestone task",
          "type": "string"
        },
        "CreatedViaTEWeekView": {
          "description": "For development use only.  This field indicates that this LaborDtl record was generated via the Weekly View tab of Time and Expense Entry, which is a way for the user to enter bulk data for hours within a week for the same task.",
          "type": "boolean"
        },
        "CurrentWFStageID": {
          "description": "The identifier of the workflow stage.",
          "type": "string"
        },
        "WFGroupID": {
          "description": "The identifier of the workflow group",
          "type": "string"
        },
        "WFComplete": {
          "description": "This indicates if the workflow for this group is complete.",
          "type": "boolean"
        },
        "ApprovalRequired": {
          "description": "Indicates if approval is required for this transaction.",
          "type": "boolean"
        },
        "SubmittedBy": {
          "description": "The User ID of the submitter.",
          "type": "string"
        },
        "PBRateFrom": {
          "description": "Project Billing calculation in COSandWIP: where Rate is got from (EMPL=Employee, ROLE=Role, PROJ = Project)",
          "type": "string"
        },
        "PBCurrencyCode": {
          "description": "Project Billing calculation in COSandWIP: Currency code is got from Project",
          "type": "string"
        },
        "PBHours": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Hours used for charge",
          "type": "number"
        },
        "PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup",
          "type": "number"
        },
        "PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours)",
          "type": "number"
        },
        "DocPBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Project currency",
          "type": "number"
        },
        "Rpt1PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "Rpt2PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "Rpt3PBChargeRate": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Rate is got according to the Project setup in the Reporting currency",
          "type": "number"
        },
        "DocPBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Project currency",
          "type": "number"
        },
        "Rpt1PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Rpt2PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Rpt3PBChargeAmt": {
          "format": "double",
          "description": "Project Billing calculation in COSandWIP: Charge amount (Rate * hours) in the Reporting currency",
          "type": "number"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ActID": {
          "format": "int32",
          "description": "Links to PActDtl.ActID",
          "type": "integer"
        },
        "DtailID": {
          "format": "int32",
          "description": "System assigned unique id number for the detail. Links to PActDtl.DetailID",
          "type": "integer"
        },
        "ProjProcessed": {
          "description": "Logical field to indicate if this record has been read by project analysis process.",
          "type": "boolean"
        },
        "AsOfDate": {
          "format": "date-time",
          "description": "Used By Project Analysis Process.",
          "type": "string"
        },
        "AsOfSeq": {
          "format": "int32",
          "description": "Used By Project Analysis Process.",
          "type": "integer"
        },
        "JDFInputFiles": {
          "description": "JDFInputFiles",
          "type": "string"
        },
        "JDFNumberOfPages": {
          "description": "JDFNumberOfPages",
          "type": "string"
        },
        "BatchWasSaved": {
          "description": "BatchWasSaved",
          "type": "string"
        },
        "AssignToBatch": {
          "description": "AssignToBatch",
          "type": "boolean"
        },
        "BatchComplete": {
          "description": "BatchComplete",
          "type": "boolean"
        },
        "BatchRequestMove": {
          "description": "BatchRequestMove",
          "type": "boolean"
        },
        "BatchPrint": {
          "description": "BatchPrint",
          "type": "boolean"
        },
        "BatchLaborHrs": {
          "format": "double",
          "description": "BatchLaborHrs",
          "type": "number"
        },
        "BatchPctOfTotHrs": {
          "format": "double",
          "description": "BatchPctOfTotHrs",
          "type": "number"
        },
        "BatchQty": {
          "format": "double",
          "description": "BatchQty",
          "type": "number"
        },
        "BatchTotalExpectedHrs": {
          "format": "double",
          "description": "BatchTotalExpectedHrs",
          "type": "number"
        },
        "JDFOpCompleted": {
          "description": "JDFOpCompleted",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Downtime": {
          "description": "Downtime",
          "type": "boolean"
        },
        "RefJobNum": {
          "description": "RefJobNum",
          "type": "string"
        },
        "RefAssemblySeq": {
          "format": "int32",
          "description": "RefAssemblySeq",
          "type": "integer"
        },
        "RefOprSeq": {
          "format": "int32",
          "description": "RefOprSeq",
          "type": "integer"
        },
        "Imported": {
          "description": "Imported",
          "type": "boolean"
        },
        "ImportDate": {
          "format": "date-time",
          "description": "ImportDate",
          "type": "string"
        },
        "TimeAutoSubmit": {
          "description": " If the Time Detail is submited when record is saved, defaulted from Plant Configuration Control;\r\nEnable for new records only",
          "type": "boolean"
        },
        "BatchMode": {
          "description": "BatchMode",
          "type": "boolean"
        },
        "BillServiceRate": {
          "format": "double",
          "description": "BillServiceRate",
          "type": "number"
        },
        "HCMPayHours": {
          "format": "double",
          "description": "Pay Hours used for HCM",
          "type": "number"
        },
        "EpicorFSA": {
          "description": "True if transaction is related to Epicor FSA",
          "type": "boolean"
        },
        "DiscrepAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the reported Non-comformance quantity",
          "type": "integer"
        },
        "LaborAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the Labor Qty",
          "type": "integer"
        },
        "ScrapAttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set for the reported Scrap Quantity",
          "type": "integer"
        },
        "AllowDirLbr": {
          "description": "Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.",
          "type": "boolean"
        },
        "ApprovalPhaseDesc": {
          "description": "Used by Time and Expense approval only, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalPhaseID": {
          "description": "Used by Time and Expense approval only, populated with the JobHead.PhaseID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalProjectDesc": {
          "description": "Used by Time and Expense approval only, populated with the Project.Description for ApprovalProjectID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovalProjectID": {
          "description": "Used by Time and Expense approval only, populated with the JobHead.ProjectID, not done as a linked field so it won't impact performance in processes other than Approval.",
          "type": "string"
        },
        "ApprovedBy": { "type": "string" },
        "ApprvrHasOpenTask": {
          "description": "Used in approval entry.  Indicates if the approver has an open task or not.",
          "type": "boolean"
        },
        "BaseCurrCodeDesc": {
          "description": "Company Base currency code description for display in LaborDtl grid.",
          "type": "string"
        },
        "BurdenCost": {
          "format": "double",
          "description": "calculated field: BurdenHrs * BurdenRate",
          "type": "number"
        },
        "CallCode": {
          "description": "Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "CapabilityDescription": { "type": "string" },
        "CapabilityID": { "type": "string" },
        "ChargeRate": {
          "format": "double",
          "description": "Charge rate calculated for Time and Expense approval",
          "type": "number"
        },
        "ChargeRateSRC": {
          "description": "Transalated text that indicates where the Charge Rate was derived from: Project, Employee, Role, Labor Rate",
          "type": "string"
        },
        "ChgRateCurrDesc": {
          "description": "The currency code description for the laborDtl charge rate - displayed in labor approval labordtl grid",
          "type": "string"
        },
        "CompleteFlag": { "type": "boolean" },
        "ContractCode": {
          "description": "Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "ContractNum": {
          "format": "int32",
          "description": "Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.",
          "type": "integer"
        },
        "DiscrepUOM": {
          "description": "Unit of Measure used for DiscrepQty",
          "type": "string"
        },
        "DisLaborType": {
          "description": "Field that indicates if field DisLaborTypeshould be disabled.",
          "type": "boolean"
        },
        "DisplayJob": { "type": "string" },
        "DisPrjRoleCd": {
          "description": "Field that indicates if field PrjRoleCd should be disabled.",
          "type": "boolean"
        },
        "DisTimeTypCd": {
          "description": "Field that indicates if field TimeTypCd should be disabled.",
          "type": "boolean"
        },
        "DowntimeTotal": {
          "format": "double",
          "type": "number"
        },
        "DspChangeTime": { "type": "string" },
        "DspCreateTime": { "type": "string" },
        "DspTotHours": { "type": "string" },
        "DtClockIn": {
          "format": "date-time",
          "type": "string"
        },
        "DtClockOut": {
          "format": "date-time",
          "type": "string"
        },
        "EfficiencyPercentage": {
          "format": "double",
          "description": "Shows the efficiency of the hours calculated by dividing the Earned Hours by the Burden Hours when the latter are greater than zero.",
          "type": "number"
        },
        "EmployeeName": {
          "description": "Labor Detail Employee Name",
          "type": "string"
        },
        "EnableComplete": { "type": "boolean" },
        "EnableCopy": {
          "description": "Indicates if the copy button is enabled",
          "type": "boolean"
        },
        "EnableDiscrepQty": { "type": "boolean" },
        "EnableInspection": { "type": "boolean" },
        "EnableLaborQty": { "type": "boolean" },
        "EnableNextOprSeq": { "type": "boolean" },
        "EnablePrintTagsList": { "type": "boolean" },
        "EnableRecall": {
          "description": "Indicates if the recall button is enabled",
          "type": "boolean"
        },
        "EnableRecallAprv": {
          "description": "Indicates if recall is available for an approver",
          "type": "boolean"
        },
        "EnableRequestMove": { "type": "boolean" },
        "EnableResourceGrpID": { "type": "boolean" },
        "EnableScrapQty": { "type": "boolean" },
        "EnableSN": {
          "description": "Enable the SN Button?",
          "type": "boolean"
        },
        "EnableSubmit": {
          "description": "Indicates if the submit button is enabled",
          "type": "boolean"
        },
        "EndActivity": { "type": "boolean" },
        "EnteredOnCurPlant": {
          "description": "To know if the LaborDtl was created on the current plant",
          "type": "boolean"
        },
        "FSAAction": {
          "description": "Has the Transaction Type field set in FSA and is stored on FSAExtData db table.",
          "type": "string"
        },
        "FSACallCode": {
          "description": "Is the Call Type created on ERP and mapped through System External Key table with Service Type in FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAContractCode": {
          "description": "Contract Code created on ERP and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAContractNum": {
          "format": "int32",
          "description": "Contract created in ERP generated on FSA as Service Agreement, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAEmpID": {
          "description": "Employee created in ERP and processed on FSA as Service Technician, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSAEquipmentInstallID": {
          "format": "int32",
          "description": "Resource ID for Equipment in FSAOffice ( this can be found in the Equipment information/Administrative tab in the Resource ID). Stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAEquipmentPartNum": {
          "description": "Part created as equipment in ERP and Installed through FSA process, stored in FSAExtData.",
          "type": "string"
        },
        "FSAServiceOrderNum": {
          "format": "int32",
          "description": "Service Order number generated on FSA, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAServiceOrderResourceNum": {
          "format": "int32",
          "description": "Service Order Resource generated on FSA, stored on FSAExtData db table.",
          "type": "integer"
        },
        "FSAWarrantyCode": {
          "description": "Warranty created in ERP and processed on FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "FSComplete": { "type": "boolean" },
        "GLTranAmt": {
          "format": "double",
          "description": "GL Journal Source Transaction Amount",
          "type": "number"
        },
        "GLTranDate": {
          "format": "date-time",
          "description": "GL Journal Source Transaction Date",
          "type": "string"
        },
        "HasAccessToRow": {
          "description": "Indicates if the user has access to the row",
          "type": "boolean"
        },
        "HasComments": {
          "description": "Indicates if the labor detail has comments",
          "type": "boolean"
        },
        "HH": {
          "description": "To tell the bo that this transaction was being modified from HH.",
          "type": "boolean"
        },
        "IntExternalKey": {
          "description": "Unique identifier of related integration record.",
          "type": "string"
        },
        "ISFixHourAndQtyOnly": {
          "description": "Indicates if the job operation is marked as fixed hours and quantity only.",
          "type": "boolean"
        },
        "JCSystReworkReasons": { "type": "boolean" },
        "JCSystScrapReasons": { "type": "boolean" },
        "JobOperComplete": { "type": "boolean" },
        "JobType": { "type": "string" },
        "JobTypeCode": {
          "description": "JobHead.Jobtype. Needed a different name since LaborDtl.JobType was used as a transalated value of JobHead.JobType",
          "type": "string"
        },
        "LaborCost": {
          "format": "double",
          "description": "calculated field: LaborHrs * LaborRate",
          "type": "number"
        },
        "LaborUOM": {
          "description": "Unit of Measure used for LaborQty",
          "type": "string"
        },
        "LbrDay": {
          "description": "Text for the day of the week that corresponds to the LaborDtl.ClockInDate",
          "type": "string"
        },
        "LbrMonth": {
          "description": "Text for the calendar month name that corresponds to the LaborDtl.ClockInDate",
          "type": "string"
        },
        "LbrWeek": {
          "description": "Text to show the week date range (Sunday-Saturday) that corresponds to the LaborDtl.ClockInDate such as \"5/2/2009 - 5/9/2009\"",
          "type": "string"
        },
        "MES": { "type": "boolean" },
        "MultipleEmployeesText": { "type": "string" },
        "NewDifDateFlag": {
          "format": "int32",
          "type": "integer"
        },
        "NewPrjRoleCd": {
          "description": "field to designate a new Project Role Code ? used by Labor Transaction Project Role Code Maint",
          "type": "string"
        },
        "NewRoleCdDesc": {
          "description": "Holds the description for NewPrjRoleCd",
          "type": "string"
        },
        "NextAssemblySeq": {
          "format": "int32",
          "type": "integer"
        },
        "NextOperDesc": { "type": "string" },
        "NextOprSeq": {
          "format": "int32",
          "type": "integer"
        },
        "NextResourceDesc": { "type": "string" },
        "NonConfProcessed": {
          "description": "To evaluate if the NonComformance has been already processed in inspection and no changes can be applied on LaborDtl then.",
          "type": "boolean"
        },
        "NotSubmitted": { "type": "boolean" },
        "OkToChangeResourceGrpID": {
          "description": "Holds user's answer to question: \"Resource belongs to a different ResourceGroup.  ResourceGroup will be changed.  Do you wish to continue?\"",
          "type": "boolean"
        },
        "PartDescription": { "type": "string" },
        "PartNum": { "type": "string" },
        "PBAllowModify": { "type": "boolean" },
        "PendingApprovalBy": { "type": "string" },
        "PhaseJobNum": {
          "description": "External field for the Job associated with the WBS Phase ID. The JobNum defaulted into this field will also be defaulted into LaborDtl.JobNum",
          "type": "string"
        },
        "PhaseOprSeq": {
          "format": "int32",
          "description": "External field for the Operation associated with the WBS Phase ID. The operation entered in this field will be defaulted into  LaborDtl.OprSeq",
          "type": "integer"
        },
        "PrintNCTag": { "type": "boolean" },
        "PrjUsedTran": { "type": "string" },
        "ProdDesc": { "type": "string" },
        "ProjPhaseID": { "type": "string" },
        "RequestMove": { "type": "boolean" },
        "ResourceDesc": { "type": "string" },
        "RoleCdDisplayAll": { "type": "boolean" },
        "ScrapUOM": {
          "description": "Unit of Measure used for ScrapQty.",
          "type": "string"
        },
        "SentFromMES": {
          "description": "Flag field to identify if the row is being sent from MES",
          "type": "boolean"
        },
        "StartActivity": { "type": "boolean" },
        "TimeDisableDelete": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TreeNodeImageName": { "type": "string" },
        "UnapprovedFirstArt": { "type": "boolean" },
        "WarrantyCode": {
          "description": "Warranty linked to part and processed by FSA, stored on FSAExtData db table.",
          "type": "string"
        },
        "WeekDisplayText": { "type": "string" },
        "PCID": {
          "description": "Package Control Identification Number",
          "type": "string"
        },
        "EnablePCID": {
          "description": "EnablePCID",
          "type": "boolean"
        },
        "OutputBin": {
          "description": "The output bin from the resource",
          "type": "string"
        },
        "OutputWarehouse": {
          "description": "The output warehouse from the resource",
          "type": "string"
        },
        "EnableLot": {
          "description": "Internal flag used for the row rules to control whether the Lot columns should be enabled.",
          "type": "boolean"
        },
        "LotNum": {
          "description": "Lot number that is to be added to the PCID",
          "type": "string"
        },
        "PrintPCIDContents": {
          "description": "Flag to indicate that whether to print a PCID contents label for the entered PCID after the processing the reported quantity,",
          "type": "boolean"
        },
        "HasAttachments": {
          "description": "Indicates if the labor detail has attachments",
          "type": "boolean"
        },
        "AttrClassID": { "type": "string" },
        "DiscrepAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for DiscrepQty",
          "type": "string"
        },
        "DiscrepAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for DiscrepQty",
          "type": "string"
        },
        "ScrapAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for ScrapQty",
          "type": "string"
        },
        "ScrapAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for ScrapQty",
          "type": "string"
        },
        "LaborAttributeSetDescription": {
          "description": "The Full Description of the Attribute Set for LaborQty",
          "type": "string"
        },
        "LaborAttributeSetShortDescription": {
          "description": "The Short Description of the Attribute Set for LaborQty",
          "type": "string"
        },
        "DisableRecallAndDelete": {
          "description": "Indicates if recall and delete should be disabled",
          "type": "boolean"
        },
        "RoleCdList": {
          "description": "List of available role codes",
          "type": "string"
        },
        "RowSelected": {
          "description": "Indicates if the row is selected for submit, recall, or copy",
          "type": "boolean"
        },
        "AppointmentStart": {
          "format": "date-time",
          "description": "Start date/time for calendar appoinment",
          "type": "string"
        },
        "AppointmentEnd": {
          "format": "date-time",
          "description": "End date/time for calendar appoinment",
          "type": "string"
        },
        "AppointmentTitle": {
          "description": "Title to display for the calendar appointment",
          "type": "string"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "DiscrpRsnDescription": { "type": "string" },
        "EmpBasicLastName": { "type": "string" },
        "EmpBasicFirstName": { "type": "string" },
        "EmpBasicName": { "type": "string" },
        "ExpenseCodeDescription": { "type": "string" },
        "HCMIntregationHCMEnabled": { "type": "boolean" },
        "HCMStatusStatus": { "type": "string" },
        "IndirectDescription": { "type": "string" },
        "JCDeptDescription": { "type": "string" },
        "JobAsmblPartNum": { "type": "string" },
        "JobAsmblDescription": { "type": "string" },
        "MachineDescription": { "type": "string" },
        "OpCodeOpDesc": { "type": "string" },
        "OpDescOpDesc": { "type": "string" },
        "PayMethodType": {
          "format": "int32",
          "type": "integer"
        },
        "PayMethodSummarizePerCustomer": { "type": "boolean" },
        "PayMethodName": { "type": "string" },
        "PhaseIDDescription": { "type": "string" },
        "ProjectDescription": { "type": "string" },
        "ResourceGrpDescription": { "type": "string" },
        "ResReasonDescription": { "type": "string" },
        "ReWorkReasonDescription": { "type": "string" },
        "RoleCdRoleDescription": { "type": "string" },
        "ScrapReasonDescription": { "type": "string" },
        "ShiftDescription": { "type": "string" },
        "TimeTypCdDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborDtlAttchRow": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "LaborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "type": "integer"
        },
        "DrawingSeq": {
          "format": "int32",
          "type": "integer"
        },
        "XFileRefNum": {
          "format": "int32",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "ForeignSysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DrawDesc": { "type": "string" },
        "FileName": { "type": "string" },
        "PDMDocID": { "type": "string" },
        "DocTypeID": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborDtlCommentRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "The unique identifier of the Labor Header the comment relates to.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "CommentNum": {
          "format": "int32",
          "description": "Internal identifier of the comment record.  Used in conjunction with EmpTimeNum to make the record unique.",
          "type": "integer"
        },
        "CommentType": {
          "description": " The comment type of this record.  Values are:\r\n\"SUB\" Submit\r\n\"APP\" Approve\r\n\"REJ\" Reject",
          "type": "string"
        },
        "CommentText": {
          "description": "The comment text.",
          "type": "string"
        },
        "CreatedBy": {
          "description": "Userid of the user who created the record.",
          "type": "string"
        },
        "CreateDate": {
          "format": "date-time",
          "description": "The date the record was created.",
          "type": "string"
        },
        "CreateTime": {
          "format": "int32",
          "description": "The time the record was created (in seconds since midnight)",
          "type": "integer"
        },
        "ChangedBy": {
          "description": "Userid of the user who made the last change to this record.",
          "type": "string"
        },
        "ChangeDate": {
          "format": "date-time",
          "description": "The date the record was last changed.",
          "type": "string"
        },
        "ChangeTime": {
          "format": "int32",
          "description": "The time the record was last changed (in seconds since midnight)",
          "type": "integer"
        },
        "TaskSeqNum": {
          "format": "int32",
          "description": "The identifier of the Task record the comment is related to.  Can be zero, which indicates the comment is not related to a specific task.",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "DspChangeTime": { "type": "string" },
        "DspCreateTime": { "type": "string" },
        "TreeNodeImageName": { "type": "string" },
        "IntExternalKey": {
          "description": "Unique identifier of related integration record.",
          "type": "string"
        },
        "TimeEntryCommentTypeList": {
          "description": "List of valid comment types for Time Entry",
          "type": "string"
        },
        "CommentTypeDesc": { "type": "string" },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborEquipRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "EquipID": {
          "description": "Descriptive code assigned by the user to uniquely identify the Equipment. Cannot be blank.",
          "type": "string"
        },
        "Hours": {
          "format": "double",
          "description": "Hours that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = \"Hrs\"",
          "type": "number"
        },
        "Qty": {
          "format": "double",
          "description": "Quantity that will be added to Equip.CurrentMeter.  Relevant only when the related Equip.LaborOpt = \"Qty\"",
          "type": "number"
        },
        "CurrentMeter": {
          "format": "int32",
          "description": "Current Meter reading which will update the Equip.CurrentMeter. Relevant only when the related Equip.LaborOpt = \"Mtr\"",
          "type": "integer"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "EquipLaborMeterOpt": { "type": "string" },
        "EquipDescription": { "type": "string" },
        "EquipMeterUOM": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborPartRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "PartNum": {
          "description": "Part number of the manufactured item that the quantity is for. Must be defined on the Job in the JobPart table.",
          "type": "string"
        },
        "PartQty": {
          "format": "double",
          "description": "The number of individual parts completed on this labor transaction. Updates the JobPart.QtyCompleted.",
          "type": "number"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "MESProcessing": {
          "description": "UI Sets this to true when processing from MES Labor Entry.  The BL uses this to determine if PartWip/MtlQueue logic should be performed.",
          "type": "boolean"
        },
        "RequestMove": { "type": "boolean" },
        "PartUOM": {
          "description": "Unit of Measure for the Part defined on the Operation",
          "type": "string"
        },
        "PartDescription": { "type": "string" },
        "RevisionNum": { "type": "string" },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LbrScrapSerialNumbersRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "LaborHedSeq of the related LaborDtl",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "LaborDtlSeq of the related LaborDtl",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "PartNum": {
          "description": "Part Number",
          "type": "string"
        },
        "JobNum": {
          "description": "Job Number",
          "type": "string"
        },
        "AssemblySeq": {
          "format": "int32",
          "description": "AssemblySeq this scrap serial number is for",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "description": "OprSeq this scrap serial number is for",
          "type": "integer"
        },
        "EnableStatus": {
          "description": "Indicates whether the Status field can be updated.",
          "type": "boolean"
        },
        "SNStatus": {
          "description": "New status for the serial number. This field will require Code/Desc definition: REJECTED`Scrap INSPECTION`Nonconformance WIP`WIP",
          "type": "string"
        },
        "SNStatusDesc": {
          "description": "The SNStatus description ? set same as SerialNo.SNStatusTrans",
          "type": "string"
        },
        "Selected": {
          "description": "Serial Number Selected for process",
          "type": "boolean"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.LaborDtlGroupRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": " The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are\r\n\r\nconcurrently active for an employee in order to distribute the labor hours.",
          "type": "string"
        },
        "ClaimRef": {
          "description": "Brief description of the expense.  Can be used to expenses together, for example, all expenses incurred on the same trip can be assigned the same reference.",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.SelectedSerialNumbersRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "SerialNumber": {
          "description": "SerialNumber",
          "type": "string"
        },
        "Scrapped": {
          "description": "Scrapped flag",
          "type": "boolean"
        },
        "ScrappedReasonCode": {
          "description": "Scrapped reason code",
          "type": "string"
        },
        "Voided": {
          "description": "Voided flag",
          "type": "boolean"
        },
        "Reference": {
          "description": "Reference field",
          "type": "string"
        },
        "ReasonCodeType": {
          "description": "Reason code type = s",
          "type": "string"
        },
        "ReasonCodeDesc": {
          "description": "Reason code description",
          "type": "string"
        },
        "PartNum": {
          "description": "PartNumber",
          "type": "string"
        },
        "SNPrefix": {
          "description": "Serial number prefix",
          "type": "string"
        },
        "SNBaseNumber": {
          "description": "Base number used to create the serial number",
          "type": "string"
        },
        "SourceRowID": {
          "format": "uuid",
          "description": "RowID of the source record for this serial number",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TransType": {
          "description": "TransType of the record that created this serial number",
          "type": "string"
        },
        "PassedInspection": {
          "description": "True if this serial numbered part passed inspection",
          "type": "boolean"
        },
        "Deselected": {
          "description": "Used to flag previously selected serial numbers as deselected",
          "type": "boolean"
        },
        "KitWhseList": { "type": "string" },
        "RawSerialNum": {
          "description": "This will be the raw serial number as it was scanned or entered into the system. This would only differ from the SerialNumber field if a validate type mask was being used where characters were stripped (using ~ in the mask).",
          "type": "string"
        },
        "KBLbrAction": {
          "format": "int32",
          "description": "Action type field used for Kanban receipts to indicate if the new serial number status is Inventory, Scrapped or NonConf.  This requires Code/desc:  1 ` inventory 2 ` Scrapped 3 ` Nonconformance",
          "type": "integer"
        },
        "KBLbrActionDesc": {
          "description": "Description field for KBLbrAction ? holds the translated description for the KBLbrAction code for UI display and combo box.",
          "type": "string"
        },
        "PreventDeselect": {
          "description": "If true, then users can not deselect this serial number.  This is used by applications that allow maintenance to the Selected Serial Numbers after update.",
          "type": "boolean"
        },
        "XRefPartNum": {
          "description": "Used only by SN Assignment",
          "type": "string"
        },
        "XRefPartType": {
          "description": "Used only by SN Assignment: C = Customer Part / I = Internal Part XRef",
          "type": "string"
        },
        "PreDeselected": { "type": "boolean" },
        "poLinkValues": {
          "description": "temporary field used to link the packout lines to ship detail lines",
          "type": "string"
        },
        "SNMask": {
          "description": "The mask the was used to generate the serial number",
          "type": "string"
        },
        "NotSavedToDB": {
          "description": "Flag to indicate that the SelectedSerialNumbers entry has not yet been saved to the DB for the related transaction. Used to keep track of which deselected serial numbers need to be passed to the transaction update logic.",
          "type": "boolean"
        },
        "RowSelected": { "type": "boolean" },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.TimeWeeklyViewRow": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "EmployeeNum": { "type": "string" },
        "WeekBeginDate": {
          "format": "date-time",
          "type": "string"
        },
        "WeekEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "QuickEntryCode": { "type": "string" },
        "WeekDisplayText": { "type": "string" },
        "LaborType": { "type": "string" },
        "ProjectID": { "type": "string" },
        "PhaseID": { "type": "string" },
        "TimeTypCd": { "type": "string" },
        "JobNum": { "type": "string" },
        "AssemblySeq": {
          "format": "int32",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "type": "integer"
        },
        "RoleCd": { "type": "string" },
        "IndirectCode": { "type": "string" },
        "HoursSun": {
          "format": "double",
          "type": "number"
        },
        "HoursMon": {
          "format": "double",
          "type": "number"
        },
        "HoursTue": {
          "format": "double",
          "type": "number"
        },
        "HoursWed": {
          "format": "double",
          "type": "number"
        },
        "HoursThu": {
          "format": "double",
          "type": "number"
        },
        "HoursFri": {
          "format": "double",
          "type": "number"
        },
        "HoursSat": {
          "format": "double",
          "type": "number"
        },
        "TimeTypCdDescription": { "type": "string" },
        "RoleCdDescription": { "type": "string" },
        "IndirectCodeDescription": { "type": "string" },
        "PhaseIDDescription": { "type": "string" },
        "HoursTotal": {
          "format": "double",
          "type": "number"
        },
        "ExpenseCode": { "type": "string" },
        "Complete": { "type": "boolean" },
        "ResourceGrpID": { "type": "string" },
        "ResourceID": { "type": "string" },
        "OpCode": { "type": "string" },
        "OpComplete": { "type": "boolean" },
        "LaborEntryMethod": { "type": "string" },
        "LaborRate": {
          "format": "double",
          "type": "number"
        },
        "ResourceGrpIDDescription": { "type": "string" },
        "JCDept": { "type": "string" },
        "TimeDisableUpdate": { "type": "boolean" },
        "ResourceIDDescription": { "type": "string" },
        "ExpenseCodeDescription": { "type": "string" },
        "LaborTypePseudo": { "type": "string" },
        "Shift": {
          "format": "int32",
          "type": "integer"
        },
        "ShiftDescription": { "type": "string" },
        "MessageText": { "type": "string" },
        "NewRowType": {
          "description": "Valid values are \"A\" for an Add of a new TimeWeeklyView row and \"C\" for a Copy of an existing TimeWeeklyView row.",
          "type": "string"
        },
        "DisPrjRoleCd": { "type": "boolean" },
        "DisTimeTypCd": { "type": "boolean" },
        "DisLaborType": { "type": "boolean" },
        "EnableSubmit": {
          "description": "Indicates if submit is available",
          "type": "boolean"
        },
        "EnableCopy": {
          "description": "Indicates if the copy function is available",
          "type": "boolean"
        },
        "EnableRecall": {
          "description": "Indicates if recall is available",
          "type": "boolean"
        },
        "AllowDirLbr": {
          "description": "Field that indicates how the EmpBasic.AllowDirLbr flag is set.  Used in UI for row rule.",
          "type": "boolean"
        },
        "TimeStatus": { "type": "string" },
        "ProjDesc": { "type": "string" },
        "WBSPhaseDesc": {
          "description": "WBS Phase Project Description",
          "type": "string"
        },
        "OperDesc": {
          "description": "Operation Description",
          "type": "string"
        },
        "ASMdesc": {
          "description": "Job Assembly description",
          "type": "string"
        },
        "TimeAutoSubmit": {
          "description": " If the Time is submited when record is saved, defaulted from Plant Configuration Control;\r\nEnable for new records only",
          "type": "boolean"
        },
        "DeleteRow": { "type": "boolean" },
        "HCMTotWeeklyPayHours": {
          "format": "double",
          "description": "HCM Integration Total Weekly Pay Hours",
          "type": "number"
        },
        "RoleCdList": {
          "description": "List of avaialble role codes",
          "type": "string"
        },
        "RowSelected": {
          "description": "Indicates if the row is selected for submit, recall, or copy.",
          "type": "boolean"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.TimeWorkHoursRow": {
      "type": "object",
      "properties": {
        "Company": { "type": "string" },
        "CalendarID": { "type": "string" },
        "WeekBeginDate": {
          "format": "date-time",
          "type": "string"
        },
        "WeekEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "SunDisplayDate": { "type": "string" },
        "MonDisplayDate": { "type": "string" },
        "TueDisplayDate": { "type": "string" },
        "WedDisplayDate": { "type": "string" },
        "ThuDisplayDate": { "type": "string" },
        "FriDisplayDate": { "type": "string" },
        "SatDisplayDate": { "type": "string" },
        "WeekDisplayText": { "type": "string" },
        "SunWorkHours": {
          "format": "double",
          "type": "number"
        },
        "MonWorkHours": {
          "format": "double",
          "type": "number"
        },
        "TueWorkHours": {
          "format": "double",
          "type": "number"
        },
        "WedWorkHours": {
          "format": "double",
          "type": "number"
        },
        "ThuWorkHours": {
          "format": "double",
          "type": "number"
        },
        "FriWorkHours": {
          "format": "double",
          "type": "number"
        },
        "SatWorkHours": {
          "format": "double",
          "type": "number"
        },
        "SunBookedHours": {
          "format": "double",
          "type": "number"
        },
        "MonBookedHours": {
          "format": "double",
          "type": "number"
        },
        "WedBookedHours": {
          "format": "double",
          "type": "number"
        },
        "ThuBookedHours": {
          "format": "double",
          "type": "number"
        },
        "FriBookedHours": {
          "format": "double",
          "type": "number"
        },
        "SunDiffHours": {
          "format": "double",
          "type": "number"
        },
        "MonDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SatBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TueBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TueDiffHours": {
          "format": "double",
          "type": "number"
        },
        "WedDiffHours": {
          "format": "double",
          "type": "number"
        },
        "ThuDiffHours": {
          "format": "double",
          "type": "number"
        },
        "FriDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SatDiffHours": {
          "format": "double",
          "type": "number"
        },
        "EmployeeNum": { "type": "string" },
        "CalendarDescription": { "type": "string" },
        "TotalWorkHours": {
          "format": "double",
          "type": "number"
        },
        "TotalBookedHours": {
          "format": "double",
          "type": "number"
        },
        "TotalDiffHours": {
          "format": "double",
          "type": "number"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Ice.Extensions.ExtensionTableData": {
      "type": "object",
      "properties": {
        "Table": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionRow" },
          "readOnly": false
        },
        "SystemCode": { "type": "string" },
        "TableName": { "type": "string" },
        "Columns": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableColumn" },
          "readOnly": false
        },
        "PrimaryKeyColumns": {
          "type": "array",
          "items": { "type": "string" },
          "readOnly": false
        },
        "PeerTableSystemCode": { "type": "string" },
        "PeerTableName": { "type": "string" }
      }
    },
    "Ice.Extensions.ExtensionRow": {
      "type": "object",
      "properties": {
        "ColumnValues": {
          "type": "array",
          "items": { "type": "object" }
        },
        "RowMod": { "type": "string" },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        }
      }
    },
    "Ice.Extensions.ExtensionTableColumn": {
      "type": "object",
      "properties": {
        "ColumnName": { "type": "string" },
        "ColumnType": { "type": "string" }
      }
    },
    "Erp.Tablesets.SNFormatRow": {
      "type": "object",
      "properties": {
        "Date02": {
          "format": "date-time",
          "type": "string"
        },
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "Plant": {
          "description": "Site Identifier. This field cannot be blank.",
          "type": "string"
        },
        "PartNum": {
          "description": "The PartNum field identifies the Part and is used in the primary key.",
          "type": "string"
        },
        "NumberOfDigits": {
          "format": "int32",
          "description": "Number of digits in the serial number",
          "type": "integer"
        },
        "SNMask": {
          "description": "If the SNBaseDataType is Mask this is the Serial Mask ID assigned for format validation/generation.",
          "type": "string"
        },
        "SNBaseDataType": {
          "description": " Current setting for Data type of the Base Serial Number field to be used as new serial numbers are generated. Valid values; Character, Integer, Mask\r\nCode/desc required:\r\nCHARACTER`Alphanumeric\r\nINTEGER`NumericOnly\r\nMASK`Serial Mask\r\nThis field should be flagged as Include = true in Object Designer.",
          "type": "string"
        },
        "SNFormat": {
          "description": " Current setting for Format of the Base serial number that will be used as new serial numbers are generated. Expressed in progress syntax. Ex: X(30), 99999999 for Character or Integer, or as a Serial Mask defined in SerialMask table.\r\nThis field should be flagged as ReadOnly and Include = true in Object Designer.",
          "type": "string"
        },
        "LeadingZeroes": {
          "description": "Whether or not to have leading zeroes",
          "type": "boolean"
        },
        "SNPrefix": {
          "description": " Current setting for the prefix that will be attached to all new Serial Numbers as they are generated for Character and Integer format types.\r\nThis field should be flagged as Include = true in Object Designer.",
          "type": "string"
        },
        "SNMaskSuffix": {
          "description": "A standard suffix that will be attached to all serial numbers generated for the PartSite currently used only by SNBaseStructure Mask types",
          "type": "string"
        },
        "SNMaskPrefix": {
          "description": "The prefix that was used to construct the serial number currently used only by SNBaseStructure Mask types",
          "type": "string"
        },
        "SNLastUsedSeq": {
          "description": "This is the last used serial sequence. It is used only for the Mask Generate type to determine the next logical serial number to generate for this part/Site. It can be altered by the user and several PartSites can have the same counter values defined, but",
          "type": "string"
        },
        "HasSerialNumbers": { "type": "boolean" },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "PartPricePerCode": { "type": "string" },
        "PartTrackLots": { "type": "boolean" },
        "PartTrackSerialNum": { "type": "boolean" },
        "PartTrackDimension": { "type": "boolean" },
        "PartSalesUM": { "type": "string" },
        "PartIUM": { "type": "string" },
        "PartSellingFactor": {
          "format": "double",
          "type": "number"
        },
        "PartPartDescription": { "type": "string" },
        "SerialMaskMaskType": {
          "format": "int32",
          "type": "integer"
        },
        "SerialMaskMask": { "type": "string" },
        "SerialMaskExample": { "type": "string" },
        "SerialMaskDescription": { "type": "string" },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        },
        "Date01": {
          "format": "date-time",
          "type": "string"
        },
        "UD_SysRevID": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ChangeEquipID_input": {
      "required": [ "equipID", "ds" ],
      "properties": {
        "equipID": {
          "description": "equipID",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ChangeEquipID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeIndirectCode_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ChangeIndirectCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeLaborType_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ChangeLaborType_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckResourceId_input": {
      "required": [ "resourceGrpId", "proposedResId" ],
      "properties": {
        "resourceGrpId": {
          "description": "Resource Group of the Job",
          "type": "string"
        },
        "proposedResId": {
          "description": "Proposed Resource ID to assign.",
          "type": "string"
        }
      }
    },
    "CheckResourceId_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "pcMsg": {
              "description": "Warning message to be shown to the user.",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeResourceId_input": {
      "required": [ "ds", "pcResourceID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "pcResourceID": {
          "description": "The ID of the machine that was used to do the work.",
          "type": "string"
        }
      }
    },
    "ChangeResourceId_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "pcMsg": {
              "description": "The message sent as output for the user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckEmployeeActivity_input": {
      "required": [ "ipEmpID", "ipLaborHedSeq", "ipJobNum", "ipAsmSeq", "ipOprSeq", "ipResourceID" ],
      "properties": {
        "ipEmpID": {
          "description": "The current Employee ID",
          "type": "string"
        },
        "ipLaborHedSeq": {
          "format": "int32",
          "description": "LaborHed Sequence",
          "type": "integer"
        },
        "ipJobNum": {
          "description": "Job Number",
          "type": "string"
        },
        "ipAsmSeq": {
          "format": "int32",
          "description": "Assembly Sequence",
          "type": "integer"
        },
        "ipOprSeq": {
          "format": "int32",
          "description": "Operation Sequence",
          "type": "integer"
        },
        "ipResourceID": {
          "description": "Resource ID",
          "type": "string"
        }
      }
    },
    "CheckEmployeeActivity_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opMessage": {
              "description": "Error Message",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckNonConformance_input": {
      "required": [ "jobNum", "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "jobNum": {
          "description": "JobNumber",
          "type": "string"
        },
        "laborHedSeq": {
          "format": "int32",
          "description": "LaborHedSeq",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "description": "LaborDtlSeq",
          "type": "integer"
        }
      }
    },
    "CheckNonConformance_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "pcMsg": {
              "description": "The message sent as output for the user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckFirstArticleWarning_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "CheckFirstArticleWarning_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "pcMsg": {
              "description": "The message sent as output for the user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckInspResults_input": {
      "required": [ "ipJobNum", "ipAssemblySeq", "ipOprSeq" ],
      "properties": {
        "ipJobNum": {
          "description": "Current Job",
          "type": "string"
        },
        "ipAssemblySeq": {
          "format": "int32",
          "description": "Current AssembleSeq",
          "type": "integer"
        },
        "ipOprSeq": {
          "format": "int32",
          "description": "Current OprSeq",
          "type": "integer"
        }
      }
    },
    "CheckInspResults_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "inspectionOK": {
              "description": "Returns true if InspResults records are found",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckResourceGroup_input": {
      "required": [ "ds", "ProposedResourceID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ProposedResourceID": {
          "description": "Proposed Resource ID",
          "type": "string"
        }
      }
    },
    "CheckResourceGroup_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "List of error warnings for user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CheckWarnings_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "CheckWarnings_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "List of error warnings for user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "chkReportQtyShopWarn_input": {
      "required": [ "company", "jobNum", "assemblySeq", "oprSeq", "empID", "activeTrans" ],
      "properties": {
        "company": {
          "description": "Company ID in ReportQty record",
          "type": "string"
        },
        "jobNum": {
          "description": "Job Number in ReportQty record",
          "type": "string"
        },
        "assemblySeq": {
          "format": "int32",
          "description": "Assembly Sequence Number in ReportQty record",
          "type": "integer"
        },
        "oprSeq": {
          "format": "int32",
          "description": "Operation Sequence Number in ReportQty record",
          "type": "integer"
        },
        "empID": {
          "description": "Employee ID in ReportQty record",
          "type": "string"
        },
        "activeTrans": {
          "description": "Active Transaction FLAG in ReportQty record",
          "type": "boolean"
        }
      }
    },
    "chkReportQtyShopWarn_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "pcMsg": {
              "description": "returns WARNING messages",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CopyLaborDetail_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "CopyLaborDetail_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "cMessageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CopyTimeWeeklyView_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "CopyTimeWeeklyView_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "cMessageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultAssemblySeq_input": {
      "required": [ "ds", "assemblySeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "assemblySeq": {
          "format": "int32",
          "description": "Proposed AssemblySeq change",
          "type": "integer"
        }
      }
    },
    "DefaultAssemblySeq_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultComplete_input": {
      "required": [ "ds", "cmplete" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "cmplete": {
          "description": "Proposed change to the Complete field",
          "type": "boolean"
        }
      }
    },
    "DefaultComplete_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultDate_input": {
      "required": [ "ds", "payrollDate" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "payrollDate": {
          "format": "date-time",
          "description": "Proposed Payroll Date change",
          "type": "string"
        }
      }
    },
    "DefaultDate_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultDiscrpRsnCode_input": {
      "required": [ "ds", "ProposedDiscrpRsnCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ProposedDiscrpRsnCode": {
          "description": "Proposed discrepancy reason",
          "type": "string"
        }
      }
    },
    "DefaultDiscrpRsnCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultReworkReasonCode_input": {
      "required": [ "ds", "ProposedReworkReasonCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ProposedReworkReasonCode": {
          "description": "Proposed discrepancy reason",
          "type": "string"
        }
      }
    },
    "DefaultReworkReasonCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultDtlTime_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "DefaultDtlTime_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultIndirect_input": {
      "required": [ "ds", "indirectCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "indirectCode": {
          "description": "Proposed change to the indirect code",
          "type": "string"
        }
      }
    },
    "DefaultIndirect_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "Erp.Tablesets.WorkQueueRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "JCDept": {
          "description": "The Key ID of the Home Department for this Resource Group.  This is a foreign key to the JCDept table.",
          "type": "string"
        },
        "OpComplete": {
          "description": " Indicates if this operation is completed. This is normally set to complete via labor entry transactions.   Not maintainable by Job Entry. It can't be reset to \"No\" if the JobHead.Complete = Yes.\r\nLabor entry setting logic is: If SetUpComplete = Yes and  EstProdHours = 0 or ProdComplete = Yes and EstSetHours = 0 or both ProdComplete = Yes and SetupComplete = Yes  then OpComplete = Yes.\r\nThis field is also set by PO receipt entry \"issue complete\" for subcontract operations.",
          "type": "boolean"
        },
        "JobNum": {
          "description": "Job Number",
          "type": "string"
        },
        "AssemblySeq": {
          "format": "int32",
          "description": "Assembly Sequence # that this Operation is associated with.",
          "type": "integer"
        },
        "OprSeq": {
          "format": "int32",
          "description": "A sequence number which uniquely identifies the operation record within the Job/lot/level. The sequence can be system generated or assigned by user. System generated numbers are determined by reading last JobOper for the job/lot/level and then figures out what the next number that is divisible by 10. If this number is within 3 of the last Number on file it will be bumped up another 10. This keeps a minimum of 2 available sequences between records. For example if last = 18 Next would be 30, If last = 17  next = 20.",
          "type": "integer"
        },
        "OprQty": {
          "format": "double",
          "description": "The total operation quantity. This is a calculated field.",
          "type": "number"
        },
        "OpCode": {
          "description": "Operation Master Code - Links the JobOper  record with a OpMaster record.  Default is given from WrkCenter.OpCode.  Must be valid in the OpMaster file.",
          "type": "string"
        },
        "EstSetHours": {
          "format": "double",
          "description": "Total estimated set up hours.  Calculated as EstSetHoursPerMch * Machines.  It is set to zero if operation qty is zero.  This is maintained via the JobOper write trigger.",
          "type": "number"
        },
        "EstProdHours": {
          "format": "double",
          "description": " The estimated Production run hours for internal operations (JobOper.Subcontract = No) . This is not directly maintainable. It exists so that it will be easier to display than always having to  recalculate it  when it is needed.  It is calculated using the ProdStandard, StdFormat, StdBasis, OpsPerPart, QtyPer, EstScrap and EstScrapType.\r\nFORMULAS:\r\nIf StdFormat = \"HR\" then EstProdHours = ProdStandard. \r\nIf StdFormat = \"PH\" then (JobOper.RunQty / Std).\r\nIf StdFormat = \"PM\" then (JobOper.RunQty / Std ) / 60.\r\nIf StdFormat = \"OH\" then (JobOper.RunQty/OpsPerPart) / Std.\r\nIf StdFormat = \"OM\" then ((JobOper.RunQty/OpsPerPart) / Std) / 60.\r\nIf StdFormat = \"HP\" then (JobOPer.RunQty/Basis) X Std.\r\nIf StdFormat = \"MP\" then ((JobOper.RunQty/Basis) X Std) / 60.",
          "type": "number"
        },
        "ProdStandard": {
          "format": "double",
          "description": " The production standard for the operation.  It can be expressed as Hours, Minutes per piece, Pieces per Time, Operations per Minute or Operations per hour. This along with the StdFormat, StdBasis, OpsPer and   fields are used to calculate the operations estimated production hours.  A value can be defaulted from the OpStd master.\r\nNOTE: The ProdStandard can only be zero if the EstSetHours are greater than zero.",
          "type": "number"
        },
        "SchedCode": {
          "description": "Scheduling Code.  SchedCode references a record in the SchedPri table.",
          "type": "string"
        },
        "SetupLoadHrs": {
          "format": "double",
          "type": "number"
        },
        "StdFormat": {
          "description": " Qualifier for the Production Standard field. This is used as a default to the qualifier field in operation details. The valid qualifiers are;\r\n\"HP\" - Hours/Piece, \"MP\" - minutes/piece, \"PH\" - pieces/hour,\r\n\"PM\" - Pieces/Minute, \"OH\" - Operations/Hour,\r\n\"OM\"  - Operations/minute, HR - Fixed Hours.",
          "type": "string"
        },
        "StdBasis": {
          "description": " A standard basis is to be used to with standards that are time per piece (HP &amp; MP). The basis is a Divisor. Valid codes are E-Eaches, C=100's, M=1000's, T=10,000.\r\nThis field is used in the formula for calculating the estimated production hours. The operation quantity is divided by the basis value and then multiplied by the standard to result in hours.",
          "type": "string"
        },
        "ProdLoadHrs": {
          "format": "double",
          "type": "number"
        },
        "RegionCode": {
          "format": "int32",
          "description": "1=CurrentWork, 2=AvailableWork, 3=ExpectedWork",
          "type": "integer"
        },
        "OpsPerPart": {
          "format": "int32",
          "description": "Number of operations per part. This is used in the calculation of the estimated production hours when the StdFormat is \"OM\" or \"OH\".  This should not be accessible if StdFormat is not \"OM\" or \"OH\".  It MUST BE &gt; 0 if StdFormat is \"OM\" or \"OH\".",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Scheduled production start date. Not directly maintainable, updated via the scheduling process.",
          "type": "string"
        },
        "StartHour": {
          "format": "double",
          "description": "This field is established by scheduling. It represents the \"Hour offset from the beginning of the work day\" when this operation is scheduled to begin.",
          "type": "number"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Scheduled production due date. Not directly maintainable, updated via the scheduling process.",
          "type": "string"
        },
        "DueHour": {
          "format": "double",
          "description": "This field is established by scheduling. It represents the \"Hour offset from the beginning of the work day\" when this operation is scheduled to end.",
          "type": "number"
        },
        "SortDate": {
          "format": "date-time",
          "type": "string"
        },
        "WIPQty": {
          "format": "double",
          "type": "number"
        },
        "CrewCount": {
          "format": "int32",
          "description": "Number Of Employees Now Working On This Operation",
          "type": "integer"
        },
        "QtyLeft": {
          "format": "double",
          "type": "number"
        },
        "SetupLeft": {
          "format": "int32",
          "type": "integer"
        },
        "WIPQtyDetails": {
          "description": "TRUE indicates there are WIP Qty Details available (i.e. the Staged Details button should be enabled)",
          "type": "boolean"
        },
        "Machines": {
          "format": "int32",
          "description": "Defaulted from the WrkCenter.SchMachines field. This is the number of machines that this operation will run on at the same time. Logically thought of as a \"Squeeze factor\" to scheduling. That is the more machines, the shorter the schedule. This affects how much of the total daily workcenter capacity that the operation will consume. For example; Center has 4 machines, 8 Hours per day and operation 2 machines. This operation would consume 16 hours of capacity per day. So if it had 32 hours of estimated production it would schedule as taking 2 days. NOTE THIS ONLY APPLIES TO PRODUCTION HOURS, TOTAL SETUP HOURS ARE ADDED TO THE SQUEEZED PRODUCTION HOURS TO GET THE NUMBER OF HOURS TO BE SCHEDULED. It is however used to calculate the total setup hours on the operation.",
          "type": "integer"
        },
        "CanRequest": {
          "description": "TRUE indicates the current employee is authorized to Request Material",
          "type": "boolean"
        },
        "CanSelect": {
          "description": "TRUE indicates the current employee can select this operation to work on (i.e. the Select For Work button should be enabled).",
          "type": "boolean"
        },
        "SetUpCrewSize": {
          "format": "double",
          "description": "Defaulted from the WrkCenter.SetUpCrewSize field. Its the number of people it physically takes to setup this operation. It is used as a  multiplier in the estimated labor hours calculation.  JobOper.EstSetHours * JobOper.SetUpCrewSize = Estimated Labor hours for the operation. This also affects the estimated labor cost. Est Cost = Est Labor Hours * SetUpLaborRate",
          "type": "number"
        },
        "JobHeadPartNum": {
          "description": "Part number of the manufactured item.",
          "type": "string"
        },
        "ProdCrewSize": {
          "format": "double",
          "description": "Defaults from the WrkCenter.ProdCrewSize. The # of people it physically takes to perform the production on this operation per machine that it is run on.  CrewSize * JobOper.EstProdHours = Est. Prod. Labor Hours. Note this can be a fraction for operations that do not require full time attention of an employee. See also SetUpCrewSize",
          "type": "number"
        },
        "JobHeadPartDescription": {
          "description": "The description of the part that is to be manufactured.",
          "type": "string"
        },
        "QtyCompleted": {
          "format": "double",
          "description": " For Non Subcontract operations: A summary of labor transaction detail. (LaborDtl.LaborQty). Labor entry/collection maintains this field.  Only the LaborQty for transactions that are Production labor ( LaborType = P ) and Not rework (LaborDtl.Rework = No) are included in this summary.\r\nThis quantity is used to reduce shop load when the system is configured to reduce load based on quantity completed. (JCSyst.RemoveLoad = Q)\r\nFor Subcontract Operations this field is updated by the Purchased Receipt process. The detail records are in the PartTran file.",
          "type": "number"
        },
        "OprCommentText": {
          "description": "Editor widget for Job operation comments.",
          "type": "string"
        },
        "AsmCommentText": {
          "description": "Editor widget for Job header comments.",
          "type": "string"
        },
        "JobHeadCommentText": {
          "description": "Editor widget for Job header comments.",
          "type": "string"
        },
        "SubContract": {
          "description": "This flags the operation as being a \"SubContract\" or an \"Internal\" operation.  This also controls what fields are allowed to be updated for this record. For example,  an internal operation will not have a PartNum.",
          "type": "boolean"
        },
        "RegionDescription": {
          "description": "\"Current Work\", \"Available Work\", or \"Expected Work\" as indicated by the RegionCode.",
          "type": "string"
        },
        "OpDtlSeq": {
          "format": "int32",
          "description": "Uniquely identifies an OpDtl.  System assigned.",
          "type": "integer"
        },
        "OpDtlDescription": {
          "description": "Description is initially created when the JobOpDtl is created.",
          "type": "string"
        },
        "PartNum": {
          "description": "The PartNum to be shipped to the subcontract. Default the JobHead.PartNum or JobAsmbl.PartNum depending on the JobMtl.AssemblySeq.",
          "type": "string"
        },
        "OpDtlType": {
          "description": "Identifies which part of the production, setup or production, the resource is required for.   Valid values are \"Setup\", \"Production\", or \"Both\".",
          "type": "string"
        },
        "Description": {
          "description": "Description used only for subcontract operations",
          "type": "string"
        },
        "SortHour": {
          "format": "double",
          "description": "This field is established by scheduling. It represents the \"Hour offset from the beginning of the work day\" when this operation is scheduled to begin.",
          "type": "number"
        },
        "CommentText": {
          "description": "Editor widget for Job operation comments.",
          "type": "string"
        },
        "Selected": {
          "description": "Used by the UI to allow selection of rows",
          "type": "boolean"
        },
        "RunQty": {
          "format": "double",
          "description": " The total operation quantity. This is a calculated field.  Calculated as (Assembly Required Qty X QtyPer) + Scrap. The assembly qty is either the JobHead.ProdQty if  JobOPer.AssemblySeq = 0 or (JobAsmbl.RequireQty - JobAsmbl.PullQty) if JobOPer.AssemblySeq &gt; 0.\r\nThis value is refreshed when maintenance is performed on the operation record or an assemblies production qty is changed",
          "type": "number"
        },
        "PartDescription": {
          "description": "Description for PartNum",
          "type": "string"
        },
        "SchResourceList": {
          "description": "Delimited list of resources oper is schedueld to",
          "type": "string"
        },
        "CurQty": {
          "format": "double",
          "description": "Current Production Qty (for user reporting qty)",
          "type": "number"
        },
        "LaborQty": {
          "format": "double",
          "description": "Qty currently being completed",
          "type": "number"
        },
        "ScrapQty": {
          "format": "double",
          "description": "Scrap Qty currently being entered",
          "type": "number"
        },
        "DiscrepQty": {
          "format": "double",
          "description": "Discrep Qty currently being entered",
          "type": "number"
        },
        "DiscrepRsnCode": {
          "description": "Reason code for discrep qty currently being entered",
          "type": "string"
        },
        "ScrapRsnCode": {
          "description": "Reason code for scrap currently being entered",
          "type": "string"
        },
        "ScrapRsnDesc": {
          "description": "Description for ScrapRsnCode",
          "type": "string"
        },
        "DiscrepRsnDesc": {
          "description": "Description for DescrepRsnCode",
          "type": "string"
        },
        "Complete": {
          "description": "Operation complete",
          "type": "boolean"
        },
        "ResourceID": { "type": "string" },
        "LaborEntryMethod": {
          "description": "Indicates the Method for Labor Entry.  Can be \"T\" - Time and Quantity, \"Q\" - Quantity Only (Time is estimated), \"B\" - Backflush or \"X\" - Time - Backflush Qty.",
          "type": "string"
        },
        "FirstCustNum": {
          "format": "int32",
          "description": "CustNum from first order",
          "type": "integer"
        },
        "FirstCustID": { "type": "string" },
        "FirstCustName": { "type": "string" },
        "FirstShipViaCode": { "type": "string" },
        "FirstShipViaDesc": { "type": "string" },
        "SetupGrpDesc": { "type": "string" },
        "SetupGroup": {
          "description": "Used to group operation to save on setups.",
          "type": "string"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RequestMove": {
          "description": "RequestMove",
          "type": "boolean"
        },
        "ResourceGrpID": { "type": "string" },
        "SetupOrProd": { "type": "string" },
        "StartDateNullCheck": {
          "description": "Used to checks if the StartDate has a value or is null to later permit a Sorting of the records By the StartDate field , positioning the null values at the end.",
          "type": "boolean"
        },
        "CheckBox01": { "type": "boolean" },
        "CheckBox02": { "type": "boolean" },
        "CheckBox03": { "type": "boolean" },
        "CheckBox04": { "type": "boolean" },
        "QtyPerCycle": {
          "format": "double",
          "description": "Number of pieces created per cycle if Cycle/Minute or Cycle/Hour is selected",
          "type": "number"
        },
        "CheckBox05": { "type": "boolean" },
        "AttributeSetID": {
          "format": "int32",
          "description": "The unique identifier of the related Dynamic Attribute Set.",
          "type": "integer"
        },
        "Date01": {
          "format": "date-time",
          "type": "string"
        },
        "Date02": {
          "format": "date-time",
          "type": "string"
        },
        "Date03": {
          "format": "date-time",
          "type": "string"
        },
        "Date04": {
          "format": "date-time",
          "type": "string"
        },
        "Date05": {
          "format": "date-time",
          "type": "string"
        },
        "Number01": {
          "format": "double",
          "type": "number"
        },
        "Number02": {
          "format": "double",
          "type": "number"
        },
        "Number03": {
          "format": "double",
          "type": "number"
        },
        "Number04": {
          "format": "double",
          "type": "number"
        },
        "Number05": {
          "format": "double",
          "type": "number"
        },
        "ShortChar01": { "type": "string" },
        "ShortChar02": { "type": "string" },
        "ShortChar03": { "type": "string" },
        "ShortChar04": { "type": "string" },
        "ShortChar05": { "type": "string" },
        "PageNum": {
          "format": "int32",
          "description": "Used for caching pagination in UI",
          "type": "integer"
        },
        "TotalRecords": {
          "format": "int32",
          "description": "Used for caching pagination in UI",
          "type": "integer"
        },
        "MorePages": {
          "description": "Used for caching pagination in UI",
          "type": "boolean"
        },
        "LaborEntryMethodDesc": {
          "description": "Indicates the Method for Labor Entry.  Can be \"T\" - Time and Quantity, \"Q\" - Quantity Only (Time is estimated) , \"B\" - Backflush or \"X\" - Time and Backflush Qty.",
          "type": "string"
        },
        "EnableLaborQty": { "type": "boolean" },
        "EnableScrapQty": { "type": "boolean" },
        "EnableDiscrepQty": { "type": "boolean" },
        "ResourceGrpDesc": {
          "description": "Resource Group Description.",
          "type": "string"
        },
        "OpCodeOpDesc": {
          "description": "Operation Code Description.",
          "type": "string"
        },
        "LaborUOM": {
          "description": "Unit of Measure used for editable quantity fields on the WorkQueue.",
          "type": "string"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "SelectAllForWork_input": {
      "required": [ "laborDS", "selectedWorkQueueRows", "empID", "resourceGrpID", "resourceID", "laborType" ],
      "properties": {
        "laborDS": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "LaborTableSet - Contains only the header."
        },
        "selectedWorkQueueRows": {
          "description": "Selected rows from Work Queue / type WorkQueueTable",
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.WorkQueueRow" }
        },
        "empID": {
          "description": "Employee ID which is starting the activities.",
          "type": "string"
        },
        "resourceGrpID": {
          "description": "Resource Group ID for all activities.",
          "type": "string"
        },
        "resourceID": {
          "description": "Resource used for all activities.",
          "type": "string"
        },
        "laborType": {
          "description": "Labor Type, can be 'P' for Production or 'S' for Setup",
          "type": "string"
        }
      }
    },
    "SelectAllForWork_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "laborDS": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "LaborTableSet - Contains only the header."
            },
            "warningsMsg": {
              "description": "Contains warning messages that need to be shown to the user before proceeding.",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultJobNum_input": {
      "required": [ "ds", "jobNum" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "jobNum": {
          "description": "Proposed change to the JobNum field",
          "type": "string"
        }
      }
    },
    "DefaultJobNum_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultLaborHrs_input": {
      "required": [ "ds", "laborHrs" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "laborHrs": {
          "format": "double",
          "description": "Proposed Labor Hrs change",
          "type": "number"
        }
      }
    },
    "DefaultLaborHrs_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultLaborQty_input": {
      "required": [ "ds", "laborQty" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "laborQty": {
          "format": "double",
          "description": "Proposed change to LaborQty field",
          "type": "number"
        }
      }
    },
    "DefaultLaborQty_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "VerifyScrapQty_input": {
      "required": [ "ds", "scrapQty" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "scrapQty": {
          "format": "double",
          "description": "Proposed change to ScrapQty field",
          "type": "number"
        }
      }
    },
    "VerifyScrapQty_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnChangePartQty_input": {
      "required": [ "ds", "partQty", "sysRowID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "partQty": {
          "format": "double",
          "description": "Proposed change to PartQty field",
          "type": "number"
        },
        "sysRowID": {
          "format": "uuid",
          "description": "sysRowID of line updated in LaborPart",
          "type": "string"
        }
      }
    },
    "OnChangePartQty_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultLaborType_input": {
      "required": [ "ds", "ipLaborType" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipLaborType": {
          "description": "Proposed LaborType change",
          "type": "string"
        }
      }
    },
    "DefaultLaborType_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultLunchBreak_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "DefaultLunchBreak_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultNextOprSeq_input": {
      "required": [ "ds", "ProposedNextOprSeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ProposedNextOprSeq": {
          "format": "int32",
          "description": "Proposed next operation sequence",
          "type": "integer"
        }
      }
    },
    "DefaultNextOprSeq_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultOpCode_input": {
      "required": [ "ds", "opCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "opCode": {
          "description": "Proposed OpCode field change",
          "type": "string"
        }
      }
    },
    "DefaultOpCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns list of warnings for user's review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultOprSeq_input": {
      "required": [ "ds", "oprSeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "oprSeq": {
          "format": "int32",
          "description": "Proposed oprSeq change",
          "type": "integer"
        }
      }
    },
    "DefaultOprSeq_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns warnings for user's review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlOnSelectForWork_input": {
      "required": [ "ds", "laborHedSeq", "sJobNum", "iAssemblySeq", "iOprSeq", "sResourceGrpID", "setupOrProd" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "sJobNum": { "type": "string" },
        "iAssemblySeq": {
          "format": "int32",
          "type": "integer"
        },
        "iOprSeq": {
          "format": "int32",
          "type": "integer"
        },
        "sResourceGrpID": { "type": "string" },
        "setupOrProd": { "type": "string" }
      }
    },
    "GetNewLaborDtlOnSelectForWork_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
            "bMachinePrompt": { "type": "boolean" }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultPhaseID_input": {
      "required": [ "ds", "ipPhaseID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipPhaseID": {
          "description": "Proposed PhaseID change",
          "type": "string"
        }
      }
    },
    "DefaultPhaseID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultPhaseOprSeq_input": {
      "required": [ "ds", "ipPhaseOprSeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipPhaseOprSeq": {
          "format": "int32",
          "description": "Proposed PhaseOprSeq change",
          "type": "integer"
        }
      }
    },
    "DefaultPhaseOprSeq_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns warnings for user's review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultProjectID_input": {
      "required": [ "ds", "ipProjectID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipProjectID": {
          "description": "Proposed ProjectID change",
          "type": "string"
        }
      }
    },
    "DefaultProjectID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultResourceID_input": {
      "required": [ "ds", "ProposedResourceID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "ProposedResourceID": {
          "description": "The proposed resource id",
          "type": "string"
        }
      }
    },
    "DefaultResourceID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultRoleCd_input": {
      "required": [ "ds", "ipRoleCd" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipRoleCd": {
          "description": "Proposed RoleCd change",
          "type": "string"
        }
      }
    },
    "DefaultRoleCd_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultScrapReasonCode_input": {
      "required": [ "ds", "ProposedScrapReasonCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ProposedScrapReasonCode": {
          "description": "Proposed scrap reason",
          "type": "string"
        }
      }
    },
    "DefaultScrapReasonCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultSetupPctComplete_input": {
      "required": [ "ds", "PercentComplete" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "PercentComplete": {
          "format": "double",
          "description": "Proposed percent complete",
          "type": "number"
        }
      }
    },
    "DefaultSetupPctComplete_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultShift_input": {
      "required": [ "ds", "shift" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "shift": {
          "format": "int32",
          "description": "Proposed Shift field change",
          "type": "integer"
        }
      }
    },
    "DefaultShift_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultTime_input": {
      "required": [ "ds", "cFieldName", "timeValue" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "cFieldName": {
          "description": "name of field being changed",
          "type": "string"
        },
        "timeValue": {
          "format": "double",
          "description": "proposed time change",
          "type": "number"
        }
      }
    },
    "DefaultTime_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultTimeTypCd_input": {
      "required": [ "ds", "ipTimeTypCd" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipTimeTypCd": {
          "description": "Proposed TimeTypCd change",
          "type": "string"
        }
      }
    },
    "DefaultTimeTypCd_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns warnings the user needs to review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DefaultWCCode_input": {
      "required": [ "ds", "wcCode" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "wcCode": {
          "description": "Proposed WorkCenter Code change",
          "type": "string"
        }
      }
    },
    "DefaultWCCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns any warnings the user needs to review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DeleteLaborDtl_input": {
      "required": [ "LaborHedSeq", "LaborDtlSeq", "CallFrom" ],
      "properties": {
        "LaborHedSeq": {
          "format": "int32",
          "description": "LaborHedSeq",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "LaborDtlSeq",
          "type": "integer"
        },
        "CallFrom": {
          "description": "Proposed value to filter logic for HCM",
          "type": "string"
        }
      }
    },
    "DeleteLaborDtl_output": {
      "type": "object",
      "properties": {
        "returnObj": { "type": "boolean" },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "vMessage": {
              "description": "Error message",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "EndActivity_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "EndActivity_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "EndActivityComplete_input": {
      "required": [ "ds", "cmplete" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "cmplete": {
          "description": "Proposed change to the Complete field",
          "type": "boolean"
        }
      }
    },
    "EndActivityComplete_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Returns a string of warnings user needs to know",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetActiveLaborDtl_input": {
      "required": [ "employeeNum" ],
      "properties": {
        "employeeNum": {
          "description": "The Employee Num",
          "type": "string"
        }
      }
    },
    "GetActiveLaborDtl_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "InitiateDowntime_input": {
      "required": [ "employeeNum", "indirectCode", "indirectNote" ],
      "properties": {
        "employeeNum": {
          "description": "Employee Number",
          "type": "string"
        },
        "indirectCode": {
          "description": "Indirect Code",
          "type": "string"
        },
        "indirectNote": {
          "description": "Indirect Labor Note",
          "type": "string"
        }
      }
    },
    "InitiateDowntime_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "EndDowntime_input": {
      "required": [ "employeeNum" ],
      "properties": {
        "employeeNum": {
          "description": "Employee Number",
          "type": "string"
        }
      }
    },
    "EndDowntime_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "GetDetail_input": {
      "required": [ "iLaborHedSeq", "iLaborDtlSeq" ],
      "properties": {
        "iLaborHedSeq": {
          "format": "int32",
          "description": "The LaborHedSeq of the LaborHed record to retrieve",
          "type": "integer"
        },
        "iLaborDtlSeq": {
          "format": "int32",
          "description": "The LaborDtlSeq of the LaborDtl record to retrieve",
          "type": "integer"
        }
      }
    },
    "GetDetail_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "getElapsedTime_input": {
      "required": [ "startDate", "startTime" ],
      "properties": {
        "startDate": {
          "format": "date-time",
          "description": "Initial Date",
          "type": "string"
        },
        "startTime": {
          "format": "double",
          "description": "Initial Time",
          "type": "number"
        }
      }
    },
    "getElapsedTime_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "format": "double",
          "type": "number"
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlNoHdr_input": {
      "required": [ "ds", "EmployeeNum", "ShopFloor", "ClockInDate", "ClockInTime", "ClockOutDate", "ClockOutTime" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "EmployeeNum": {
          "description": "The employee id for this labor record",
          "type": "string"
        },
        "ShopFloor": {
          "description": "Indicates whether this is being called from the shop floor\r\n            labor entry program",
          "type": "boolean"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date",
          "type": "string"
        },
        "ClockInTime": {
          "format": "double",
          "description": "The clock in time",
          "type": "number"
        },
        "ClockOutDate": {
          "format": "date-time",
          "description": "The clock out date",
          "type": "string"
        },
        "ClockOutTime": {
          "format": "double",
          "description": "The clock out time",
          "type": "number"
        }
      }
    },
    "GetNewLaborDtlNoHdr_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlWithHdr_input": {
      "required": [ "ds", "ipClockInDate", "ipClockInTime", "ipClockOutDate", "ipClockOutTime", "ipLaborHedSeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "ipClockInDate": {
          "format": "date-time",
          "description": "The clock in date",
          "type": "string"
        },
        "ipClockInTime": {
          "format": "double",
          "description": "The clock in time",
          "type": "number"
        },
        "ipClockOutDate": {
          "format": "date-time",
          "description": "The clock out date",
          "type": "string"
        },
        "ipClockOutTime": {
          "format": "double",
          "description": "The clock out time",
          "type": "number"
        },
        "ipLaborHedSeq": {
          "format": "int32",
          "description": "Unique identifier of the LaborHed",
          "type": "integer"
        }
      }
    },
    "GetNewLaborDtlWithHdr_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborHed1_input": {
      "required": [ "ds", "EmployeeNum", "ShopFloor", "payrollDate" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "EmployeeNum": {
          "description": "The employee id for this labor record",
          "type": "string"
        },
        "ShopFloor": {
          "description": "Indicates whether this is being called from the shop floor\r\n            labor entry program",
          "type": "boolean"
        },
        "payrollDate": {
          "format": "date-time",
          "description": "Payroll Date for this labor record",
          "type": "string"
        }
      }
    },
    "GetNewLaborHed1_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLbrScrapSerialNumbers_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor data set"
        }
      }
    },
    "GetNewLbrScrapSerialNumbers_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewTimeWeeklyView_input": {
      "required": [ "ds", "ipEmployeeNum", "ipDateInWeek" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor data set"
        },
        "ipEmployeeNum": {
          "description": "The employee id for this labor record",
          "type": "string"
        },
        "ipDateInWeek": {
          "format": "date-time",
          "description": "Date within the week for which a new TimeWeeklyView record is to be created",
          "type": "string"
        }
      }
    },
    "GetNewTimeWeeklyView_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetRowsCalendarView_input": {
      "required": [ "whereClauseLaborHed", "whereClauseLaborDtl", "whereClauseLaborDtlAttach", "whereClauseLaborDtlCom", "whereClauseLaborEquip", "whereClauseLaborPart", "whereClauseLbrScrapSerialNumbers", "whereClauseTimeWorkHours", "whereClauseTimeWeeklyView", "whereClauseLaborDtlGroup", "whereClauseSelectedSerialNumbers", "whereClauseSNFormat", "pageSize", "absolutePage", "ipEmployeeNum", "ipCalendarStartDate", "ipCalendarEndDate" ],
      "properties": {
        "whereClauseLaborHed": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtl": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlAttach": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlCom": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborEquip": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborPart": {
          "type": "string",
          "example": ""
        },
        "whereClauseLbrScrapSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWorkHours": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWeeklyView": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlGroup": {
          "type": "string",
          "example": ""
        },
        "whereClauseSelectedSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseSNFormat": {
          "type": "string",
          "example": ""
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "absolutePage": {
          "format": "int32",
          "type": "integer"
        },
        "ipEmployeeNum": { "type": "string" },
        "ipCalendarStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "ipCalendarEndDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetRowsCalendarView_output": {
      "type": "object",
      "properties": {
        "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "morePages": { "type": "boolean" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetRowsWhoIsHere_input": {
      "required": [ "whereClauseLaborHed", "whereClauseLaborDtl", "whereClauseLaborDtlCom", "whereClauseLaborEquip", "whereClauseLaborPart", "whereClauseLbrScrapSerialNumbers", "whereClauseTimeWorkHours", "whereClauseTimeWeeklyView", "whereClauseLaborDtlGroup", "whereClauseSelectedSerialNumbers", "whereClauseSNFormat", "pageSize", "absolutePage", "ipSupervisorID" ],
      "properties": {
        "whereClauseLaborHed": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtl": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlCom": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborEquip": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborPart": {
          "type": "string",
          "example": ""
        },
        "whereClauseLbrScrapSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWorkHours": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWeeklyView": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlGroup": {
          "type": "string",
          "example": ""
        },
        "whereClauseSelectedSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseSNFormat": {
          "type": "string",
          "example": ""
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "absolutePage": {
          "format": "int32",
          "type": "integer"
        },
        "ipSupervisorID": { "type": "string" }
      }
    },
    "GetRowsWhoIsHere_output": {
      "type": "object",
      "properties": {
        "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "morePages": { "type": "boolean" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrieveApproved_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrieveApproved": {
              "description": "Should Approved records be retrieved on search? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrieveByOption_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrieveByDay": {
              "description": "Should records be retrieve one day at a time? Yes/No",
              "type": "boolean"
            },
            "opTERetrieveByWeek": {
              "description": "Should records be retrieve a week at a time? Yes/No",
              "type": "boolean"
            },
            "opTERetrieveByMonth": {
              "description": "Should records be retrieve a month at a time? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrieveEntered_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrieveEntered": {
              "description": "Should Entered records be retrieved on search? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrievePartiallyApproved_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrievePartiallyApproved": {
              "description": "Should Partially Approved records be retrieved on search? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrieveRejected_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrieveRejected": {
              "description": "Should Rejected records be retrieved on search? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetTERetrieveSubmitted_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "opTERetrieveSubmitted": {
              "description": "Should Submitted records be retrieved on search? Yes/No",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "IsValidAssembly_input": {
      "required": [ "pcJobNum", "piAssemblySeq" ],
      "properties": {
        "pcJobNum": {
          "description": "Job number to which this labor transaction applies.",
          "type": "string"
        },
        "piAssemblySeq": {
          "format": "int32",
          "description": "The Assembly Sequence of the Job that the labor transaction applies to.",
          "type": "integer"
        }
      }
    },
    "IsValidAssembly_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "plFound": {
              "description": "Found YES/NO",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "LaborDtlAfterGetRowsWrapper_input": {
      "required": [ "laborDtlRow" ],
      "properties": {
        "laborDtlRow": {
          "$ref": "#/definitions/Erp.Tablesets.LaborDtlRow",
          "description": "LaborDtl tableset row"
        }
      }
    },
    "LaborDtlAfterGetRowsWrapper_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "laborDtlRow": {
              "$ref": "#/definitions/Erp.Tablesets.LaborDtlRow",
              "description": "LaborDtl tableset row"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "LaborRateCalc_input": {
      "required": [ "ds" ],
      "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } }
    },
    "LaborRateCalc_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnChangeClockInDate_input": {
      "required": [ "ds", "ipClockInDate" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Epicor.Mfg.BO.LaborDataSet"
        },
        "ipClockInDate": {
          "format": "date-time",
          "description": "Proposed Clock In Date",
          "type": "string"
        }
      }
    },
    "OnChangeClockInDate_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Epicor.Mfg.BO.LaborDataSet"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnChangePCID_input": {
      "required": [ "pcid", "ds" ],
      "properties": {
        "pcid": {
          "description": "PCID to validate",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Report Qty Dataset"
        }
      }
    },
    "OnChangePCID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Report Qty Dataset"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnChangeQuickEntryCode_input": {
      "required": [ "ipEmpID", "ipQuickEntryCode", "ds" ],
      "properties": {
        "ipEmpID": {
          "description": "Proposed EmpID value",
          "type": "string"
        },
        "ipQuickEntryCode": {
          "description": "Proposed QuickEntryCode value",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "OnChangeQuickEntryCode_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnChangeResourceGrpID_input": {
      "required": [ "ds", "ipResourceGrpID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Epicor.Mfg.BO.LaborDataSet"
        },
        "ipResourceGrpID": {
          "description": "Proposed Resource Group",
          "type": "string"
        }
      }
    },
    "OnChangeResourceGrpID_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Epicor.Mfg.BO.LaborDataSet"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OnLoadEndActivity_input": {
      "required": [ "iLaborHedSeq", "iLaborDtlSeq" ],
      "properties": {
        "iLaborHedSeq": {
          "format": "int32",
          "description": "The LaborHedSeq of the LaborHed record to retrieve",
          "type": "integer"
        },
        "iLaborDtlSeq": {
          "format": "int32",
          "description": "The LaborDtlSeq of the LaborDtl record to retrieve",
          "type": "integer"
        }
      }
    },
    "OnLoadEndActivity_output": {
      "type": "object",
      "properties": { "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
      "additionalProperties": { "type": "string" }
    },
    "Overrides_input": {
      "required": [ "ds", "inOpCode", "inResGrpID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Epicor.Mfg.BO.LaborDataSet"
        },
        "inOpCode": {
          "description": "OpCode to override",
          "type": "string"
        },
        "inResGrpID": {
          "description": "Resource Group OD to override",
          "type": "string"
        }
      }
    },
    "Overrides_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Epicor.Mfg.BO.LaborDataSet"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "OverridesResource_input": {
      "required": [ "ds", "ProposedResourceID" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "ProposedResourceID": {
          "description": "The proposed resource id",
          "type": "string"
        }
      }
    },
    "OverridesResource_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "RecallFromApproval_input": {
      "required": [ "ds", "lWeeklyView" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "lWeeklyView": {
          "description": "Is this method being called with WeeklyView records?",
          "type": "boolean"
        }
      }
    },
    "RecallFromApproval_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "cMessageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SelectForWork_input": {
      "required": [ "ds", "pcResourceGrpId", "pcResourceId", "pcLaborType" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "pcResourceGrpId": {
          "description": "The Resource Group id for this work.",
          "type": "string"
        },
        "pcResourceId": {
          "description": "The Resource id for this work.",
          "type": "string"
        },
        "pcLaborType": {
          "description": "Labor Type: S=Setup, P=Production",
          "type": "string"
        }
      }
    },
    "SelectForWork_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SelectForWorkCheckWarnings_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "SelectForWorkCheckWarnings_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "List of error warnings for user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SetClockInAndDisplayTimeMES_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "SetClockInAndDisplayTimeMES_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveApproved_input": {
      "required": [ "ipTERetrieveApproved" ],
      "properties": {
        "ipTERetrieveApproved": {
          "description": "Value to set UserFile.TERetrieveApproved Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveApproved_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveByDay_input": {
      "required": [ "ipTERetrieveByDay" ],
      "properties": {
        "ipTERetrieveByDay": {
          "description": "Value to set the by day option Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveByDay_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveByMonth_input": {
      "required": [ "ipTERetrieveByMonth" ],
      "properties": {
        "ipTERetrieveByMonth": {
          "description": "Value to set the by month option Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveByMonth_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveByWeek_input": {
      "required": [ "ipTERetrieveByWeek" ],
      "properties": {
        "ipTERetrieveByWeek": {
          "description": "Value to set the by week option Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveByWeek_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveEntered_input": {
      "required": [ "ipTERetrieveEntered" ],
      "properties": {
        "ipTERetrieveEntered": {
          "description": "Value to set UserFile.TERetrieveEntered Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveEntered_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrievePartiallyApproved_input": {
      "required": [ "ipTERetrievePartiallyApproved" ],
      "properties": {
        "ipTERetrievePartiallyApproved": {
          "description": "Value to set UserFile.TERetrievePartiallyApproved Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrievePartiallyApproved_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveRejected_input": {
      "required": [ "ipTERetrieveRejected" ],
      "properties": {
        "ipTERetrieveRejected": {
          "description": "Value to set UserFile.TERetrieveRejected Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveRejected_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "SetTERetrieveSubmitted_input": {
      "required": [ "ipTERetrieveSubmitted" ],
      "properties": {
        "ipTERetrieveSubmitted": {
          "description": "Value to set UserFile.TERetrieveSubmitted Yes/No",
          "type": "boolean"
        }
      }
    },
    "SetTERetrieveSubmitted_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "StartActivity_input": {
      "required": [ "LaborHedSeq", "StartType", "ds" ],
      "properties": {
        "LaborHedSeq": {
          "format": "int32",
          "description": "The labor header sequence",
          "type": "integer"
        },
        "StartType": {
          "description": "The type of activity being started.\r\n            Values are: P - Production\r\n            I - Indirect\r\n            S - Setup\r\n            R - Rewwork",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "StartActivity_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SubmitForApproval_input": {
      "required": [ "ds", "lWeeklyView" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "lWeeklyView": {
          "description": "Is this method being called with WeeklyView records?",
          "type": "boolean"
        }
      }
    },
    "SubmitForApproval_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "cMessageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ValidateIndirectCodeIsDowntime_input": {
      "required": [ "indirectCode" ],
      "properties": { "indirectCode": { "type": "string" } }
    },
    "ValidateIndirectCodeIsDowntime_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "validateNonConfProcessed_input": {
      "required": [ "ds", "laborHedSeq", "laborDtlSeq", "vDiscrepQty" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "type": "integer"
        },
        "vDiscrepQty": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "validateNonConfProcessed_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
            "vMessage": { "type": "string" }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ValidateProjectClosed_input": {
      "required": [ "projectID", "jobNum", "laborTypePseudo" ],
      "properties": {
        "projectID": { "type": "string" },
        "jobNum": { "type": "string" },
        "laborTypePseudo": { "type": "string" }
      }
    },
    "ValidateProjectClosed_output": {
      "type": "object",
      "properties": { "returnObj": { "type": "boolean" } },
      "additionalProperties": { "type": "string" }
    },
    "ValidateSerialAfterSelect_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor data set"
        }
      }
    },
    "ValidateSerialAfterSelect_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ValidateSerialScanInterface_input": {
      "required": [ "jobNum", "assemblySeq", "partNum", "proposedSN", "oprSeq", "laborHedSeq", "laborDtlSeq", "rework" ],
      "properties": {
        "jobNum": {
          "description": "JobNum of the SN",
          "type": "string"
        },
        "assemblySeq": {
          "format": "int32",
          "description": "AssemblySeq of the SN",
          "type": "integer"
        },
        "partNum": {
          "description": "PartNum of the SN",
          "type": "string"
        },
        "proposedSN": {
          "description": "Proposed SN",
          "type": "string"
        },
        "oprSeq": {
          "format": "int32",
          "description": "Operation sequence of the labor detail",
          "type": "integer"
        },
        "laborHedSeq": {
          "format": "int32",
          "description": "Labor Head sequence of the labor detail",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "description": "Labor Detail sequence of the labor detail",
          "type": "integer"
        },
        "rework": {
          "description": "Indicates if labor record is rework",
          "type": "boolean"
        }
      }
    },
    "ValidateSerialScanInterface_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "ValidateSerialBeforeSelect_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor data set"
        }
      }
    },
    "ValidateSerialBeforeSelect_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor data set"
            },
            "notEnoughSerials": {
              "description": "Not enough serials for labor entry",
              "type": "string"
            },
            "totSNReq": {
              "format": "double",
              "description": "Total number of serials required for labor entry",
              "type": "number"
            },
            "totNewSNReq": {
              "format": "double",
              "description": "Number of new serial numbers needed",
              "type": "number"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "VerifySerialMatch_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Epicor.Mfg.BO.LaborDataSet"
        }
      }
    },
    "VerifySerialMatch_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Epicor.Mfg.BO.LaborDataSet"
            },
            "pcMsg": {
              "description": "Set by the BL. It is used to send warning or error messages to the UI.",
              "type": "string"
            },
            "piMsgType": {
              "format": "int32",
              "description": "The type of the message being returned. when 1 - it is a warning msg, when 2 - it is an error msg, when 0 - no msg should be displayed.",
              "type": "integer"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetClockTime_input": {
      "required": [ "dspClckTm" ],
      "properties": {
        "dspClckTm": {
          "description": "The clock time to be parsed as Decimal",
          "type": "string"
        }
      }
    },
    "GetClockTime_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "clckTm": {
              "format": "double",
              "description": "The clock time formatted sent as output for the user",
              "type": "number"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetCodeDescList_input": {
      "required": [ "tableName", "fieldName" ],
      "properties": {
        "tableName": { "type": "string" },
        "fieldName": { "type": "string" }
      }
    },
    "GetCodeDescList_output": {
      "type": "object",
      "properties": { "returnObj": { "type": "string" } },
      "additionalProperties": { "type": "string" }
    },
    "GetDspClockTime_input": {
      "required": [ "clckTm" ],
      "properties": {
        "clckTm": {
          "format": "double",
          "description": "The clock time to be formatted",
          "type": "number"
        }
      }
    },
    "GetDspClockTime_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "dspClckTm": {
              "description": "The clock time formatted sent as output for the user",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ReportPartQtyAllowed_input": {
      "required": [ "ip_JobNum", "ip_AssemblySeq", "ip_OprSeq" ],
      "properties": {
        "ip_JobNum": {
          "description": "Job number",
          "type": "string"
        },
        "ip_AssemblySeq": {
          "format": "int32",
          "description": "Assembly Sequence number",
          "type": "integer"
        },
        "ip_OprSeq": {
          "format": "int32",
          "description": "Operation Sequence number",
          "type": "integer"
        }
      }
    },
    "ReportPartQtyAllowed_output": {
      "type": "object",
      "properties": { "returnObj": { "type": "boolean" } },
      "additionalProperties": { "type": "string" }
    },
    "ExternalMESDowntime_input": {
      "required": [ "ds", "indirectCode", "downtimeNote" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "indirectCode": {
          "description": "IndirectCode",
          "type": "string"
        },
        "downtimeNote": {
          "description": "Downtime Note",
          "type": "string"
        }
      }
    },
    "ExternalMESDowntime_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "ExternalMESEndDowntime_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "ExternalMESEndDowntime_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "Erp.Tablesets.HCMLaborDtlTableset": {
      "type": "object",
      "properties": {
        "HCMLaborDtl": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.HCMLaborDtlRow" },
          "readOnly": false
        },
        "HCMLaborDtlSync": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.HCMLaborDtlSyncRow" },
          "readOnly": false
        },
        "ExtensionTables": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableData" },
          "readOnly": false
        }
      }
    },
    "Erp.Tablesets.HCMLaborDtlRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": " The number of the employee that performed the work. This field is duplicated from the LaborHed.EmployeeNum. It is here so that an index can be built and used when finding how many jobs are\r\nconcurrently active for an employee in order to distribute the labor hours.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "Used as the foreign key to the LaborHed record.",
          "type": "integer"
        },
        "LaborDtlSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborDtl record. This integer is created by using the database sequence \"LaborDtlSeq\".",
          "type": "integer"
        },
        "LaborTypePseudo": {
          "description": " Correlates to LaborType.  Indicates the type of labor transaction, however \"Production\" LaborType can be broken out into \"Project\", \"Production\" or \"Service\".  Valid Values are \"I\" = Indirect, \"P\" - Production, \"S\" - Setup, \"J\" - Project, or \"V\" - Service.\r\nThis value controls what fields are displayed/prompted for. \r\n\"I\" Indirect does not use JobNum, LotNum, SetupPctCmp, OprComplete, OpCode, LaborQty, ScrapQty, ScrapReasonCode, Rework, ReworkReasonCode.\r\n\"S\" Setup does not use IndirectCode.\r\n\"P\" Production does not use IndirectCode or SetupPctCmp,",
          "type": "string"
        },
        "JCDept": {
          "description": "The Department in which the work was done. Default is from WrkCenter.JCDEpt. This code is DIRECTLY ENTERED.",
          "type": "string"
        },
        "LaborNote": {
          "description": "A short note that the user can make about the labor transaction.",
          "type": "string"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date that corresponds to the clock in time field. Labor entry uses the LaborHed.ClockInDate as a default for the first LaborDtl record of the LaborHed and then will use the date from the Last LaborDtl record. Labor Collection creates this field based on an adjusted system date.  See LaborHed.ClockInDate field description on adjusting the date.",
          "type": "string"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ProjectID": {
          "description": "Descriptive code assigned by the user to uniquely identify the Jobs, Orders, POs, and Tasks in a Project.  Cannot be blank.",
          "type": "string"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "PayHours": {
          "format": "double",
          "type": "number"
        },
        "HCMEnabledAt": {
          "description": "String value which contains the values for the HCM Integration, HDR (Header) DTL (Detail). Those values help to know the source of the payHours.",
          "type": "string"
        },
        "Status": {
          "description": "Sent (S) = Submitted to HCM  Received (R) = Received from HCM  Error (E) = Error Submitting to HCM In Progress (IP) = In Progress",
          "type": "string"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "Erp.Tablesets.HCMLaborDtlSyncRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company",
          "type": "string"
        },
        "LaborDtlSysRowID": {
          "format": "uuid",
          "description": "Field to Link the SysRowID with HCMLaborDtlSync record.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "Status": {
          "description": "Sent (S) = Submitted to HCM  Received (R) = Received from HCM  Error (E) = Error Submitting to HCM In Progress (IP) = In Progress",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "SysRevID",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "SysRowID",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "LaborSource": {
          "description": "String value which indicates if the status should be applied to the header or the detail (HDR/DTL)",
          "type": "string"
        },
        "BitFlag": {
          "format": "int32",
          "type": "integer"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "HCMGetLaborRecords_input": {
      "required": [ "employeeNum", "startDate", "endDate", "includeStatus" ],
      "properties": {
        "employeeNum": {
          "description": "String value with the list of employees",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "Start Date",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "End Date",
          "type": "string"
        },
        "includeStatus": {
          "description": "String value with status value",
          "type": "string"
        }
      }
    },
    "HCMGetLaborRecords_output": {
      "type": "object",
      "properties": { "returnObj": { "$ref": "#/definitions/Erp.Tablesets.HCMLaborDtlTableset" } },
      "additionalProperties": { "type": "string" }
    },
    "HCMSetLaborStatus_input": {
      "required": [ "hcmDs" ],
      "properties": { "hcmDs": { "$ref": "#/definitions/Erp.Tablesets.HCMLaborDtlTableset" } }
    },
    "HCMSetLaborStatus_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "ValidateChargeRateForTimeType_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ValidateChargeRateForTimeType_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "vMessage": {
              "description": "Warning message",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ReviewIsDocumentLock_input": {
      "required": [ "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "laborHedSeq": {
          "description": "Labor Hed Sequence",
          "type": "string"
        },
        "laborDtlSeq": {
          "description": "Labor Detail Sequence",
          "type": "string"
        }
      }
    },
    "ReviewIsDocumentLock_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "vMessage": {
              "description": "Error message",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "IsHCMEnabledAtCompany_output": {
      "type": "object",
      "properties": { "returnObj": { "type": "boolean" } },
      "additionalProperties": { "type": "string" }
    },
    "ChangeTimeWeeklyViewWeekBeginDate_input": {
      "required": [ "ds", "weekBeginDate" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "weekBeginDate": {
          "format": "date-time",
          "description": "Proposed week begin date",
          "type": "string"
        }
      }
    },
    "ChangeTimeWeeklyViewWeekBeginDate_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeLaborDtlOprSeq_input": {
      "required": [ "ds", "oprSeq" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "oprSeq": {
          "format": "int32",
          "description": "Proposed oprSeq change",
          "type": "integer"
        }
      }
    },
    "ChangeLaborDtlOprSeq_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "message": {
              "description": "Returns warnings for user's review",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeLaborDtlScrapQty_input": {
      "required": [ "ds", "scrapQty" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        },
        "scrapQty": {
          "format": "double",
          "description": "Proposed change to ScrapQty field",
          "type": "number"
        }
      }
    },
    "ChangeLaborDtlScrapQty_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "AfterChangeLaborDtlDiscrepQty_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "AfterChangeLaborDtlDiscrepQty_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            },
            "message": {
              "description": "Return message",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeLaborDtlTimeField_input": {
      "required": [ "fieldName", "timeValue", "ds" ],
      "properties": {
        "fieldName": {
          "description": "The name of the field that is changing",
          "type": "string"
        },
        "timeValue": {
          "format": "double",
          "description": "The new time value",
          "type": "number"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ChangeLaborDtlTimeField_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "ChangeLaborDtlDspTimeField_input": {
      "required": [ "fieldName", "timeValue", "ds" ],
      "properties": {
        "fieldName": {
          "description": "The name of the field that is changing",
          "type": "string"
        },
        "timeValue": {
          "description": "The new time value",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Entry Data set"
        }
      }
    },
    "ChangeLaborDtlDspTimeField_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Entry Data set"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetJobProductionCompanySettings_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "advanceLaborRate": {
              "description": "Advance Labor Rate value",
              "type": "boolean"
            },
            "clockFormat": {
              "description": "Clock format value",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "SubmitForApprovalBySelected_input": {
      "required": [ "ds", "weeklyView" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "weeklyView": {
          "description": "Is this method being called with WeeklyView records?",
          "type": "boolean"
        }
      }
    },
    "SubmitForApprovalBySelected_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "messageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "RecallFromApprovalBySelected_input": {
      "required": [ "ds", "weeklyView" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        },
        "weeklyView": {
          "description": "Is this method being called with WeeklyView records?",
          "type": "boolean"
        }
      }
    },
    "RecallFromApprovalBySelected_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "messageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CopyLaborDtlBySelected_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "CopyLaborDtlBySelected_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "messageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CopyTimeWeeklyViewBySelected_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The Labor data set"
        }
      }
    },
    "CopyTimeWeeklyViewBySelected_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The Labor data set"
            },
            "messageText": {
              "description": "Message text to present to the user after the process is finished",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetRowsTimeEntry_input": {
      "required": [ "whereClauseLaborHed", "whereClauseLaborDtl", "whereClauseLaborDtlAttach", "whereClauseLaborDtlCom", "whereClauseLaborEquip", "whereClauseLaborPart", "whereClauseLbrScrapSerialNumbers", "whereClauseTimeWorkHours", "whereClauseTimeWeeklyView", "whereClauseLaborDtlGroup", "whereClauseSelectedSerialNumbers", "whereClauseSNFormat", "pageSize", "absolutePage", "employeeNum", "calendarStartDate", "calendarEndDate" ],
      "properties": {
        "whereClauseLaborHed": {
          "description": "LaborHed where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtl": {
          "description": "LaborDtl where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlAttach": {
          "description": "LaborDtlAttach where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlCom": {
          "description": "LaborDtlCom where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborEquip": {
          "description": "LaborEquip where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborPart": {
          "description": "LaborPart where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLbrScrapSerialNumbers": {
          "description": "LbrScrapSerialNumbers where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWorkHours": {
          "description": "LaborTimeWorkHours where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWeeklyView": {
          "description": "LaborTimeWeeklyView where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlGroup": {
          "description": "LaborDtlGroup where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseSelectedSerialNumbers": {
          "description": "SelectedSerialNumbers where clause",
          "type": "string",
          "example": ""
        },
        "whereClauseSNFormat": {
          "description": "SNFormat where clause",
          "type": "string",
          "example": ""
        },
        "pageSize": {
          "format": "int32",
          "description": "Page size",
          "type": "integer"
        },
        "absolutePage": {
          "format": "int32",
          "description": "Absolute page",
          "type": "integer"
        },
        "employeeNum": {
          "description": "Employee number",
          "type": "string"
        },
        "calendarStartDate": {
          "format": "date-time",
          "description": "Calendar start date",
          "type": "string"
        },
        "calendarEndDate": {
          "format": "date-time",
          "description": "Calendar end date",
          "type": "string"
        }
      }
    },
    "GetRowsTimeEntry_output": {
      "type": "object",
      "properties": {
        "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "morePages": {
              "description": "More pages",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetLaborTypeList_input": {
      "required": [ "employeeNum" ],
      "properties": {
        "employeeNum": {
          "description": "Employee Number",
          "type": "string"
        }
      }
    },
    "GetLaborTypeList_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "laborTypeList": {
              "description": "Labor Type List",
              "type": "string"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "CreateLbrScrapSerialNumbersFromList_input": {
      "required": [ "serialNumberList", "partNumList", "ds" ],
      "properties": {
        "serialNumberList": {
          "description": "Serial Number List",
          "type": "string"
        },
        "partNumList": {
          "description": "Part Number List",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor dataset"
        }
      }
    },
    "CreateLbrScrapSerialNumbersFromList_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor dataset"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "LaborHedPayrollDateChanging_input": {
      "required": [ "payrollDate", "ds" ],
      "properties": {
        "payrollDate": {
          "format": "date-time",
          "description": "Payroll Date",
          "type": "string"
        },
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "Labor Dataset"
        }
      }
    },
    "LaborHedPayrollDateChanging_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "Labor Dataset"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetDefaultsAddLaborDtlFromCalendar_input": {
      "required": [ "empID", "calendarStartDateTime", "calendarEndDateTime" ],
      "properties": {
        "empID": { "type": "string" },
        "calendarStartDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "calendarEndDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetDefaultsAddLaborDtlFromCalendar_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "laborHedSeq": {
              "format": "int32",
              "type": "integer"
            },
            "startDate": {
              "format": "date-time",
              "type": "string"
            },
            "startTime": {
              "format": "double",
              "type": "number"
            },
            "endDate": {
              "format": "date-time",
              "type": "string"
            },
            "endTime": {
              "format": "double",
              "type": "number"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborHed_input": {
      "required": [ "ds" ],
      "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } }
    },
    "GetNewLaborHed_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtl_input": {
      "required": [ "ds", "laborHedSeq" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNewLaborDtl_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlAttch_input": {
      "required": [ "ds", "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNewLaborDtlAttch_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlComment_input": {
      "required": [ "ds", "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNewLaborDtlComment_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborEquip_input": {
      "required": [ "ds", "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNewLaborEquip_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborPart_input": {
      "required": [ "ds", "laborHedSeq", "laborDtlSeq" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        },
        "laborDtlSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNewLaborPart_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetNewLaborDtlGroup_input": {
      "required": [ "ds", "employeeNum" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" },
        "employeeNum": { "type": "string" }
      }
    },
    "GetNewLaborDtlGroup_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "ds": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "DeleteByID_input": {
      "required": [ "laborHedSeq" ],
      "properties": {
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DeleteByID_output": {
      "type": "object",
      "properties": {},
      "additionalProperties": { "type": "string" }
    },
    "GetByID_input": {
      "required": [ "laborHedSeq" ],
      "properties": {
        "laborHedSeq": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetByID_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The DataSet."
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "Erp.Tablesets.LaborHedListTableset": {
      "type": "object",
      "properties": {
        "LaborHedList": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborHedListRow" },
          "readOnly": false
        },
        "ExtensionTables": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableData" },
          "readOnly": false
        }
      }
    },
    "Erp.Tablesets.LaborHedListRow": {
      "type": "object",
      "properties": {
        "Company": {
          "description": "Company Identifier.",
          "type": "string"
        },
        "EmployeeNum": {
          "description": "The number of the employee that performed the work. This field is directly maintainable. A selection list is provided in labor entry to find the employee by name.",
          "type": "string"
        },
        "LaborHedSeq": {
          "format": "int32",
          "description": "An integer assigned by the system to uniquely identify the LaborHed record. This integer is created by using the database sequence \"LaborHedSeq\".",
          "type": "integer"
        },
        "PayrollDate": {
          "format": "date-time",
          "description": " The Payroll date is the \"Logical Day\" that labor occurred. In most cases this is the same as the \"Physical Day\".  But when work is done before and after midnight then \"Labor Collection\" rolls the physical date forward or backward to create a Logical date. This date will be used to group transactions together by a logical date in order to calculate daily overtime during the transfer to payroll.\r\nIt will also be used in the selection criteria logic during the transfer to payroll.  This is duplicated into each LaborDtl.",
          "type": "string"
        },
        "Shift": {
          "format": "int32",
          "description": "Indicates the shift in which the employee clocked in.  Default from the Employee master. Must be valid in the master table JCShift.",
          "type": "integer"
        },
        "ClockInDate": {
          "format": "date-time",
          "description": "The clock in date of the clock in time field. It is created using the ActualDate and may be rolled forward/backward if the clock in time is adjusted across midnight. For example, when an employee clocks in prior to midnight, but shift starts at midnight or later, this situation causes the default to be ActualDateIn + 1.",
          "type": "string"
        },
        "ClockInTime": {
          "format": "double",
          "description": "The clock in time to be considered for payroll and costing purposes as the time when the employee starts work. Clock in time is stored as Hours.Hundreths. It is created using the ActualClockIn value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockin\" is before the shift start time (JCShift.Start) and after ( JCShift. start - JCSyst.Grace) then the system adjusts the clockin time to be the start of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockInTime": {
          "description": "A \"pre-formatted\" ClockinTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockInTime": {
          "format": "double",
          "description": "Actual clock in time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocked in. In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.StartTime. Stored as Hours:Hundreths.",
          "type": "number"
        },
        "ActualClockinDate": {
          "format": "date-time",
          "description": "The actual date at the time of clockin. Labor Collection uses the system date to create this field.  Labor entry allows entry of this field and then uses it to generate the default for the adjusted  \"ClockInDate\".  This field is provided mainly for audit purposes.",
          "type": "string"
        },
        "LunchStatus": {
          "description": " An internal control byte used by Labor Collection when the system is configured not to take out lunch automatically (JCSyst.AutoLunch = N). It is used determine if what to do when the \"Lunch\" button is pressed.\r\n\r\nThe possible values are \"N\" - No lunch, \"O\" - Out to Lunch, \"R\" - Returned from lunch.",
          "type": "string"
        },
        "ActLunchOutTime": {
          "format": "double",
          "description": " Actual Clock out time for Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchStart as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time for LunchOut.",
          "type": "number"
        },
        "LunchOutTime": {
          "format": "double",
          "description": " Clock out time for Lunch that is used for costing/payroll determination. It is created by adjusting the ActLunchOutTime. . The adjusted time is where the system time is rolled back to the JCShift.LunchStart time when the employee clocks out for lunch after it has started but before it ends.\r\n\r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ActLunchInTime": {
          "format": "double",
          "description": " Actual Clock In  time from Lunch.  Stored as Hours.Hundreths.  If the system is configured to automatically take out the standard lunch time (JCSyst.AutoLunch = Yes) then use the JCShift.LunchEnd as the default. Labor collection creates these during the clock In function. But may erase or adjust them if the employee clocks out before or during the lunch period.\r\n\r\nIf JCsyst.AutoLunch = \"NO\"  then there is no default.\r\n\r\nLabor entry  validates that the LunchOut  -  LunchIn falls between the ClockIn and ClockOut times. \r\n\r\nIf the JCSyst.AutoLunch = \"NO\" then Labor Collection allows the Lunch Clock in/out function and captures the system time.",
          "type": "number"
        },
        "LunchInTime": {
          "format": "double",
          "description": " Clock In time from Lunch break that is used for costing/payroll determination. Created by adjusting the ActLunchInTime.\r\nThe adjusted time is where the system time is rolled forward to the JCShift.LunchEnd time when the employee clocks in from lunch before the lunch period ends. \r\nStored as Hours.Hundreths.",
          "type": "number"
        },
        "ClockOutTime": {
          "format": "double",
          "description": "The clockOut in time to be considered for payroll and costing purposes as the time when the employee stops work. ClockOut time is stored as Hours.Hundreths. It is defaulted using the ActualClockOut value &amp; the Grace period allowed (JCSyst.Grace).  If the \"ActualClockOut\" is after the shift end time (JCShift.End) and before ( JCShift.End + JC.Syst.Grace) then the system adjusts the ClockOut time to be the end of the shift. Else it will be set to the actual system time.",
          "type": "number"
        },
        "DspClockOutTime": {
          "description": "A \"pre-formatted\" ClockOutTime field  used for displays purposes only.  If JCSyst.ClockFormat = \"M\" then output the clockin time as Hours:Minutes else output it as Hours.Hundreths. Note that the colon or  period  are physically part of the field.",
          "type": "string"
        },
        "ActualClockOutTime": {
          "format": "double",
          "description": "Actual clock Out time. This time is NOT ADJUSTED, Labor collection uses the actual physical system time when the employee clocks out.  In Labor Entry it would be entered from the TimeCard. Labor entry defaults it to the JCShift.EndTime. Stored as Hours.Hundreths.",
          "type": "number"
        },
        "PayHours": {
          "format": "double",
          "description": " Hours for payroll.  This is stored as Hours.Hundreths. For example 3 1/2 hours is stored as 3.5. This is calculated when the Start/Stop times are changed in labor entry. It can then be overridden.\r\nThe Logic for calculating hours from clockin, clockout is:\r\nIf ClockIn &gt; ClockOut Gross Hours = ( (ClockOut + 24.00) - ClockIn) else Gross Hours = ClockOut - ClockIn. \r\nIf LunchOut &gt; LunchIn Lunch Hours = ( (LunchIn +24) - LunchOut )\r\nelse Lunch Hours = ( LunchIn - LunchOut ).\r\nPayHours = GRoss Hours - Lunch Hours. \r\nRemember that the database clockin/clockout fields are stored as hours hundredths, while the entry widgets are either hours.hundreths or Hours:Minutes. So use the database fields in this calculation and there is no need to worry about conversions.",
          "type": "number"
        },
        "FeedPayroll": {
          "description": "Flag that indicates this labor transaction is eligible for transfer to DCD payroll application. The default is set from JCSyst.FeedPayroll.",
          "type": "boolean"
        },
        "TransferredToPayroll": {
          "description": "Indicates if this transaction has been transferred to payroll. This is updated via the Payroll function to transfer labor.",
          "type": "boolean"
        },
        "LaborCollection": {
          "description": "An internal flag that indicates if this record was created by the Labor Collection system.  It does not have any specific purpose, but it would be nice to know in debugging situations.",
          "type": "boolean"
        },
        "TranSet": {
          "description": "An optional field where the user enters a string of characters that would be used to associate multiple transactions as being part of a transaction set. TranSet will be used for data selection type functions.",
          "type": "string"
        },
        "ActiveTrans": {
          "description": " Used by Labor collection to indicate that this LaborHed record is currently active. When the employee clocks out it is set to \"No\".\r\n\r\nIf record is created by Labor Entry this value is \"NO\".\r\n\r\nThis field is controlled by the programs and not directly updated by the user. It will be used to prevent clocking in twice, displaying which employees are clocked in and which ones have not clocked out. Labor entry can't access a record that is Open.",
          "type": "boolean"
        },
        "ChkLink": {
          "description": " Encoded value PRChkDtl.HeadNum + PRChkDtl.LineNum.\r\nUsed to relate the labor to the payroll check detail.",
          "type": "string"
        },
        "SysRevID": {
          "format": "int64",
          "description": "Revision identifier for this row. It is incremented upon each write.",
          "type": "integer"
        },
        "SysRowID": {
          "format": "uuid",
          "description": "Unique identifier for this row. The value is a GUID.",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "TotLbrHrs": {
          "format": "double",
          "type": "number"
        },
        "TotBurHrs": {
          "format": "double",
          "type": "number"
        },
        "WipPosted": { "type": "boolean" },
        "ImagePath": {
          "description": "Full Path of Employee PhotoFile",
          "type": "string"
        },
        "LunchBreak": {
          "description": "Indicates if a lunch break is part of the shift",
          "type": "boolean"
        },
        "EmpBasicShift": {
          "format": "int32",
          "description": "Normal work shift from EmpBasic",
          "type": "integer"
        },
        "EmpBasicSupervisorID": {
          "description": "The ID of the supervisor for the employee",
          "type": "string"
        },
        "DspPayHours": {
          "format": "double",
          "description": "For display purposes",
          "type": "number"
        },
        "GetNewNoHdr": { "type": "boolean" },
        "TimeDisableUpdate": { "type": "boolean" },
        "TimeDisableDelete": { "type": "boolean" },
        "MES": { "type": "boolean" },
        "EmployeeNumLastName": {
          "description": "Last name of employee",
          "type": "string"
        },
        "EmployeeNumName": {
          "description": "This is the employee's full name. This is not directly maintainable. It is a concatenation of the FirstName + MiddleInitial + LastName fields. It exists so that it can be used in browses or where ever the complete name in a first, middle, last fashion is required.",
          "type": "string"
        },
        "EmployeeNumFirstName": {
          "description": "First name of employee.",
          "type": "string"
        },
        "ShiftDescription": {
          "description": "A concatenation of Start + End time.",
          "type": "string"
        },
        "RowMod": {
          "description": "RowMod",
          "type": "string"
        }
      }
    },
    "GetList_input": {
      "required": [ "whereClause", "pageSize", "absolutePage" ],
      "properties": {
        "whereClause": {
          "description": "An expression used to filter the rows. Can be left blank for all rows.",
          "type": "string",
          "example": ""
        },
        "pageSize": {
          "format": "int32",
          "description": "The maximum number of rows to return. Leave as zero for no maximum.",
          "type": "integer"
        },
        "absolutePage": {
          "format": "int32",
          "description": "Page of rows to return.",
          "type": "integer"
        }
      }
    },
    "GetList_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Erp.Tablesets.LaborHedListTableset",
          "description": "The list DataSet."
        },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "morePages": {
              "description": "Whether there are more pages of rows available.",
              "type": "boolean"
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetRows_input": {
      "required": [ "whereClauseLaborHed", "whereClauseLaborDtl", "whereClauseLaborDtlAttch", "whereClauseLaborDtlComment", "whereClauseLaborEquip", "whereClauseLaborPart", "whereClauseLbrScrapSerialNumbers", "whereClauseLaborDtlGroup", "whereClauseSelectedSerialNumbers", "whereClauseSNFormat", "whereClauseTimeWeeklyView", "whereClauseTimeWorkHours", "pageSize", "absolutePage" ],
      "properties": {
        "whereClauseLaborHed": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtl": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlAttch": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlComment": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborEquip": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborPart": {
          "type": "string",
          "example": ""
        },
        "whereClauseLbrScrapSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseLaborDtlGroup": {
          "type": "string",
          "example": ""
        },
        "whereClauseSelectedSerialNumbers": {
          "type": "string",
          "example": ""
        },
        "whereClauseSNFormat": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWeeklyView": {
          "type": "string",
          "example": ""
        },
        "whereClauseTimeWorkHours": {
          "type": "string",
          "example": ""
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "absolutePage": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetRows_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The full DataSet."
        },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": { "morePages": { "type": "boolean" } },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "GetBySysRowID_input": {
      "required": [ "id" ],
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "GetBySysRowID_output": {
      "type": "object",
      "properties": { "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
      "additionalProperties": { "type": "string" }
    },
    "GetBySysRowIDs_input": {
      "required": [ "ids" ],
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "GetBySysRowIDs_output": {
      "type": "object",
      "properties": { "returnObj": { "$ref": "#/definitions/Erp.Tablesets.LaborTableset" } },
      "additionalProperties": { "type": "string" }
    },
    "Update_input": {
      "required": [ "ds" ],
      "properties": {
        "ds": {
          "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
          "description": "The full DataSet."
        }
      }
    },
    "Update_output": {
      "type": "object",
      "properties": {
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": {
              "$ref": "#/definitions/Erp.Tablesets.LaborTableset",
              "description": "The full DataSet."
            }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    },
    "Ice.BOUpdErrorTableset": {
      "type": "object",
      "properties": {
        "BOUpdError": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.BOUpdErrorRow" },
          "readOnly": false
        },
        "ExtensionTables": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableData" },
          "readOnly": false
        }
      }
    },
    "Ice.BOUpdErrorRow": {
      "type": "object",
      "properties": {
        "TableName": { "type": "string" },
        "ErrorLevel": { "type": "string" },
        "ErrorType": { "type": "string" },
        "ErrorText": { "type": "string" },
        "ErrorSysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "SysRowID": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "RowMod": { "type": "string" }
      }
    },
    "Erp.Tablesets.UpdExtLaborTableset": {
      "type": "object",
      "properties": {
        "LaborHed": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborHedRow" },
          "readOnly": false
        },
        "LaborDtl": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlRow" },
          "readOnly": false
        },
        "LaborDtlAttch": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlAttchRow" },
          "readOnly": false
        },
        "LaborDtlComment": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlCommentRow" },
          "readOnly": false
        },
        "LaborEquip": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborEquipRow" },
          "readOnly": false
        },
        "LaborPart": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborPartRow" },
          "readOnly": false
        },
        "LbrScrapSerialNumbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LbrScrapSerialNumbersRow" },
          "readOnly": false
        },
        "LaborDtlGroup": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.LaborDtlGroupRow" },
          "readOnly": false
        },
        "SelectedSerialNumbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.SelectedSerialNumbersRow" },
          "readOnly": false
        },
        "SNFormat": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.SNFormatRow" },
          "readOnly": false
        },
        "TimeWeeklyView": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.TimeWeeklyViewRow" },
          "readOnly": false
        },
        "TimeWorkHours": {
          "type": "array",
          "items": { "$ref": "#/definitions/Erp.Tablesets.TimeWorkHoursRow" },
          "readOnly": false
        },
        "ExtensionTables": {
          "type": "array",
          "items": { "$ref": "#/definitions/Ice.Extensions.ExtensionTableData" },
          "readOnly": false
        }
      }
    },
    "UpdateExt_input": {
      "required": [ "ds", "continueProcessingOnError", "rollbackParentOnChildError" ],
      "properties": {
        "ds": { "$ref": "#/definitions/Erp.Tablesets.UpdExtLaborTableset" },
        "continueProcessingOnError": { "type": "boolean" },
        "rollbackParentOnChildError": { "type": "boolean" }
      }
    },
    "UpdateExt_output": {
      "type": "object",
      "properties": {
        "returnObj": {
          "$ref": "#/definitions/Ice.BOUpdErrorTableset",
          "description": "The dataset with list of errors occurred during update process."
        },
        "parameters": {
          "description": "output parameters",
          "type": "object",
          "properties": {
            "ds": { "$ref": "#/definitions/Erp.Tablesets.UpdExtLaborTableset" },
            "errorsOccurred": { "type": "boolean" }
          },
          "additionalProperties": { "type": "object" }
        }
      },
      "additionalProperties": { "type": "string" }
    }
  },
  "parameters": {
    "currentCompany": {
      "name": "currentCompany",
      "in": "path",
      "description": "ID of current company",
      "required": true,
      "type": "string"
    },
    "X-API-Key": {
      "name": "X-API-Key",
      "in": "header",
      "description": "Epicor API Key",
      "required": true,
      "type": "string"
    },
    "op_select": {
      "name": "$select",
      "in": "query",
      "description": "OData select comma delimited list of fields",
      "required": false,
      "type": "string"
    },
    "op_expand": {
      "name": "$expand",
      "in": "query",
      "description": "OData expand to child",
      "required": false,
      "type": "string"
    },
    "op_filter": {
      "name": "$filter",
      "in": "query",
      "description": "OData filter results",
      "required": false,
      "type": "string"
    },
    "op_orderby": {
      "name": "$orderby",
      "in": "query",
      "description": "OData sort results",
      "required": false,
      "type": "string"
    },
    "op_top": {
      "name": "$top",
      "in": "query",
      "description": "OData top results",
      "required": false,
      "type": "integer"
    },
    "op_skip": {
      "name": "$skip",
      "in": "query",
      "description": "OData skip results",
      "required": false,
      "type": "integer"
    },
    "op_count": {
      "name": "$count",
      "in": "query",
      "description": "odata.count value",
      "required": false,
      "type": "boolean"
    }
  },
  "tags": [
    {
      "name": "OData",
      "description": "OData operations, built on GetRows, GetList and UpdateExt standard methods"
    },
    {
      "name": "Custom methods",
      "description": "Custom methods, implementing all function calls"
    }
  ]
}